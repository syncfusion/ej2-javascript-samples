{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/diagram/network-diagram/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><link href=\"src/diagram/styles/diagram-common.css\" rel=\"stylesheet\">\n\n<div class=\"control-section\">\n<style>\n    @font-face {\n        font-family: 'e-ddb-icons1';\n        src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmdC1P4gAAAcgAAAAwaGVhZBJhohMAAADQAAAANmhoZWEIVQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAYAAAAAAHAAAAABm1heHABDgAUAAABCAAAACBuYW1lm+wy9gAAAfgAAAK1cG9zdLnsYngAAASwAAAAMAABAAAEAAAAAFwEAAAAAAAD+AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAAgNcenF8PPPUACwQAAAAAANelrs4AAAAA16WuzgAAAAAD+AN6AAAACAACAAAAAAAAAAEAAAACAAgAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAGAAAAAIAAAAAA/gDegACAAcAACUhCQEhATUhAQQC9P6G/YoBMQFF/YqGAjf+hgH0QwAAAAAAEgDeAAEAAAAAAAAAAQAAAAEAAAAAAAEAEwABAAEAAAAAAAIABwAUAAEAAAAAAAMAEwAbAAEAAAAAAAQAEwAuAAEAAAAAAAUACwBBAAEAAAAAAAYAEwBMAAEAAAAAAAoALABfAAEAAAAAAAsAEgCLAAMAAQQJAAAAAgCdAAMAAQQJAAEAJgCfAAMAAQQJAAIADgDFAAMAAQQJAAMAJgDTAAMAAQQJAAQAJgD5AAMAAQQJAAUAFgEfAAMAAQQJAAYAJgE1AAMAAQQJAAoAWAFbAAMAAQQJAAsAJAGzIERpYWdyYW1fU2hhcGVzX0ZPTlRSZWd1bGFyRGlhZ3JhbV9TaGFwZXNfRk9OVERpYWdyYW1fU2hhcGVzX0ZPTlRWZXJzaW9uIDEuMERpYWdyYW1fU2hhcGVzX0ZPTlRGb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQAUgBlAGcAdQBsAGEAcgBEAGkAYQBnAHIAYQBtAF8AUwBoAGEAcABlAHMAXwBGAE8ATgBUAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQAVgBlAHIAcwBpAG8AbgAgADEALgAwAEQAaQBhAGcAcgBhAG0AXwBTAGgAYQBwAGUAcwBfAEYATwBOAFQARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAdQBzAGkAbgBnACAAUwB5AG4AYwBmAHUAcwBpAG8AbgAgAE0AZQB0AHIAbwAgAFMAdAB1AGQAaQBvAHcAdwB3AC4AcwB5AG4AYwBmAHUAcwBpAG8AbgAuAGMAbwBtAAAAAAIAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgECAQMABlNoYXBlcwAA) format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    .e-ddb-icons1 {\n        font-family: 'e-ddb-icons1';\n        speak: none;\n        font-size: 16px;\n        font-style: normal;\n        font-weight: normal;\n        font-variant: normal;\n        text-transform: none;\n        line-height: 1;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .e-toggle-palette::before {\n        content: \"\\e700\"\n    }\n\n    .sb-mobile-palette {\n        width: 215px;\n        height: 559px;\n        float: left;\n    }\n\n    .sb-mobile-palette-bar {\n        display: none;\n    }\n\n    .sb-mobile-diagram {\n        width: calc(100% - 217px);\n        height: 559px;\n        float: left;\n        border: 1px solid rgba(0, 0, 0, 0.12);\n        border-left: none;\n    }\n\n    .container-fluid {\n        padding-bottom: 15px;\n    }\n\n    #dropArea .e-upload {\n        height: 0px;\n        width: 0px;\n        display: none !important;\n        border: none !important;\n    }\n\n    #dropArea {\n        height: 50px;\n        padding: 7px;\n        text-align: center;\n        position: relative;\n        border: 1px solid rgba(0, 0, 0, 0.12);\n        border-top: none;\n    }\n\n    @media (max-width: 550px) {\n        .sb-mobile-palette {\n            z-index: 19;\n            position: absolute;\n            display: none;\n            transition: transform 300ms linear, visibility 0s linear 300ms;\n            width: 39%;\n            height: 100%;\n        }\n\n        .sb-mobile-diagram {\n            width: 100%;\n            height: 100%;\n            float: left;\n            left: 0px;\n        }\n\n        .sb-mobile-palette-bar {\n            display: block;\n            width: 100%;\n            background: #fafafa;\n            padding: 10px 10px;\n            border: 0.5px solid #e0e0e0;\n            min-height: 40px;\n        }\n\n        #palette-icon {\n            font-size: 20px;\n        }\n    }\n\n    .sb-mobile-palette-open {\n        position: absolute;\n        display: block;\n        right: 15px;\n    }\n\n    .e-file-select-wrap {\n        display: none;\n    }\n\n    .material #networkDiagram #palette-space .e-accordion {\n        border: none;\n    }\n\n    .material #networkDiagram #palette-space {\n        border: 1px solid rgba(0, 0, 0, 0.12);\n    }\n\n    .material #dropArea {\n        border-width: 1px 0px 0px 0px;\n        border-style: solid;\n        border-color: rgba(0, 0, 0, 0.12);\n    }\n\n    .fabric #networkDiagram .sb-mobile-diagram {\n        border-left: 1px solid rgba(0, 0, 0, 0.12);\n    }\n\n    .bootstrap #networkDiagram .sb-mobile-diagram {\n        height: 554px;\n        margin-top: 5px;\n        border-radius: 4px;\n        border-left: 1px solid rgba(0, 0, 0, 0.12);\n    }\n</style>\n    <div id=\"networkDiagram\" style=\"width: 100%; height: 600px\">\n        <div class=\"sb-mobile-palette-bar\">\n            <div id=\"palette-icon\" style=\"float: right;\" role=\"button\" class=\"e-ddb-icons1 e-toggle-palette\"></div>\n        </div>\n        <div id=\"palette-space\" class=\"sb-mobile-palette\">\n            <div id=\"symbolpalette\" style=\"width:90%;\"></div>\n            <div id=\"dropArea\">\n                <button id=\"browse\">Import SVG files</button>\n                <input style=\"display: none; height: 0px;width: 0px;\" type=\"file\" name=\"UploadFiles\" id=\"fileupload\">\n            </div>\n        </div>\n        <div id=\"diagram-space\" class=\"sb-mobile-diagram\">\n            <div id=\"diagram\"></div>\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}\n\nfunction getNetworkNodeDefaults(node) {\n    node.style.strokeColor = '#5C90DF';\n    node.style.fill = 'transparent';\n    if (node.annotations.length !== 0) {\n        node.annotations[0].style.color = 'black';\n        node.annotations[0].style.fontSize = 12;\n        node.annotations[0].style = {\n            textWrapping: 'NoWrap',\n        };\n    }\n    if (node.ports.length !== 0) {\n        for (var i = 0; i < node.ports.length; i++) {\n            node.ports[i].visibility = ej.diagrams.PortVisibility.Hidden;\n        }\n    }\n    if (node.shape.type === 'Native') {\n        if (node.id === 'Server1') {\n            node.width = 50;\n            node.height = 65;\n        } else if (\n            node.id === 'WorkStation1' || node.id === 'WorkStation2' ||\n            node.id === 'WorkStation3' || node.id === 'WorkStation4'\n        ) {\n            node.width = 60;\n            node.height = 40;\n        } else if (\n            node.id === 'RemoteController1' || node.id === 'RemoteController2' ||\n            node.id === 'RemoteController3'\n        ) {\n            node.width = 25;\n            node.height = 50;\n        } else if (\n            node.id === 'modem1' || node.id === 'modem2' || node.id === 'modem3' ||\n            node.id === 'modem4' || node.id === 'modem5' || node.id === 'sensor'\n        ) {\n            node.width = 40;\n            node.height = 30;\n        } else if (\n            node.id === 'DeviceDriver1' || node.id === 'DeviceDriver2' ||\n            node.id === 'DeviceDriver3'\n        ) {\n            node.width = 30;\n            node.height = 33;\n        } else if (node.id === 'AnalogIO' || node.id === 'HMI') {\n            node.width = 40;\n            node.height = 50;\n        }\n        node.shape.scale = 'Stretch';\n    }\n    if (node.shape.type === 'Text') {\n        node.width = 127;\n        node.height = 40;\n        node.style = { bold: true, fontSize: 16 };\n    }\n    if (\n        node.id === 'connector1' || node.id === 'connector2' || node.id === 'connector3' ||\n        node.id === 'connector4' || node.id === 'connector5' || node.id === 'connector6'\n    ) {\n        if (node.id !== 'connector2' && node.id !== 'connector6') {\n            node.rotateAngle = 270;\n        }\n        node.width = 50;\n        node.height = 20;\n        node.style = { strokeColor: '#5C90DF', fill: 'white' };\n        node.shape = { type: 'Path', data: arrow };\n    }\n    return node;\n}\n\nfunction getConnectorDefaults(connector) {\n    connector.targetDecorator = { shape: 'Arrow', width: 8, height: 8, style: { fill: '#5C90DF', strokeColor: '#5C90DF' } };\n    connector.style.strokeColor = '#5C90DF';\n    if (connector.annotations.length !== 0) {\n        connector.annotations[0].style.fill = 'white';\n    }\n    return connector;\n}\n\nfunction getSymbolDefaults(symbol) {\n    if (symbol.id === 'arrow1') {\n        symbol.width = 75; symbol.height = 60;\n        symbol.offsetX = 160; symbol.offsetY = 135;\n        symbol.style.strokeColor = '#5C90DF';\n        symbol.style.fill = 'white';\n    } else {\n        if (symbol.id === 'remoteController') {\n            symbol.width = 25;\n        } else {\n            symbol.width = 40;\n        }\n        symbol.height = 40; symbol.offsetX = 20;\n        symbol.offsetY = 20;\n        symbol.shape.scale = 'Stretch';\n    }\n}\n\nfunction onFileRemove(args) {\n    args.postRawFile = false;\n}\n\nfunction addEvents() {\n    var isMobile = window.matchMedia('(max-width:550px)').matches;\n    if (isMobile) {\n        var paletteIcons = document.getElementById('palette-icon');\n        if (paletteIcons) {\n            paletteIcons.addEventListener('click', openPalette, false);\n        }\n    }\n}\n\nfunction openPalette() {\n    var paletteSpaces = document.getElementById('palette-space');\n    isMobile = window.matchMedia('(max-width:550px)').matches;\n    if (isMobile) {\n        if (!paletteSpaces.classList.contains('sb-mobile-palette-open')) {\n            paletteSpaces.classList.add('sb-mobile-palette-open');\n        }\n        else {\n            paletteSpaces.classList.remove('sb-mobile-palette-open');\n        }\n    }\n}\n\n/** * Network Diagram sample\n */\n// tslint:disable-next-line:max-func-body-length\n\n\n    var port = [\n        { id: 'port1', offset: { x: 0, y: 0.5 } },\n        { id: 'port2', offset: { x: 1, y: 0.5 } },\n        { id: 'port3', offset: { x: 0.5, y: 0.1 } },\n        { id: 'port4', offset: { x: 0.5, y: 0.92 } }\n    ];\n    var portrc = [\n        { id: 'port1', offset: { x: 0.05, y: 0.5 } },\n        { id: 'port2', offset: { x: 1, y: 0.5 } },\n        { id: 'port3', offset: { x: 0.85, y: 0.1 } },\n        { id: 'port4', offset: { x: 0.6, y: 0.97 } }\n    ];\n    var porthmi = [\n        { id: 'port1', offset: { x: 0.34, y: 0.5 } },\n        { id: 'port2', offset: { x: 0.75, y: 0.5 } },\n        { id: 'port3', offset: { x: 0.5, y: 0.05 } },\n        { id: 'port4', offset: { x: 0.6, y: 0.9 } }\n    ];\n    var port2 = [\n        { id: 'port1', offset: { x: 0.45, y: 0.5 } },\n        { id: 'port2', offset: { x: 0.97, y: 0.5 } },\n        { id: 'port3', offset: { x: 0.5, y: 0.97 } }\n    ];\n    var portmo = [\n        { id: 'port1', offset: { x: 0.02, y: 0.6 } },\n        { id: 'port2', offset: { x: 0.98, y: 0.625 } },\n        { id: 'port3', offset: { x: 0.5, y: 0.3 } },\n        { id: 'port4', offset: { x: 0.5, y: 0.97 } }\n    ];\n    var nodes = [\n        {\n            id: 'Server1', offsetX: 80, offsetY: 75,\n            shape: { type: 'Native', content: template1 },\n            annotations: [{ content: 'Server', offset: { x: 0.5, y: 0 }, margin: { bottom: 10 } }],\n            ports: port\n        },\n        {\n            id: 'WorkStation1', offsetX: 250, offsetY: 75,\n            shape: { type: 'Native', content: template2 },\n            annotations: [{ content: 'Work Station', margin: { bottom: 25 }, offset: { x: 1.4, y: 0.2 } }],\n            ports: port2\n        },\n        {\n            id: 'WorkStation2', offsetX: 350, offsetY: 75,\n            shape: { type: 'Native', content: template2 },\n            ports: port2\n        },\n        {\n            id: 'modem1', offsetX: 450, offsetY: 125,\n            shape: { type: 'Native', content: template3 },\n            annotations: [{ content: 'Modem', margin: { right: 25 }, offset: { x: 0, y: 0.5 } }],\n            ports: portmo\n        },\n        {\n            id: 'modem2', offsetX: 525, offsetY: 175,\n            shape: { type: 'Native', content: template3 },\n            annotations: [{ content: 'Modem1', margin: { bottom: 10 }, offset: { x: 0.5, y: 0 } }],\n            ports: portmo\n        },\n        {\n            id: 'RemoteController1', offsetX: 600, offsetY: 125,\n            shape: { type: 'Native', content: template4 },\n            annotations: [{ content: 'Remote Controller', margin: { bottom: 10 }, offset: { x: 0.5, y: 0 } }],\n            ports: portrc\n        },\n        {\n            id: 'modem3', offsetX: 350, offsetY: 205,\n            shape: { type: 'Native', content: template3 },\n            annotations: [{ content: 'Modem4', margin: { left: 35 }, offset: { x: 1, y: 0.5 } }],\n            ports: portmo\n        },\n        {\n            id: 'modem4', offsetX: 450, offsetY: 245,\n            shape: { type: 'Native', content: template3 },\n            annotations: [{ content: 'Modem2', offset: { x: 0.5, y: 1.3 } }],\n            ports: portmo\n        },\n        {\n            id: 'modem5', offsetX: 350, offsetY: 330,\n            shape: { type: 'Native', content: template3 },\n            annotations: [{ content: 'Modem3', margin: { right: 25 }, offset: { x: 0, y: 0.5 } }],\n            ports: portmo\n        },\n        {\n            id: 'WorkStation3', offsetX: 600, offsetY: 250,\n            shape: { type: 'Native', content: template2 },\n            annotations: [{ content: 'Remote Work Staions', margin: { top: 12 }, offset: { x: 0.5, y: 1 } }],\n            ports: port2\n        },\n        {\n            id: 'WorkStation4', offsetX: 600, offsetY: 335,\n            shape: { type: 'Native', content: template2 },\n            annotations: [{ content: 'Portable Work Staions', margin: { top: 12 }, offset: { x: 0.5, y: 1 } }],\n            ports: port2\n        },\n        {\n            id: 'RemoteController2', offsetX: 80, offsetY: 400,\n            shape: { type: 'Native', content: template4 },\n            annotations: [{ content: 'Control Logic', margin: { top: 8 }, offset: { x: 0.5, y: 1 } }],\n            ports: portrc\n        },\n        {\n            id: 'RemoteController3', offsetX: 500, offsetY: 400,\n            shape: { type: 'Native', content: template4 },\n            annotations: [{ content: 'Control Logic', margin: { top: 8 }, offset: { x: 0.5, y: 1 } }],\n            ports: portrc\n        },\n        {\n            id: 'AnalogIO', offsetX: 160, offsetY: 500,\n            shape: { type: 'Native', content: template5 },\n            annotations: [{ content: 'Analog IO', margin: { top: 13 }, offset: { x: 0.5, y: 1 } }],\n            ports: porthmi\n        },\n        {\n            id: 'sensor', offsetX: 260, offsetY: 500,\n            shape: { type: 'Native', content: template6 },\n            annotations: [{ content: 'Sensor', margin: { top: 10 }, offset: { x: 0.5, y: 1 } }],\n            ports: port\n        },\n        {\n            id: 'DeviceDriver1', offsetX: 360, offsetY: 500,\n            shape: { type: 'Native', content: template7 },\n            annotations: [{ content: 'DriverA', offset: { x: 0.5, y: 1.3 } }],\n            ports: porthmi\n        },\n        {\n            id: 'DeviceDriver2', offsetX: 460, offsetY: 500,\n            shape: { type: 'Native', content: template7 },\n            annotations: [{ content: 'DriverB', offset: { x: 0.5, y: 1.3 } }],\n            ports: porthmi\n        },\n        {\n            id: 'DeviceDriver3', offsetX: 550, offsetY: 500,\n            shape: { type: 'Native', content: template7 },\n            annotations: [{ content: 'DriverC', offset: { x: 0.5, y: 1.3 } }],\n            ports: porthmi\n        },\n        {\n            id: 'HMI', offsetX: 625, offsetY: 450,\n            shape: { type: 'Native', content: template8 },\n            annotations: [{ content: 'HMI', offset: { x: 0.5, y: 1.3 } }],\n            ports: port\n        },\n        {\n            id: 'controlNet', offsetX: 218.5, offsetY: 380,\n            shape: { type: 'Text', content: 'Control Net', }\n        },\n        {\n            id: 'etherNet', offsetX: 218.5, offsetY: 190,\n            shape: { type: 'Text', content: 'Ethernet', }\n        },\n        {\n            id: 'deviceNet', offsetX: 345.5, offsetY: 555,\n            shape: { type: 'Text', content: 'Device Net', }\n        },\n        {\n            id: 'connector1', offsetX: 99, offsetY: 175\n        },\n        {\n            id: 'connector2', offsetX: 250, offsetY: 125\n        },\n        {\n            id: 'connector3', offsetX: 99, offsetY: 300\n        },\n        {\n            id: 'connector4', offsetX: 178, offsetY: 435\n        },\n        {\n            id: 'connector5', offsetX: 378, offsetY: 435\n        },\n        {\n            id: 'connector6', offsetX: 370, offsetY: 380\n        }\n    ];\n    var connectors = [\n        {\n            id: 'connectora', sourceID: 'Server1', targetID: 'WorkStation1',\n            targetPortID: 'port1'\n        },\n        {\n            id: 'connectorawork', sourceID: 'WorkStation1', targetID: 'WorkStation2',\n            sourcePortID: 'port2', targetPortID: 'port1'\n        },\n        {\n            id: 'connectoraworkm', sourceID: 'WorkStation2', targetID: 'modem1', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            targetPortID: 'port3', sourcePortID: 'port2'\n        },\n        {\n            id: 'connectorm1m2', sourceID: 'modem2', targetID: 'modem1', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port1', targetPortID: 'port4'\n        },\n        {\n            id: 'connectorm2m3', sourceID: 'modem2', targetID: 'RemoteController1', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port2', targetPortID: 'port4'\n        },\n        {\n            id: 'connectorws2m3', sourceID: 'WorkStation2', targetID: 'modem3',\n            sourcePortID: 'port3', targetPortID: 'port3'\n        },\n        {\n            id: 'connectorws2m4', sourceID: 'modem4', targetID: 'modem3', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port1', targetPortID: 'port4'\n        },\n        {\n            id: 'connectorm3m4', sourceID: 'modem5', targetID: 'modem3',\n            sourcePortID: 'port3', targetPortID: 'port4'\n        },\n        {\n            id: 'connectorm4ws3', sourceID: 'modem5', targetID: 'WorkStation4',\n            sourcePortID: 'port2', targetPortID: 'port1'\n        },\n        {\n            id: 'connectorm4m5', sourceID: 'modem4', targetID: 'WorkStation3',\n            sourcePortID: 'port2', targetPortID: 'port1'\n        },\n        {\n            id: 'connectorr2r3', sourceID: 'RemoteController2', targetID: 'RemoteController3',\n            targetPortID: 'port1'\n        },\n        {\n            id: 'connectorr2r3qq', sourceID: 'Server1', targetID: 'RemoteController2',\n            sourcePortID: 'port4'\n        },\n        {\n            id: 'connectorm3se1', sourceID: 'modem3', targetID: 'Server1', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port1', targetPortID: 'port4'\n        },\n        {\n            id: 'connectorws2aio1', sourceID: 'RemoteController2', targetID: 'AnalogIO',\n            type: 'Orthogonal', sourcePortID: 'port2', targetPortID: 'port3'\n        },\n        {\n            id: 'connectorb', sourceID: 'RemoteController2', targetID: 'sensor', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port2', targetPortID: 'port3'\n        },\n        {\n            id: 'connectord1', sourceID: 'RemoteController2', targetID: 'DeviceDriver1', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port2', targetPortID: 'port3'\n        },\n        {\n            id: 'connectord2', sourceID: 'RemoteController2', targetID: 'DeviceDriver2', type: 'Orthogonal',\n            segments: [{ type: 'Orthogonal', length: 25 }],\n            sourcePortID: 'port2', targetPortID: 'port3'\n        },\n        {\n            id: 'connectordh1d3', sourceID: 'HMI', targetID: 'DeviceDriver3', type: 'Orthogonal',\n            sourcePortID: 'port1', targetPortID: 'port3'\n        },\n        {\n            id: 'connectordh1d2', sourceID: 'HMI', type: 'Orthogonal', targetID: 'DeviceDriver2',\n            sourcePortID: 'port1', targetPortID: 'port3'\n        }\n    ];\n    //initialize the diagram control\n    var diagram = new ej.diagrams.Diagram({\n        // sets the height and width of the diagram.\n        width: '100%', height: '100%',\n        // sets the nodes and connectors of the diagram.\n        nodes: nodes, connectors: connectors,\n        //Sets the default values of a node.\n        getNodeDefaults: getNetworkNodeDefaults,\n        //Sets the default values of a Connector.\n        getConnectorDefaults: getConnectorDefaults,\n        // sets snap settings to the diagram.\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\n        created: created\n    });\n    diagram.appendTo('#diagram');\n    var symbols = [\n        { id: 'server', shape: { type: 'Native', content: template1 } },\n        { id: 'workStation', shape: { type: 'Native', content: template2 } },\n        { id: 'modem', shape: { type: 'Native', content: template3 } },\n        { id: 'remoteController', shape: { type: 'Native', content: template4 } },\n        { id: 'hmi', shape: { type: 'Native', content: template8 } },\n        { id: 'analogIO', shape: { type: 'Native', content: template5 } },\n        { id: 'sensor', shape: { type: 'Native', content: template6 } },\n        { id: 'deviceDriver', shape: { type: 'Native', content: template7 } },\n        { id: 'Virtual-Server-Copy', shape: { type: 'Native', content: template10 } },\n        { id: 'user', shape: { type: 'Native', content: template11 } },\n        { id: 'User-group', shape: { type: 'Native', content: template12 } },\n        { id: 'UPS', shape: { type: 'Native', content: template13 } },\n        { id: 'Tablet', shape: { type: 'Native', content: template14 } },\n        { id: 'Switch', shape: { type: 'Native', content: template15 } },\n        { id: 'Subwoofer', shape: { type: 'Native', content: template16 } },\n        { id: 'Speaker', shape: { type: 'Native', content: template17 } },\n        { id: 'Security-camera', shape: { type: 'Native', content: template18 } },\n        { id: 'arrow1', shape: { type: 'Path', data: arrow } }\n    ];\n    var sourcePoint = { x: 0, y: 0 };\n    var targetPoint = { x: 40, y: 40 };\n    var targetDecorator = { shape: 'Arrow' };\n    var style = { strokeWidth: 2 };\n    var connectorSymbols = [\n        {\n            id: 'link11', type: 'Straight', sourcePoint: sourcePoint, targetPoint: targetPoint,\n            targetDecorator: targetDecorator, style: style\n        },\n        {\n            id: 'link12', type: 'Orthogonal', sourcePoint: sourcePoint, targetPoint: targetPoint,\n            targetDecorator: targetDecorator, style: style\n        }\n    ];\n    var palettes = [\n        { id: 'network', expanded: true, symbols: symbols, title: 'Network Shapes' },\n        { id: 'connectors', expanded: true, symbols: connectorSymbols, title: 'Connectors' }\n    ];\n    var palette = new ej.diagrams.SymbolPalette({\n        // sets the expandable mode of the symbol palette.\n        expandMode: 'Multiple',\n        // sets the palettes to be displayed in the symbol palette.\n        palettes: palettes,\n        // sets the width and height of the palette.\n        width: '100%', height: 'calc(100% - 50px)',\n        symbolHeight: 48, symbolWidth: 48,\n        // sets the default values for the symbols in the symbol palette.\n        getNodeDefaults: getSymbolDefaults,\n        getSymbolInfo: function (symbol) { return { fit: true }; }\n    });\n    palette.appendTo('#symbolpalette');\n    var dropElement = document.getElementsByClassName('control-fluid')[0];\n\n    var button = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    button.appendTo('#browse');\n\n    var uploadObj = new ej.inputs.Uploader({\n        asyncSettings: {\n            saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\n            removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\n        }, dropArea: dropElement,\n        success: onUploadSuccess,\n        removing: onFileRemove\n    });\n    uploadObj.appendTo('#fileupload');\n    button.element.onclick = function () {\n        document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\n        return false;\n    };\n    var id = 0;\n\n    function onUploadSuccess(arg) {\n        var file1 = arg.file;\n        var file = file1.rawFile;\n        var reader = new FileReader();\n        reader.addEventListener('load', function (event) {\n            var shape;\n            var shapeContent = getNativeContent(event.target.result);\n            shape = { id: 'newshape' + id.toString(), shape: { type: 'Native', content: shapeContent } };\n            palette.addPaletteItem('network', shape);\n        });\n        id++;\n        reader.readAsText(file);\n        uploadObj.clearAll();\n    }\n\n    function getNativeContent(content) {\n        var attr = { id: 'svgdiv' };\n        var div = createHtmlElement('div', attr);\n        document.body.appendChild(div);\n        div.innerHTML = content;\n        var svgContent = div.getElementsByTagName('svg')[0].outerHTML;\n        div.parentElement.removeChild(div);\n        return svgContent;\n    }\n\n    function created() {\n        addEvents();\n        diagram.fitToPage();\n    }\n\n"}