{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/diagram/uml-class-diagram/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"diagram\" class=\"diagramclass\"></div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Class Diagram\n */\n\nvar diagram;\n\nfunction getNodeDefaults(obj) {\n  obj.style = { fill: \"#26A0DA\", strokeColor: \"white\" };\n  return obj;\n}\nfunction getConnectorDefaults(connector) {\nreturn connector;\n}\nfunction setNodeTemplate(node) {\n  if (node.annotations.length > 0) {\n    for (var i = 0; i < node.annotations.length; i++) {\n      node.annotations[i].style.color = \"white\";\n    }\n  }\n}\nfunction createConnector(Id, sourceID, targetID) {\n  var connector = {};\n  connector.id = Id;\n  connector.sourceID = sourceID;\n  connector.targetID = targetID;\n  return connector;\n}\nfunction createNode(Id, offsetX, offsetY, className) {\n  var node = {};\n  node.id = Id;\n  node.offsetX = offsetX;\n  node.offsetY = offsetY;\n  node.shape = {\n    type: \"UmlClassifier\",\n    class: {\n      name: className\n    },\n    classifier: \"Class\"\n  };\n  return node;\n}\nfunction createProperty(name, type) {\n  return { name: name, type: type };\n}\nfunction createMethods(name, type) {\n  return { name: name, type: type };\n}\n\n\n  var nodes = [\n    {\n      id: \"Patient\",\n      shape: {\n        type: \"UmlClassifier\",\n        class: {\n          name: \"Patient\",\n          attributes: [\n            createProperty(\"accepted\", \"Date\"),\n            createProperty(\"sickness\", \"History\"),\n            createProperty(\"prescription\", \"String[*]\"),\n            createProperty(\"allergies\", \"String[*]\")\n          ],\n          methods: [createMethods(\"getHistory\", \"History\")]\n        },\n        classifier: \"Class\"\n      },\n      offsetX: 200,\n      offsetY: 250\n    },\n    {\n      id: \"Doctor\",\n      shape: {\n        type: \"UmlClassifier\",\n        class: {\n          name: \"Doctor\",\n          attributes: [\n            createProperty(\"specialist\", \"String[*]\"),\n            createProperty(\"locations\", \"String[*]\")\n          ]\n        },\n        classifier: \"Class\"\n      },\n      offsetX: 240,\n      offsetY: 545\n    },\n    {\n      id: \"Person\",\n      shape: {\n        type: \"UmlClassifier\",\n        class: {\n          name: \"Person\",\n          attributes: [\n            createProperty(\"name\", \"Name\"),\n            createProperty(\"title\", \"String[*]\"),\n            createProperty(\"gender\", \"Gender\")\n          ]\n        },\n        classifier: \"Class\"\n      },\n      offsetX: 405,\n      offsetY: 105\n    },\n    {\n      id: \"Hospital\",\n      shape: {\n        type: \"UmlClassifier\",\n        class: {\n          name: \"Hospital\",\n          attributes: [\n            createProperty(\"name\", \"Name\"),\n            createProperty(\"address\", \"Address\"),\n            createProperty(\"phone\", \"Phone\")\n          ],\n          methods: [createMethods(\"getDepartment\", \"String\")]\n        },\n        classifier: \"Class\"\n      },\n      offsetX: 638,\n      offsetY: 100\n    },\n    {\n      id: \"Department\",\n      shape: {\n        type: \"UmlClassifier\",\n        class: {\n          name: \"Department\",\n          methods: [createMethods(\"getStaffCount\", \"Int\")]\n        },\n        classifier: \"Class\"\n      },\n      offsetX: 638,\n      offsetY: 280\n    },\n    {\n      id: \"Staff\",\n      shape: {\n        type: \"UmlClassifier\",\n        class: {\n          name: \"Staff\",\n          attributes: [\n            createProperty(\"joined\", \"Date\"),\n            createProperty(\"education\", \"string[*]\"),\n            createProperty(\"certification\", \"string[*]\"),\n            createProperty(\"languages\", \"string[*]\")\n          ],\n          methods: [\n            createMethods(\"isDoctor\", \"bool\"),\n            createMethods(\"getHistory\", \"bool\")\n          ]\n        },\n        classifier: \"Class\"\n      },\n      offsetX: 635,\n      offsetY: 455\n    },\n    createNode(\"OperationStaff\", 410, 455, \"OperationStaff\"),\n    createNode(\"Nurse\", 410, 545, \"Nurse\"),\n    createNode(\"Surgeon\", 240, 665, \"Surgeon\"),\n    createNode(\"AdministrativeStaff\", 632, 605, \"AdministrativeStaff\"),\n    createNode(\"FrontDeskStaff\", 630, 695, \"FrontDeskStaff\"),\n    createNode(\"TechnicalStaff\", 928, 445, \"TechnicalStaff\"),\n    createNode(\"Technician\", 815, 535, \"Technician\"),\n    createNode(\"Technologist\", 1015, 535, \"Technologist\"),\n    createNode(\"SurgicalTechnologist\", 1015, 630, \"SurgicalTechnologist\")\n  ];\n  var connectors = [\n    createConnector(\"connect1\", \"Patient\", \"Person\"),\n    createConnector(\"connect2\", \"Person\", \"Hospital\"),\n    createConnector(\"connect3\", \"Department\", \"Hospital\"),\n    createConnector(\"connect4\", \"OperationStaff\", \"Patient\"),\n    createConnector(\"connect5\", \"Doctor\", \"OperationStaff\"),\n    createConnector(\"connect6\", \"Nurse\", \"OperationStaff\"),\n    createConnector(\"connect7\", \"Surgeon\", \"Doctor\"),\n    createConnector(\"connect8\", \"FrontDeskStaff\", \"AdministrativeStaff\"),\n    createConnector(\"connect9\", \"Technician\", \"TechnicalStaff\"),\n    createConnector(\"connect10\", \"Technologist\", \"TechnicalStaff\"),\n    createConnector(\"connect11\", \"SurgicalTechnologist\", \"Technologist\"),\n    createConnector(\"connect12\", \"Staff\", \"Department\"),\n    createConnector(\"connect13\", \"Staff\", \"Person\"),\n    createConnector(\"connect14\", \"OperationStaff\", \"Staff\"),\n    createConnector(\"connect15\", \"AdministrativeStaff\", \"Staff\"),\n    createConnector(\"connect16\", \"TechnicalStaff\", \"Staff\")\n  ];\n  diagram = new ej.diagrams.Diagram({\n    width: \"100%\",\n    height: 700,\n    nodes: nodes,\n    connectors: connectors,\n    getNodeDefaults: getNodeDefaults,\n    getConnectorDefaults: getConnectorDefaults,\n    setNodeTemplate: setNodeTemplate\n  });\n  diagram.appendTo(\"#diagram\");\n\n"}