{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/uml-class-diagram/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"diagram\" class=\"diagramclass\"></div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Class Diagram\r\n */\r\n\r\nvar diagram;\r\n\r\nfunction getNodeDefaults(obj) {\r\n  obj.style = { fill: \"#26A0DA\", strokeColor: \"white\" };\r\n  return obj;\r\n}\r\nfunction getConnectorDefaults(connector) {\r\nreturn connector;\r\n}\r\nfunction setNodeTemplate(node) {\r\n  if (node.annotations.length > 0) {\r\n    for (var i = 0; i < node.annotations.length; i++) {\r\n      node.annotations[i].style.color = \"white\";\r\n    }\r\n  }\r\n}\r\nfunction createConnector(Id, sourceID, targetID) {\r\n  var connector = {};\r\n  connector.id = Id;\r\n  connector.sourceID = sourceID;\r\n  connector.targetID = targetID;\r\n  return connector;\r\n}\r\nfunction createNode(Id, offsetX, offsetY, className) {\r\n  var node = {};\r\n  node.id = Id;\r\n  node.offsetX = offsetX;\r\n  node.offsetY = offsetY;\r\n  node.shape = {\r\n    type: \"UmlClassifier\",\r\n    classShape: {\r\n      name: className\r\n    },\r\n    classifier: \"Class\"\r\n  };\r\n  return node;\r\n}\r\nfunction createProperty(name, type) {\r\n  return { name: name, type: type };\r\n}\r\nfunction createMethods(name, type) {\r\n  return { name: name, type: type };\r\n}\r\n\r\n\r\n  var nodes = [\r\n    {\r\n      id: \"Patient\",\r\n      shape: {\r\n        type: \"UmlClassifier\",\r\n        classShape: {\r\n          name: \"Patient\",\r\n          attributes: [\r\n            createProperty(\"accepted\", \"Date\"),\r\n            createProperty(\"sickness\", \"History\"),\r\n            createProperty(\"prescription\", \"String[*]\"),\r\n            createProperty(\"allergies\", \"String[*]\")\r\n          ],\r\n          methods: [createMethods(\"getHistory\", \"History\")]\r\n        },\r\n        classifier: \"Class\"\r\n      },\r\n      offsetX: 200,\r\n      offsetY: 250\r\n    },\r\n    {\r\n      id: \"Doctor\",\r\n      shape: {\r\n        type: \"UmlClassifier\",\r\n        classShape: {\r\n          name: \"Doctor\",\r\n          attributes: [\r\n            createProperty(\"specialist\", \"String[*]\"),\r\n            createProperty(\"locations\", \"String[*]\")\r\n          ]\r\n        },\r\n        classifier: \"Class\"\r\n      },\r\n      offsetX: 240,\r\n      offsetY: 545\r\n    },\r\n    {\r\n      id: \"Person\",\r\n      shape: {\r\n        type: \"UmlClassifier\",\r\n        classShape: {\r\n          name: \"Person\",\r\n          attributes: [\r\n            createProperty(\"name\", \"Name\"),\r\n            createProperty(\"title\", \"String[*]\"),\r\n            createProperty(\"gender\", \"Gender\")\r\n          ]\r\n        },\r\n        classifier: \"Class\"\r\n      },\r\n      offsetX: 405,\r\n      offsetY: 105\r\n    },\r\n    {\r\n      id: \"Hospital\",\r\n      shape: {\r\n        type: \"UmlClassifier\",\r\n        classShape: {\r\n          name: \"Hospital\",\r\n          attributes: [\r\n            createProperty(\"name\", \"Name\"),\r\n            createProperty(\"address\", \"Address\"),\r\n            createProperty(\"phone\", \"Phone\")\r\n          ],\r\n          methods: [createMethods(\"getDepartment\", \"String\")]\r\n        },\r\n        classifier: \"Class\"\r\n      },\r\n      offsetX: 638,\r\n      offsetY: 100\r\n    },\r\n    {\r\n      id: \"Department\",\r\n      shape: {\r\n        type: \"UmlClassifier\",\r\n        classShape: {\r\n          name: \"Department\",\r\n          methods: [createMethods(\"getStaffCount\", \"Int\")]\r\n        },\r\n        classifier: \"Class\"\r\n      },\r\n      offsetX: 638,\r\n      offsetY: 280\r\n    },\r\n    {\r\n      id: \"Staff\",\r\n      shape: {\r\n        type: \"UmlClassifier\",\r\n        classShape: {\r\n          name: \"Staff\",\r\n          attributes: [\r\n            createProperty(\"joined\", \"Date\"),\r\n            createProperty(\"education\", \"string[*]\"),\r\n            createProperty(\"certification\", \"string[*]\"),\r\n            createProperty(\"languages\", \"string[*]\")\r\n          ],\r\n          methods: [\r\n            createMethods(\"isDoctor\", \"bool\"),\r\n            createMethods(\"getHistory\", \"bool\")\r\n          ]\r\n        },\r\n        classifier: \"Class\"\r\n      },\r\n      offsetX: 635,\r\n      offsetY: 455\r\n    },\r\n    createNode(\"OperationStaff\", 410, 455, \"OperationStaff\"),\r\n    createNode(\"Nurse\", 410, 545, \"Nurse\"),\r\n    createNode(\"Surgeon\", 240, 665, \"Surgeon\"),\r\n    createNode(\"AdministrativeStaff\", 632, 605, \"AdministrativeStaff\"),\r\n    createNode(\"FrontDeskStaff\", 630, 695, \"FrontDeskStaff\"),\r\n    createNode(\"TechnicalStaff\", 928, 445, \"TechnicalStaff\"),\r\n    createNode(\"Technician\", 815, 535, \"Technician\"),\r\n    createNode(\"Technologist\", 1015, 535, \"Technologist\"),\r\n    createNode(\"SurgicalTechnologist\", 1015, 630, \"SurgicalTechnologist\")\r\n  ];\r\n  var connectors = [\r\n    createConnector(\"connect1\", \"Patient\", \"Person\"),\r\n    createConnector(\"connect2\", \"Person\", \"Hospital\"),\r\n    createConnector(\"connect3\", \"Department\", \"Hospital\"),\r\n    createConnector(\"connect4\", \"OperationStaff\", \"Patient\"),\r\n    createConnector(\"connect5\", \"Doctor\", \"OperationStaff\"),\r\n    createConnector(\"connect6\", \"Nurse\", \"OperationStaff\"),\r\n    createConnector(\"connect7\", \"Surgeon\", \"Doctor\"),\r\n    createConnector(\"connect8\", \"FrontDeskStaff\", \"AdministrativeStaff\"),\r\n    createConnector(\"connect9\", \"Technician\", \"TechnicalStaff\"),\r\n    createConnector(\"connect10\", \"Technologist\", \"TechnicalStaff\"),\r\n    createConnector(\"connect11\", \"SurgicalTechnologist\", \"Technologist\"),\r\n    createConnector(\"connect12\", \"Staff\", \"Department\"),\r\n    createConnector(\"connect13\", \"Staff\", \"Person\"),\r\n    createConnector(\"connect14\", \"OperationStaff\", \"Staff\"),\r\n    createConnector(\"connect15\", \"AdministrativeStaff\", \"Staff\"),\r\n    createConnector(\"connect16\", \"TechnicalStaff\", \"Staff\")\r\n  ];\r\n  diagram = new ej.diagrams.Diagram({\r\n    width: \"100%\",\r\n    height: 700,\r\n    nodes: nodes,\r\n    connectors: connectors,\r\n    getNodeDefaults: getNodeDefaults,\r\n    getConnectorDefaults: getConnectorDefaults,\r\n    setNodeTemplate: setNodeTemplate\r\n  });\r\n  diagram.appendTo(\"#diagram\");\r\n\r\n"}