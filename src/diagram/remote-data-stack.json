{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/remote-data/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"diagram\" class=\"diagramclass\">\n    </div>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Remote Data binding sample\r\n */\r\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.HierarchicalTree);\r\n\r\n    //Initializes diagram control\r\n    var diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: 490,\r\n        //Configrues hierarchical tree layout\r\n        layout: {\r\n            type: 'HierarchicalTree', margin: { left: 0, right: 0, top: 100, bottom: 0 },\r\n            verticalSpacing: 40,\r\n            getLayoutInfo: function (node, options) {\r\n                if (options.level === 3) {\r\n                    node.style.fill = '#3c418d';\r\n                }\r\n                if (options.level === 2) {\r\n                    node.style.fill = '#108d8d';\r\n                    options.type = 'Center';\r\n                    options.orientation = 'Horizontal';\r\n                }\r\n                if (options.level === 1) {\r\n                    node.style.fill = '#822b86';\r\n                }\r\n            }\r\n        },\r\n        //Sets the default values of nodes\r\n        getNodeDefaults: function (obj) {\r\n            obj.width = 80;\r\n            obj.height = 40;\r\n            obj.shape = { type: 'Basic', shape: 'Rectangle' };\r\n            obj.style = { fill: '#048785', strokeColor: 'Transparent' };\r\n            return obj;\r\n        },\r\n        //Sets the default values of connector\r\n        getConnectorDefaults: function (connector) {\r\n            connector.type = 'Orthogonal';\r\n            connector.style.strokeColor = '#048785';\r\n            connector.targetDecorator.shape = 'None';\r\n            return connector;\r\n        },\r\n        //Configures data source\r\n        dataSourceSettings: {\r\n            id: 'EmployeeID', parentId: 'ReportsTo',\r\n            dataSource: new ej.data.DataManager(\r\n                { url: 'https://mvc.syncfusion.com/Services/Northwnd.svc/', crossDomain: true },\r\n                new ej.data.Query().from('Employees').select('EmployeeID,ReportsTo,FirstName').take(9)\r\n            ),\r\n            //binds the external data with node\r\n            doBinding: function (nodeModel, data, diagram) {\r\n                nodeModel.annotations = [{\r\n                    content: data.FirstName,\r\n                    style: { color: 'white' }\r\n                }];\r\n            }\r\n        },\r\n        //Disables all interactions except zoom/pan\r\n        tool: ej.diagrams.DiagramTools.ZoomPan,\r\n        snapSettings: { constraints: 0 }\r\n    });\r\n    diagram.appendTo('#diagram');\r\n"}