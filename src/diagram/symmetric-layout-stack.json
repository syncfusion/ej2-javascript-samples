{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/symmetric-layout/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody><tr>\n            <td style=\"width:30%;\"> Spring Length </td>\n            <td style=\"width: 60%\">\n                <input id=\"springlength\" type=\"text\">\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width:30%;\">Spring Factor</td>\n            <td style=\"width: 60%\">\n                <input id=\"springfactor\" type=\"text\">\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width:30%;\">Maximum Iteration</td>\n            <td style=\"width: 60%\">\n                <input id=\"maxiteration\" type=\"text\">\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 50%\"></td>\n            <td style=\"width: 50%; padding-top:10px\">\n                <button id=\"refresh\" type=\"button\">Refresh</button>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Sample for Symmentric layout.\r\n */\r\n\r\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.SymmetricLayout);\r\n\r\n\r\n\r\n\r\n    //Initializtion of the diagram.\r\n    var diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: '550px',\r\n        layout: { type: 'SymmetricalLayout', springLength: 80, springFactor: 0.8, maxIteration: 500, margin: { left: 20, top: 20 } },\r\n        //Set the parent and child relationship of DataSource.\r\n        dataSourceSettings: { id: 'Id', parentId: 'Source', dataSource: new ej.data.DataManager(window.symmetricData) },\r\n        //Set the constraints of the SnapSettings\r\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\r\n        //Set the default values of Node\r\n        getNodeDefaults: function (obj) {\r\n            obj.height = 20;\r\n            obj.width = 20;\r\n            obj.style = { fill: 'transparent', strokeWidth: 2 };\r\n            return obj;\r\n        },\r\n        //Sets the default values of connector\r\n        getConnectorDefaults: function (connector) {\r\n            connector.targetDecorator.shape = 'None';\r\n            connector.type = 'Straight';\r\n            return connector;\r\n        },\r\n        setNodeTemplate: function (obj) {\r\n            var shape = { type: 'Basic', shape: 'Ellipse' };\r\n            if (!(obj.data.Type) || obj.data.Type === 'Server') {\r\n                obj.width = 30;\r\n                obj.height = 30;\r\n                obj.shape = {\r\n                    type: 'Native', content: '<svg width=\"50\" height=\"65\"><g id=\"Server2_shape\" fill=\"transparent\" stroke=\"transparent\" stroke-width=\"1\"' +\r\n                        ' opacity=\"1\" stroke-dasharray=\"\" transform=\"translate(-15.517241379310343,-2.6329421835819375),' +\r\n                        'scale(1.7241379310344827,1.3774530437803194)\" width=\"50\" height=\"65\"><g><g xmlns=\"http://www.w3.org/2000/svg\">' +\r\n                        '<polygon fill=\"#DBD5DA\" points=\"37.3,7.3 19.4,17.8 9.8,12.1 9.2,12.9 19,18.7 19,49 20,49 20,18.5 37.8,8.1  \">' +\r\n                        '</polygon>    <polygon fill=\"#E5DCE1\" points=\"36.3,7.8 28.2,2.6 10.5,12.5 19.5,17.8  \"></polygon> <polygon' +\r\n                        ' fill=\"#BBB5B9\" points=\"20,18.5 37,8.6 36.9,38.4 20,47.9  \"></polygon> <polygon fill=\"#DBD2D7\" ' +\r\n                        'points=\"10,13.4 19,18.7 19,48.2 10,42.7  \"></polygon>    <path fill=\"#656666\" d=\"M19.2,49.1c-0.5,' +\r\n                        '0-0.9-0.1-1.3-0.4L10.2,44C9.4,43.5,9,42.7,9,41.8V13.6c0-0.9,0.5-1.7,1.3-2.2l16.7-9.2   c0.8-0.4,1.8-0.4,' +\r\n                        '2.5,0.1L36.8,7C37.6,7.5,38,8.2,38,9.1l-0.1,28.4c0,0.9-0.5,1.7-1.3,2.2l-16.2,9.1C20.1,49,19.6,49.1,19.2,49.1z ' +\r\n                        'M28.1,2.9c-0.3,0-0.5,0.1-0.7,0.2l-16.6,9.2c-0.5,0.3-0.8,0.8-0.8,1.3v28.2c0,0.5,0.3,1,0.7,1.3l7.7,4.8c0.5,0.3,' +\r\n                        '1.1,0.3,1.5,0  l16.2-9.1c0.5-0.3,0.8-0.8,0.8-1.3L37,9.1c0-0.5-0.3-1-0.7-1.3L29,3.2C28.7,3,28.4,2.9,28.1,2.9z\">' +\r\n                        '</path><ellipse fill=\"#656666\"  cx=\"14.3\" cy=\"40.2\" rx=\"0.6\" ry=\"1.1\"></ellipse> <polygon fill=\"#656666\" ' +\r\n                        'points=\"10.9,22.6 10.9,22.6 10.9,22.6  \"></polygon> <polygon fill=\"#656666\" class=\"st4ed\" points=\"11.9,' +\r\n                        '22 11.9,23.2 16.7,26 16.7,24.9 \"></polygon><polygon fill=\"#656666\" points=\"10.9,18.9 10.9,18.9 10.9,18.9\"></polygon>' +\r\n                        '<polygon fill=\"#656666\" points=\"11.9,18.4 11.9,19.5 16.7,22.4 16.7,21.2  \"></polygon></g></g></g></svg>'\r\n                };\r\n            }\r\n            else {\r\n                obj.shape = shape;\r\n                obj.style = { fill: 'orange' };\r\n            }\r\n        },\r\n        tool: ej.diagrams.DiagramTools.ZoomPan\r\n    });\r\n    diagram.appendTo('#diagram');\r\n    diagram.pan(0, 0);\r\n    var springLength = new ej.inputs.NumericTextBox({\r\n        format: '###.##',\r\n        value: 80,\r\n        step: 1,\r\n    });\r\n    springLength.appendTo('#springlength');\r\n    var springfactor = new ej.inputs.NumericTextBox({\r\n        format: '###.##',\r\n        value: 0.8,\r\n        step: 0.1,\r\n    });\r\n    springfactor.appendTo('#springfactor');\r\n    var maxiteration = new ej.inputs.NumericTextBox({\r\n        format: '###.##',\r\n        value: 500,\r\n        step: 1,\r\n    });\r\n    maxiteration.appendTo('#maxiteration');\r\n    var layout = new ej.buttons.Button({ cssClass: 'e-small' });\r\n    layout.appendTo('#refresh');\r\n    //used to apply the alignment of the layout. \r\n    document.getElementById('refresh').onclick = function () {\r\n        diagram.layout.springLength = springLength.value;\r\n        diagram.layout.springFactor = springfactor.value;\r\n        diagram.layout.maxIteration = maxiteration.value;\r\n        diagram.doLayout();\r\n    };\r\n"}