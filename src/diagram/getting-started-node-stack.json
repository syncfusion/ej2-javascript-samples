{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/getting-started-node/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n\n<div class=\"col-lg-8 control-section\">\n        <style>\n                .image-pattern-style {\n                    background-color: white;\n                    background-size: contain;\n                    background-repeat: no-repeat;\n                    height: 75px;\n                    width: calc((100% - 12px) / 3);\n                    cursor: pointer;\n                    border: 1px solid #D5D5D5;\n                    background-position: center;\n                    float: left;\n                }\n            \n                .image-pattern-style:hover {\n                    border-color: gray;\n                    border-width: 2px;\n                }\n            \n                .row {\n                    margin-left: 0px;\n                    margin-right: 0px;\n                }\n            \n                .row-header {\n                    font-size: 13px;\n                    font-weight: 500;\n                }\n            \n                .e-selected-style {\n                    border-color: #006CE6;\n                    border-width: 2px;\n                }\n            \n                .e-checkbox-wrapper .e-label {\n                    font-size: 12px;\n                }\n            </style>\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-header\">\n        Properties\n    </div>\n    <div class=\"row property-panel-content\" id=\"appearance\">\n        <div class=\"row row-header\">\n            Appearance\n        </div>\n        <div class=\"row\" style=\"padding-top: 3px;\">\n            <div class=\"image-pattern-style\" id=\"preview0\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/node/Nodes_1.png); margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"preview1\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/node/Nodes_2.png); margin-right: 0px 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"preview2\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/node/Nodes_3.png); margin: 0px 3px\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 3px\">\n            <div class=\"image-pattern-style\" id=\"preview3\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/node/Nodes_4.png); margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"preview4\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/node/Nodes_5.png); margin-right: 0px 3px\">\n            </div>\n        </div>\n    </div>\n    <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n        <div class=\"row row-header\">\n            Behavior\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <input type=\"checkbox\" id=\"aspectRatio\" unchecked=\"false\">\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <input type=\"checkbox\" id=\"lock\" unchecked=\"false\">\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}ej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo);\r\n\r\nvar diagram;\r\nvar element;\r\n\r\n/**\r\n * Getting started -  nodes\r\n */\r\n//Enable or disable the Constraints for Node.\r\nfunction updateAnnotation(args) {\r\n    for (var i = 0; i < diagram.nodes.length; i++) {\r\n        var node = diagram.nodes[i];\r\n        if (args.event.target.id === 'lock') {\r\n            if (args.checked) {\r\n                node.constraints &= ~(ej.diagrams.NodeConstraints.Resize | ej.diagrams.NodeConstraints.Rotate | ej.diagrams.NodeConstraints.Drag);\r\n                node.constraints |= ej.diagrams.NodeConstraints.ReadOnly;\r\n            } else {\r\n                node.constraints |= ej.diagrams.NodeConstraints.Default & ~(ej.diagrams.NodeConstraints.ReadOnly);\r\n            }\r\n        } else {\r\n            if (element.checked) {\r\n                node.constraints |= ej.diagrams.NodeConstraints.AspectRatio;\r\n            } else {\r\n                node.constraints &= ~ej.diagrams.NodeConstraints.AspectRatio;\r\n            }\r\n        }\r\n        diagram.dataBind();\r\n    }\r\n}\r\n//Set customStyle for Node.\r\nfunction applyStyle(node, width, array, con, type) {\r\n    node.style.fill = '#37909A';\r\n    node.style.strokeWidth = width;\r\n    node.style.strokeColor = '#024249';\r\n    node.style.strokeDashArray = array;\r\n    if (!type || type === 'None') {\r\n        node.style.gradient.type = 'None';\r\n    } else {\r\n        var gradient;\r\n        gradient = {\r\n            cx: 50, cy: 50, fx: 50, fy: 50,\r\n            stops: [{ color: '#00555b', offset: 0 },\r\n            { color: '#37909A', offset: 90 }],\r\n            type: 'Radial'\r\n        };\r\n        node.style.gradient = gradient;\r\n    }\r\n    if (con & ej.diagrams.NodeConstraints.Shadow) {\r\n        node.shadow = { angle: 45, distance: 15, opacity: 0.3, color: 'grey' };\r\n        node.constraints |= con;\r\n    } else {\r\n        node.constraints &= con;\r\n    }\r\n    diagram.dataBind();\r\n}\r\n\r\n// tslint:disable-next-line:max-func-body-length\r\n\r\n    var nodes = [\r\n        { id: 'sdlc', offsetX: 300, offsetY: 288, annotations: [{ content: 'SDLC' }] },\r\n        { id: 'support', offsetX: 150, offsetY: 250, annotations: [{ content: 'Support' }] },\r\n        { id: 'analysis', offsetX: 300, offsetY: 150, annotations: [{ content: 'Analysis' }] },\r\n        { id: 'design', offsetX: 450, offsetY: 250, annotations: [{ content: 'Design' }] },\r\n        { id: 'implement', offsetX: 400, offsetY: 400, annotations: [{ content: 'implement' }] },\r\n        { id: 'deploy', offsetX: 200, offsetY: 400, annotations: [{ content: 'Deploy' }] }\r\n    ];\r\n    var connections = [\r\n        { id: 'connector1', sourceID: 'analysis', targetID: 'design' },\r\n        { id: 'connector2', sourceID: 'design', targetID: 'implement' },\r\n        { id: 'connector3', sourceID: 'implement', targetID: 'deploy' },\r\n        { id: 'connector4', sourceID: 'deploy', targetID: 'support' },\r\n        { id: 'connector5', sourceID: 'support', targetID: 'analysis' }\r\n    ];\r\n    //Initialize the diagram\r\n    diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: '645px', nodes: nodes, connectors: connections,\r\n        //Sets the default values of a nodes\r\n        getNodeDefaults: function (obj) {\r\n            obj.width = 100;\r\n            obj.height = 100;\r\n            obj.shape = { shape: 'Ellipse' };\r\n            obj.style = { fill: '#37909A', strokeColor: '#024249' };\r\n            obj.annotations[0].margin = { left: 10, right: 10 };\r\n            obj.annotations[0].style = { color: 'white', fill: 'none', strokeColor: 'none' };\r\n            return obj;\r\n        },\r\n        //Sets the default values of a Connectors\r\n        getConnectorDefaults: function (connector) {\r\n            connector.targetDecorator.style = { fill: '#024249', strokeColor: '#024249' };\r\n            return { style: { strokeColor: '#024249', strokeWidth: 2 } };\r\n        },\r\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None }\r\n    });\r\n    diagram.appendTo('#diagram');\r\n\r\n    //Enable or disable the AspectRatio for Node.\r\n     element = new ej.buttons.CheckBox({\r\n        checked: false, label: 'Aspect ratio',\r\n        change: updateAnnotation\r\n    });\r\n    element.appendTo('#aspectRatio');\r\n    //Enable or disable the Interaction for Node.\r\n    var lockElement = new ej.buttons.CheckBox({\r\n        checked: false, label: 'Lock',\r\n        change: updateAnnotation\r\n    });\r\n    lockElement.appendTo('#lock');\r\n\r\n    //Click event for Appearance of the Property Panel\r\n    document.getElementById('appearance').onclick = function (args) {\r\n        var target = args.target;\r\n\r\n        if (target.className === 'image-pattern-style') {\r\n            for (var i = 0; i < diagram.nodes.length; i++) {\r\n                var node = diagram.nodes[i];\r\n                switch (target.id) {\r\n                    case 'preview0':\r\n                        applyStyle(node, 0, '', ~ej.diagrams.NodeConstraints.Shadow, undefined);\r\n                        break;\r\n                    case 'preview1':\r\n                        applyStyle(node, 2, '', ~ej.diagrams.NodeConstraints.Shadow, undefined);\r\n                        break;\r\n                    case 'preview2':\r\n                        applyStyle(node, 2, '5 5', ~ej.diagrams.NodeConstraints.Shadow, undefined);\r\n                        break;\r\n                    case 'preview3':\r\n                        applyStyle(node, 2, '5 5', ~ej.diagrams.NodeConstraints.Shadow, 'Radial');\r\n                        break;\r\n                    case 'preview4':\r\n                        applyStyle(node, 2, '5 5', ej.diagrams.NodeConstraints.Shadow, undefined);\r\n                        break;\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n"}