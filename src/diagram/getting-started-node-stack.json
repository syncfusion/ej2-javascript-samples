{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/diagram/getting-started-node/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n\n<div class=\"col-lg-8 control-section\">\n        <style>\n                .image-pattern-style {\n                    background-color: white;\n                    background-size: contain;\n                    background-repeat: no-repeat;\n                    height: 75px;\n                    width: calc((100% - 12px) / 3);\n                    cursor: pointer;\n                    border: 1px solid #D5D5D5;\n                    background-position: center;\n                    float: left;\n                }\n            \n                .image-pattern-style:hover {\n                    border-color: gray;\n                    border-width: 2px;\n                }\n            \n                .row {\n                    margin-left: 0px;\n                    margin-right: 0px;\n                }\n            \n                .row-header {\n                    font-size: 13px;\n                    font-weight: 500;\n                }\n            \n                .e-selected-style {\n                    border-color: #006CE6;\n                    border-width: 2px;\n                }\n            \n                .e-checkbox-wrapper .e-label {\n                    font-size: 12px;\n                }\n            </style>\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-header\">\n        Properties\n    </div>\n    <div class=\"row property-panel-content\" id=\"appearance\">\n        <div class=\"row row-header\">\n            Appearance\n        </div>\n        <div class=\"row\" style=\"padding-top: 3px;\">\n            <div class=\"image-pattern-style\" id=\"preview0\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/node/Nodes_1.png); margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"preview1\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/node/Nodes_2.png); margin-right: 0px 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"preview2\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/node/Nodes_3.png); margin: 0px 3px\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 3px\">\n            <div class=\"image-pattern-style\" id=\"preview3\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/node/Nodes_4.png); margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"preview4\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/node/Nodes_5.png); margin-right: 0px 3px\">\n            </div>\n        </div>\n    </div>\n    <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n        <div class=\"row row-header\">\n            Behavior\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <input type=\"checkbox\" id=\"aspectRatio\" unchecked=\"false\">\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <input type=\"checkbox\" id=\"lock\" unchecked=\"false\">\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}ej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo);\n\nvar diagram;\n\n/**\n * Getting started -  nodes\n */\n//Enable or disable the Constraints for Node.\nfunction updateAnnotation(args) {\n    for (var i = 0; i < diagram.nodes.length; i++) {\n        var node = diagram.nodes[i];\n        if (args.event.target.id === 'lock') {\n            if (args.checked) {\n                node.constraints &= ~(ej.diagrams.NodeConstraints.Resize | ej.diagrams.NodeConstraints.Rotate | ej.diagrams.NodeConstraints.Drag);\n                node.constraints |= ej.diagrams.NodeConstraints.ReadOnly;\n            } else {\n                node.constraints |= ej.diagrams.NodeConstraints.Default & ~(ej.diagrams.NodeConstraints.ReadOnly);\n            }\n        } else {\n            if (element.checked) {\n                node.constraints |= ej.diagrams.NodeConstraints.AspectRatio;\n            } else {\n                node.constraints &= ~ej.diagrams.NodeConstraints.AspectRatio;\n            }\n        }\n        diagram.dataBind();\n    }\n}\n//Set customStyle for Node.\nfunction applyStyle(node, width, array, con, type) {\n    node.style.fill = '#37909A';\n    node.style.strokeWidth = width;\n    node.style.strokeColor = '#024249';\n    node.style.strokeDashArray = array;\n    if (!type || type === 'None') {\n        node.style.gradient.type = 'None';\n    } else {\n        var gradient;\n        gradient = {\n            cx: 50, cy: 50, fx: 50, fy: 50,\n            stops: [{ color: '#00555b', offset: 0 },\n            { color: '#37909A', offset: 90 }],\n            type: 'Radial'\n        };\n        node.style.gradient = gradient;\n    }\n    if (con & ej.diagrams.NodeConstraints.Shadow) {\n        node.shadow = { angle: 45, distance: 15, opacity: 0.3, color: 'grey' };\n        node.constraints |= con;\n    } else {\n        node.constraints &= con;\n    }\n    diagram.dataBind();\n}\n\n// tslint:disable-next-line:max-func-body-length\n\n    var nodes = [\n        { id: 'sdlc', offsetX: 300, offsetY: 288, annotations: [{ content: 'SDLC' }] },\n        { id: 'support', offsetX: 150, offsetY: 250, annotations: [{ content: 'Support' }] },\n        { id: 'analysis', offsetX: 300, offsetY: 150, annotations: [{ content: 'Analysis' }] },\n        { id: 'design', offsetX: 450, offsetY: 250, annotations: [{ content: 'Design' }] },\n        { id: 'implement', offsetX: 400, offsetY: 400, annotations: [{ content: 'implement' }] },\n        { id: 'deploy', offsetX: 200, offsetY: 400, annotations: [{ content: 'Deploy' }] }\n    ];\n    var connections = [\n        { id: 'connector1', sourceID: 'analysis', targetID: 'design' },\n        { id: 'connector2', sourceID: 'design', targetID: 'implement' },\n        { id: 'connector3', sourceID: 'implement', targetID: 'deploy' },\n        { id: 'connector4', sourceID: 'deploy', targetID: 'support' },\n        { id: 'connector5', sourceID: 'support', targetID: 'analysis' }\n    ];\n    //Initialize the diagram\n    diagram = new ej.diagrams.Diagram({\n        width: '100%', height: '645px', nodes: nodes, connectors: connections,\n        //Sets the default values of a nodes\n        getNodeDefaults: function (obj) {\n            obj.width = 100;\n            obj.height = 100;\n            obj.shape = { shape: 'Ellipse' };\n            obj.style = { fill: '#37909A', strokeColor: '#024249' };\n            obj.annotations[0].margin = { left: 10, right: 10 };\n            obj.annotations[0].style = { color: 'white', fill: 'none', strokeColor: 'none' };\n            return obj;\n        },\n        //Sets the default values of a Connectors\n        getConnectorDefaults: function (connector) {\n            connector.targetDecorator.style = { fill: '#024249', strokeColor: '#024249' };\n            return { style: { strokeColor: '#024249', strokeWidth: 2 } };\n        },\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None }\n    });\n    diagram.appendTo('#diagram');\n\n    //Enable or disable the AspectRatio for Node.\n    var element = new ej.buttons.CheckBox({\n        checked: false, label: 'Aspect ratio',\n        change: updateAnnotation\n    });\n    element.appendTo('#aspectRatio');\n    //Enable or disable the Interaction for Node.\n    var lockElement = new ej.buttons.CheckBox({\n        checked: false, label: 'Lock',\n        change: updateAnnotation\n    });\n    lockElement.appendTo('#lock');\n\n    //Click event for Appearance of the Property Panel\n    document.getElementById('appearance').onclick = function (args) {\n        var target = args.target;\n\n        if (target.className === 'image-pattern-style') {\n            for (var i = 0; i < diagram.nodes.length; i++) {\n                var node = diagram.nodes[i];\n                switch (target.id) {\n                    case 'preview0':\n                        applyStyle(node, 0, '', ~ej.diagrams.NodeConstraints.Shadow, undefined);\n                        break;\n                    case 'preview1':\n                        applyStyle(node, 2, '', ~ej.diagrams.NodeConstraints.Shadow, undefined);\n                        break;\n                    case 'preview2':\n                        applyStyle(node, 2, '5 5', ~ej.diagrams.NodeConstraints.Shadow, undefined);\n                        break;\n                    case 'preview3':\n                        applyStyle(node, 2, '5 5', ~ej.diagrams.NodeConstraints.Shadow, 'Radial');\n                        break;\n                    case 'preview4':\n                        applyStyle(node, 2, '5 5', ej.diagrams.NodeConstraints.Shadow, undefined);\n                        break;\n                }\n\n            }\n        }\n    };\n\n"}