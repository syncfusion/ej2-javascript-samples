{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/complex-hierarchical-tree/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n        <style>\n                .image-pattern-style {\n                    background-color: white;\n                    background-size: contain;\n                    background-repeat: no-repeat;\n                    height: 75px;\n                    width: calc((100% - 18px) / 3);\n                    cursor: pointer;\n                    border: 1px solid #D5D5D5;\n                    background-position: center;\n                    float: left;\n                }\n            \n                .image-pattern-style:hover {\n                    border-color: gray;\n                    border-width: 2px;\n                }\n            \n                .row {\n                    margin-left: 0px;\n                    margin-right: 0px;\n                }\n            \n                .row-header {\n                    font-size: 15px;\n                    font-weight: 500;\n                }\n            \n                .e-selected-style {\n                    border-color: #006CE6;\n                    border-width: 2px;\n                }\n            \n                .property-panel-header {\n                    padding-top: 2px;\n                    padding-bottom: 5px;\n                }\n            \n                .e-checkbox-wrapper .e-label {\n                    font-size: 12px;\n                }\n            \n                .col-xs-6 {\n                    padding-left: 0px;\n                    padding-right: 0px;\n                }\n            </style>\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\" style=\"float:right;\">\n    <div class=\"property-panel-header\">\n        Layout Settings\n    </div>\n    <div class=\"row property-panel-content\" id=\"appearance\" style=\"padding-top: 10px\">\n        <div class=\"row row-header\">\n            Orientation\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div class=\"image-pattern-style  e-selected-style\" id=\"topToBottom\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/common-orientation/toptobottom.png); margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"bottomToTop\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/common-orientation/bottomtotop.png);margin-right: 3px\">\n            </div>\n            <div class=\"image-pattern-style\" id=\"leftToRight\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/common-orientation/lefttoright.png);  margin: 0px 3px\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div class=\"image-pattern-style\" id=\"rightToLeft\" style=\"background-image: url(//npmci.syncfusion.com/development/demos/src/diagram/Images/common-orientation/righttoleft.png); margin: 0px 3px\">\n            </div>\n        </div>\n    </div>\n    <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n        <div class=\"row row-header\">\n            Behavior\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Margin X</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"marginLeft\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Margin Y</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"marginTop\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Horizontal Spacing</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"horiontal\">\n            </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 8px\">\n            <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-5\">\n                <div style=\"display: table-cell; vertical-align: middle\">Vertical Spacing</div>\n            </div>\n            <div class=\"col-xs-7\">\n                <input type=\"text\" id=\"vertical\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Multiple Parent sample\r\n */\r\n// tslint:disable-next-line:max-func-body-length\r\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.ComplexHierarchicalTree);\r\nvar horizontalSpacingObj;\r\nvar verticalSpacingObj;\r\nvar marginTopObj;\r\nvar marginLeftObj;\r\nvar diagram;\r\n//Apply the Alignment for the layout.\r\nfunction update(value) {\r\n    if (value === 'left') {\r\n        diagram.layout.margin.left = marginLeftObj.value;\r\n    } else if (value === 'top') {\r\n        diagram.layout.margin.top = marginTopObj.value;\r\n    } else if (value === 'hspacing') {\r\n        diagram.layout.horizontalSpacing = horizontalSpacingObj.value;\r\n    } else if (value === 'vspacing') {\r\n        diagram.layout.verticalSpacing = verticalSpacingObj.value;\r\n    }\r\n    diagram.dataBind();\r\n}\r\n\r\n\r\n\r\n\r\n    //Initializes diagram control\r\n    diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: 580,\r\n        //Configrues hierarchical tree layout\r\n        layout: {\r\n            type: 'ComplexHierarchicalTree',\r\n            horizontalSpacing: 40, verticalSpacing: 40, orientation: 'TopToBottom',\r\n            margin: { left: 10, right: 0, top: 50, bottom: 0 }\r\n        },\r\n        //Sets the default values of nodes\r\n        getNodeDefaults: function (obj) {\r\n            obj.width = 40;\r\n            obj.height = 40;\r\n            obj.shape = { type: 'Basic', shape: 'Rectangle', cornerRadius: 7 };\r\n        },\r\n        //Sets the default values of connectors\r\n        getConnectorDefaults: function (connector) {\r\n            connector.type = 'Orthogonal';\r\n            connector.cornerRadius = 7;\r\n            connector.targetDecorator.height = 7;\r\n            connector.targetDecorator.width = 7;\r\n            connector.style.strokeColor = '#6d6d6d';\r\n        },\r\n        //Configures data source\r\n        dataSourceSettings: {\r\n            id: 'Name', parentId: 'ReportingPerson',\r\n            dataSource: new ej.data.DataManager(window.multiParentData),\r\n            //binds the external data with node\r\n            doBinding: function (nodeModel, data) {\r\n                nodeModel.style = { fill: data.fillColor, strokeWidth: 1, strokeColor: data.border };\r\n            }\r\n        },\r\n        //Disables all interactions except zoom/pan\r\n        tool: ej.diagrams.DiagramTools.ZoomPan,\r\n        snapSettings: { constraints: 0 }\r\n    });\r\n    diagram.appendTo('#diagram');\r\n\r\n    //used NumericTextBox for left margin of the layout.\r\n    marginLeftObj = new ej.inputs.NumericTextBox({\r\n        value: diagram.layout.margin.left,\r\n        step: 1,\r\n        format: '##.##',\r\n        change: function (args) {\r\n            update('left');\r\n        }\r\n    });\r\n    marginLeftObj.appendTo('#marginLeft');\r\n    //used NumericTextBox for top margin of the layout.\r\n    marginTopObj = new ej.inputs.NumericTextBox({\r\n        value: diagram.layout.margin.top,\r\n        step: 1,\r\n        format: '##.##',\r\n        change: function (args) {\r\n            update('top');\r\n        }\r\n    });\r\n    marginTopObj.appendTo('#marginTop');\r\n    //used NumericTextBox for horizontalspacing of the layout.\r\n    horizontalSpacingObj = new ej.inputs.NumericTextBox({\r\n        value: diagram.layout.horizontalSpacing,\r\n        step: 1,\r\n        format: '##.##',\r\n        change: function (args) {\r\n            update('hspacing');\r\n        }\r\n    });\r\n    horizontalSpacingObj.appendTo('#horiontal');\r\n    //used NumericTextBox for verticalspacing of the layout.\r\n    verticalSpacingObj = new ej.inputs.NumericTextBox({\r\n        value: diagram.layout.verticalSpacing,\r\n        step: 1,\r\n        format: '##.##',\r\n        change: function (args) {\r\n            update('vspacing');\r\n        }\r\n    });\r\n    verticalSpacingObj.appendTo('#vertical');\r\n    //Click Event for Appearance of the layout.\r\n    document.getElementById('appearance').onclick = function (args) {\r\n        var target = args.target;\r\n\r\n        if (target.className === 'image-pattern-style') {\r\n            var id = target.id;\r\n            var orientation1 = id.substring(0, 1).toUpperCase() + id.substring(1, id.length);\r\n            diagram.layout.orientation = orientation1;\r\n            diagram.dataBind();\r\n            diagram.doLayout();\r\n\r\n        }\r\n    };\r\n"}