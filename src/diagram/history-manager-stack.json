{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/history-manager/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n    <style>\n        #historyPropertySection .row {\n            margin-left: 0px;\n            margin-right: 0px;\n        }\n\n        #historyControlSection.content-wrapper {\n            border: 1px solid #D7D7D7;\n        }\n\n        #historyPropertySection .listbox {\n            width: 100%;\n            height: 50%;\n        }\n\n        #historyPropertySection .heading {\n            color: #807f7f;\n            font-size: 15px;\n            height: 50px;\n            width: 100%;\n            border-bottom: 1px solid #d9dedd;\n            padding: 10px;\n        }\n    </style>\n\n    <div id=\"historyControlSection\" class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div id=\"historyPropertySection\" class=\"col-lg-4 property-section\" style=\"padding-right: 0px\">\n    <div class=\"property-panel-header\">\n        History manager settings\n    </div>\n    <div class=\"row property-panel-content\" id=\"appearance\">\n        <div class=\"row property-panel-content\">\n            <div class=\"row\">\n                <div class=\"listbox\" style=\"height:100%;border: 1px solid #e0e0e0\">\n                    <div class=\"heading\" style=\"height:40px\">\n                        <span>\n                            Undo Stack\n                        </span>\n                        <div style=\"float: right; margin-top: -5px\">\n                            <button id=\"undo\" style=\"width:100%\">\n                                Undo\n                            </button>\n                        </div>\n                    </div>\n                    <div id=\"undoList\"></div>\n                </div>\n            </div>\n            <div class=\"row\" style=\"padding-top: 10px\">\n                <div class=\"listbox\" style=\"height:100%;border: 1px solid #e0e0e0\">\n                    <div class=\"heading\" style=\"height:40px\">\n                        <span>\n                            Redo Stack\n                        </span>\n                        <div style=\"float: right; margin-top: -5px\">\n                            <button id=\"redo\" style=\"width:100%\">\n                                Redo\n                            </button>\n                        </div>\n                    </div>\n                    <div id=\"redoList\"></div>\n                </div>\n            </div>\n            <div class=\"row\" style=\"padding-top: 10px\">\n                <div style=\"display: table;height: 35px; padding-left: 0px\" class=\"col-xs-6\">\n                    <div style=\"display: table-cell; vertical-align: middle\">Stack Limit</div>\n                </div>\n                <div class=\"col-xs-6\" style=\"padding-left: 0px; padding-right: 0px\">\n                    <input type=\"text\" id=\"StackLimit\">\n                </div>\n            </div>\n            <div class=\"row\" style=\"padding-top: 10px\">\n                <div class=\"col-xs-6\" style=\"padding-left: 0px\">\n                    <button id=\"startGroupAction\" title=\"startGroupAction\" style=\"width:100%;overflow: hidden;text-overflow: ellipsis\">\n                        Start Group Action\n                    </button></div>\n                <div class=\"col-xs-6\" style=\"padding-left: 0px; padding-right: 0px\">\n                    <button id=\"clearHistory\" title=\"clearHistory\" style=\"width:100%\">\n                        Clear\n                    </button>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}ej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo);\r\nvar diagram;\r\nvar nodes = [\r\n    {\r\n        id: 'node1', offsetX: 400, offsetY: 30, style: { fill: '#FFB2B2', strokeColor: '#FFB2B2' }, width: 70, height: 40,\r\n        shape: { type: 'Flow', shape: 'Terminator' },\r\n        annotations: [{ id: 'label1', content: 'Start' }],\r\n    },\r\n    {\r\n        id: 'node2', offsetX: 400, offsetY: 100, style: { fill: '#DCDCDC', strokeColor: '#DCDCDC' },\r\n        shape: { type: 'Flow', shape: 'Process' }, annotations: [{ id: 'label1', content: 'Design' }],\r\n        ports: [{ id: 'designPort', offset: { x: 0, y: 0.5 } }]\r\n    },\r\n    {\r\n        id: 'node3', offsetX: 400, offsetY: 180, style: { fill: '#DCDCDC', strokeColor: '#DCDCDC' },\r\n        annotations: [{ id: 'label1', content: 'Coding' }],\r\n        shape: { type: 'Flow', shape: 'Process' }, ports: [{ id: 'codingPort', offset: { x: 0, y: 0.5 } }]\r\n    },\r\n    {\r\n        id: 'node4', offsetX: 400, offsetY: 260, style: { fill: '#DCDCDC', strokeColor: '#DCDCDC' },\r\n        annotations: [{ id: 'label1', content: 'Testing' }], shape: { type: 'Flow', shape: 'Process' }\r\n    },\r\n    {\r\n        id: 'node5', offsetX: 400, offsetY: 340, style: { fill: '#A2D8B0', strokeColor: '#A2D8B0' }, width: 80, height: 60,\r\n        annotations: [{ id: 'label1', content: 'Errors?' }], shape: { type: 'Flow', shape: 'Decision' }\r\n    },\r\n    {\r\n        id: 'node6', offsetX: 400, offsetY: 430, style: { fill: '#FFB2B2', strokeColor: '#FFB2B2' }, width: 70, height: 40,\r\n        annotations: [{ id: 'label1', content: 'End' }], shape: { type: 'Flow', shape: 'Terminator' }\r\n    },\r\n    {\r\n        id: 'node7', width: 100, offsetX: 220, offsetY: 180, style: { fill: '#A2D8B0', strokeColor: '#A2D8B0' }, height: 60,\r\n        annotations: [{ id: 'label1', content: 'Design Error?' }], shape: { type: 'Flow', shape: 'Decision' },\r\n        ports: [\r\n            { id: 'porterror', offset: { x: 0.5, y: 0 } },\r\n            { id: 'portcoding', offset: { x: 1, y: 0.5 } },\r\n            { id: 'portdesign', offset: { x: 0.5, y: 1 } }\r\n        ]\r\n    }\r\n];\r\n\r\nvar connectors = [\r\n    { id: 'connector1', sourceID: 'node1', targetID: 'node2' },\r\n    { id: 'connector2', sourceID: 'node2', targetID: 'node3' },\r\n    { id: 'connector3', sourceID: 'node3', targetID: 'node4' },\r\n    { id: 'connector4', sourceID: 'node4', targetID: 'node5' },\r\n    {\r\n        id: 'connector5', sourceID: 'node5', targetID: 'node6',\r\n        annotations: [{ content: 'No', style: { fill: 'white' } }]\r\n    },\r\n    {\r\n        id: 'connector6', sourceID: 'node5', targetID: 'node7', type: 'Orthogonal',\r\n        segments: [{ type: 'Orthogonal', length: 150, direction: 'Left' }],\r\n        annotations: [{ content: 'Yes', style: { fill: 'white' } }]\r\n    },\r\n    {\r\n        id: 'connector7', sourceID: 'node7', targetID: 'node3', sourcePortID: 'portcoding',\r\n        targetPortID: 'codingPort', type: 'Orthogonal',\r\n        segments: [{ type: 'Orthogonal', length: 10, direction: 'left' }],\r\n        annotations: [{ content: 'No', style: { fill: 'white' } }]\r\n    },\r\n    {\r\n        id: 'connector8', sourceID: 'node7', targetID: 'node2', sourcePortID: 'porterror',\r\n        targetPortID: 'designPort', type: 'Orthogonal',\r\n        annotations: [{ content: 'Yes', style: { fill: 'white' } }]\r\n    }\r\n];\r\n\r\n    diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: '600px', nodes: nodes, connectors: connectors,\r\n        getNodeDefaults: getNodeDefaults,\r\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\r\n        getConnectorDefaults: function (obj) {\r\n            obj.style.fill = '#707070';\r\n            obj.targetDecorator.style.fill = '#707070';\r\n            obj.targetDecorator.style.strokeColor = '#707070';\r\n        }\r\n    });\r\n    diagram.appendTo('#diagram');\r\n\r\n    diagram.historyChange = function (arg) {\r\n        getValue();\r\n    };\r\n    diagram.fitToPage({ mode: 'Height' });\r\n    var stackLimit = new ej.inputs.NumericTextBox({\r\n        value: 0, min: 0, max: 50, width: '100%',\r\n        format: '##.##', step: 1,\r\n        change: function (args) {\r\n            diagram.setStackLimit(args.value);\r\n        }\r\n    });\r\n    stackLimit.appendTo('#StackLimit');\r\n\r\n    var listviewInstance = new ej.lists.ListView({\r\n        fields: { value: 'value', text: 'text' },\r\n        headerTitle: 'Device settings',\r\n        height: \"180px\",\r\n    });\r\n    listviewInstance.appendTo(\"#redoList\");\r\n\r\n    var listview = new ej.lists.ListView({\r\n        fields: { value: 'value', text: 'text' },\r\n        headerTitle: 'Device settings',\r\n        height: \"180px\",\r\n    });\r\n    listview.appendTo(\"#undoList\");\r\n\r\n    var clearHistory = new ej.buttons.Button({\r\n        content: 'Clear History',       \r\n    });\r\n    clearHistory.appendTo('#clearHistory');\r\n    clearHistory.element.onclick = function () {\r\n        diagram.clearHistory();\r\n        getValue();\r\n    };\r\n    var startGroupAction = new ej.buttons.Button({\r\n        isToggle: true,        \r\n    });\r\n    startGroupAction.appendTo('#startGroupAction');\r\n    startGroupAction.element.onclick = function () {\r\n        if (startGroupAction.element.classList.contains('e-active')) {\r\n            startGroupAction.content = 'End Group Action';\r\n            diagram.startGroupAction();\r\n        }\r\n        else {\r\n            diagram.endGroupAction();\r\n            startGroupAction.content = 'Start Group Action';\r\n        }\r\n    };\r\n    var undoButton = new ej.buttons.Button({\r\n        disabled: true\r\n    });\r\n    undoButton.appendTo('#undo');\r\n    undoButton.element.onclick = function () {\r\n        diagram.undo();\r\n    };\r\n\r\n    var redoButton = new ej.buttons.Button({\r\n        disabled: true\r\n    });\r\n    redoButton.appendTo('#redo');\r\n    redoButton.element.onclick = function () {\r\n        diagram.redo();\r\n    };\r\n    function getNodeDefaults(obj) {\r\n        obj.annotations[0].style.color = '#111111';\r\n        return obj;\r\n    }\r\n    function getValue() {\r\n        var undoStack = diagram.historyManager.undoStack;\r\n        var redoStack = diagram.historyManager.redoStack;\r\n        var undo = [];\r\n        for (var i = 0; i < undoStack.length; i++) {\r\n            undo.push({ 'text': undoStack[i].type, 'value': undoStack[i].type });\r\n        }\r\n        var redo = [];\r\n        for (var j = 0; j < redoStack.length; j++) {\r\n            redo.push({ 'text': redoStack[j].type, 'value': redoStack[j].type });\r\n        }\r\n        var itemsCount = diagram.historyManager.stackLimit ? diagram.historyManager.stackLimit : 0;\r\n        var undoList = document.getElementById('undoList').ej2_instances[0];\r\n\r\n        undoButton.disabled = undo.length ? false : true;\r\n        redoButton.disabled = redo.length ? false : true;\r\n        undoList.dataSource = undo;\r\n        undoList.fields = { text: 'text', value: 'text' };\r\n        undoList.index = 0;\r\n        undoList.dataBind();\r\n        var redoList = document.getElementById('redoList').ej2_instances[0];\r\n        redoList.dataSource = redo;\r\n        redoList.fields = { text: 'text', value: 'text' };\r\n        redoList.index = 0;\r\n        redoList.dataBind();\r\n    }\r\n\r\n\r\n"}