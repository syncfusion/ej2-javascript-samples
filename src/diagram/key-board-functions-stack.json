{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/key-board-functions/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n        <style>\n                .control-section {\n                    padding-top: 0px;\n                    padding-bottom: 0px;\n                    padding-right: 0px;\n                    padding-left: 0px;\n                }\n            \n                .container-fluid {\n                    padding-left: 0px;\n                }\n            \n                .property-panel-header {\n                    padding-bottom: 0px;\n                }\n            \n                .property-panel-content {\n                    padding-top: 0px !important;\n                }\n            \n                @media (max-width: 550px) {\n                    .property-panel-content {\n                        padding-top: 0px !important;\n                    }\n                }\n            </style>\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-3 property-section\">\n    <div>\n        <h4 class=\"property-panel-header\">Built-In Commands</h4>\n        <div class=\"property-panel-content\">\n            <table id=\"property1\" style=\"font-size: 12px;\">\n                <tbody>\n                    <tr>\n                        <td style=\"width:60%;\">\n                            <h5>Command</h5>\n                        </td>\n                        <td style=\"width:40%;\">\n                            <h5>Gesture</h5>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:61%;\">Select All </td>\n                        <td style=\"width:39%;\">Ctrl + A</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Cut</td>\n                        <td style=\"width:40%;\">Ctrl + X</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Copy</td>\n                        <td style=\"width:40%;\">Ctrl + C</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Paste</td>\n                        <td style=\"width:40%;\">Ctrl + V</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Undo</td>\n                        <td style=\"width:40%;\">Ctrl + Z</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Redo</td>\n                        <td style=\"width:40%;\">Ctrl + Y</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Delete</td>\n                        <td style=\"width:40%;\">Delete</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div>\n        <h4 class=\"property-panel-header\">Custom Commands</h4>\n        <div class=\"property-panel-content\">\n            <table id=\"property2\" style=\"font-size: 12px;\">\n                <tbody>\n                    <tr>\n                        <td style=\"width:60%;\">\n                            <h5>Command\n                                </h5><h5>\n                        </h5></td>\n                        <td style=\"width:40%;\">\n                            <h5>Gesture</h5>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Group</td>\n                        <td style=\"width:40%;\">Ctrl + G</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Ungroup</td>\n                        <td style=\"width:40%;\">Ctrl + U</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div>\n        <h4 class=\"property-panel-header\">Modified Commands</h4>\n        <div class=\"property-panel-content\">\n            <table id=\"property3\" style=\"font-size: 12px;\">\n                <tbody>\n                    <tr>\n                        <td style=\"width:70%;\">\n                            <h5>Command\n                                </h5><h5>\n                        </h5></td>\n                        <td style=\"width:30%;\">\n                            <h5>Gesture</h5>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Navigate to Parent Node </td>\n                        <td style=\"width:40%;\">Up Arrow</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Navigate to Child Node </td>\n                        <td style=\"width:40%;\">Down Arrow</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Navigate to Previous Child </td>\n                        <td style=\"width:40%;\">Left Arrow</td>\n                    </tr>\n                    <tr>\n                        <td style=\"width:60%;\">Navigate to Next Child </td>\n                        <td style=\"width:40%;\">Right Arrow</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Key Board Interaction sample\r\n */\r\n// tslint:disable-next-line:max-func-body-length\r\nej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo, ej.diagrams.DiagramContextMenu, ej.diagrams.HierarchicalTree, ej.diagrams.DataBinding);\r\n //Custom command for Diagraming elements.\r\n var diagram;\r\n function getCommandManagerSettings() {\r\n    var commandManager = {\r\n        commands: [{\r\n                name: 'customGroup',\r\n                canExecute: function () {\r\n                    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                },\r\n                execute: function () {\r\n                    diagram.group();\r\n                },\r\n                gesture: {\r\n                    key: ej.diagrams.Keys.G,\r\n                    keyModifiers: ej.diagrams.KeyModifiers.Control\r\n                }\r\n            },\r\n            {\r\n                name: 'customUnGroup',\r\n                canExecute: function () {\r\n                    if (diagram.selectedItems.nodes[0].children) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                },\r\n                execute: function () {\r\n                    diagram.unGroup();\r\n                },\r\n                gesture: {\r\n                    key: ej.diagrams.Keys.U,\r\n                    keyModifiers: ej.diagrams.KeyModifiers.Control\r\n                }\r\n            },\r\n            {\r\n                name: 'navigationDown',\r\n                canExecute: function () {\r\n                    return true;\r\n                },\r\n                execute: function () {\r\n                    navigateLevels(true);\r\n                },\r\n                gesture: { key: ej.diagrams.Keys.Down },\r\n            },\r\n            {\r\n                name: 'navigationUp',\r\n                canExecute: function () {\r\n                    return true;\r\n                },\r\n                execute: function () {\r\n                    navigateLevels(false);\r\n                },\r\n                gesture: { key: ej.diagrams.Keys.Up },\r\n            },\r\n            {\r\n                name: 'navigationLeft',\r\n                canExecute: function () {\r\n                    return true;\r\n                },\r\n                execute: function () {\r\n                    navigateToSiblings(true);\r\n                },\r\n                gesture: { key: ej.diagrams.Keys.Right },\r\n            },\r\n            {\r\n                name: 'navigationRight',\r\n                canExecute: function () {\r\n                    return true;\r\n                },\r\n                execute: function () {\r\n                    navigateToSiblings(false);\r\n                },\r\n                gesture: { key: ej.diagrams.Keys.Left },\r\n            }]\r\n    };\r\n    return commandManager;\r\n}\r\nfunction navigateLevels(isParent) {\r\n    var node = diagram.selectedItems.nodes[0];\r\n    if (node) {\r\n        var connectorId = isParent ? node.outEdges[0] : node.inEdges[0];\r\n        var altNode = isParent ? getNode(connectorId, false) : getNode(connectorId, true);\r\n        selectNode(altNode);\r\n    }\r\n}\r\nfunction navigateToSiblings(isRightSibling) {\r\n    var child = diagram.selectedItems.nodes[0];\r\n    if (child) {\r\n        var connectorId = child.inEdges[0];\r\n        var altConnectorId = '';\r\n        var parent = getNode(connectorId, true);\r\n        if (parent && parent.length > 0) {\r\n            for (var i = 0; i < parent[0].outEdges.length; i++) {\r\n                if (parent[0].outEdges[i] === connectorId) {\r\n                    altConnectorId = isRightSibling ? parent[0].outEdges[i + 1] : parent[0].outEdges[i - 1];\r\n                }\r\n            }\r\n            var sibling = getNode(altConnectorId, false);\r\n            selectNode(sibling);\r\n        }\r\n    }\r\n}\r\nfunction getNode(name, isParent) {\r\n    var node = [];\r\n    var connector = diagram.getObject(name);\r\n    if (connector) {\r\n        node.push(diagram.getObject(isParent ? (connector.sourceID) : (connector.targetID)));\r\n    }\r\n    return node;\r\n}\r\nfunction selectNode(node) {\r\n    if (node && node.length > 0) {\r\n        diagram.clearSelection();\r\n        diagram.select(node);\r\n    }\r\n}\r\n\r\n    //Initialize shape\r\n    var shape = { type: 'Basic', shape: 'Ellipse', cornerRadius: 10 };\r\n    //initialize the diagram control\r\n     diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: 645,\r\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\r\n        contextMenuSettings: { show: true },\r\n        getNodeDefaults: function (obj) {\r\n            if (!obj.children) {\r\n                obj.shape = shape;\r\n                obj.width = 70;\r\n                obj.height = 70;\r\n            }\r\n            return obj;\r\n        },\r\n        layout: {\r\n            type: 'HierarchicalTree'\r\n        },\r\n        dataSourceSettings: {\r\n            id: 'id', parentId: 'ancestor', dataSource: new ej.data.DataManager(window.keyBoardData),\r\n            doBinding: function (nodeModel, data) {\r\n                nodeModel.annotations = [{\r\n                    content: data.id,\r\n                    style: { color: 'white' }\r\n                }\r\n                ];\r\n                nodeModel.style = {\r\n                    strokeColor: 'transparent',\r\n                    fill: data.fill\r\n                };\r\n            }\r\n        },\r\n        commandManager: getCommandManagerSettings()\r\n    });\r\n    diagram.appendTo('#diagram');\r\n   \r\n\r\n"}