{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/diagram/local-data/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Local Data Binding sample\n */\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.HierarchicalTree);\n\n    //Initializes diagram control\n    var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: 490,\n        //Configures data source\n        dataSourceSettings: {\n            id: 'Name', parentId: 'Category', dataManager: new ej.data.DataManager(window.species),\n            //binds the external data with node\n            doBinding: function (nodeModel, data, diagram) {\n                nodeModel.annotations = [{\n                    content: data.Name, style: { color: 'black' }\n                }];\n                nodeModel.style = { fill: '#ffeec7', strokeColor: '#f5d897', strokeWidth: 1 };\n            }\n        },\n        //Configrues HierarchicalTree layout\n        layout: {\n            type: 'HierarchicalTree', horizontalSpacing: 15, verticalSpacing: 50,\n            margin: { top: 10, left: 10, right: 10, bottom: 0 },\n        },\n        //Sets the default values of nodes\n        getNodeDefaults: function (obj) {\n            obj.shape = { type: 'Basic', shape: 'Rectangle' };\n            obj.style = { strokeWidth: 1 };\n            obj.width = 95;\n            obj.height = 30;\n        },\n        //Sets the default values of connectors.\n        getConnectorDefaults: function (connector) {\n            connector.type = 'Orthogonal';\n            connector.style.strokeColor = '#4d4d4d';\n            connector.targetDecorator.shape = 'None';\n        },\n        //Disables all interactions except zoom/pan\n        tool: ej.diagrams.DiagramTools.ZoomPan,\n        snapSettings: { constraints: 0 }\n    });\n    diagram.appendTo('#diagram');\n\n"}