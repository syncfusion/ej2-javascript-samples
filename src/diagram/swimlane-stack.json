{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/diagram/swimlane/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <link href=\"https://ej2.syncfusion.com/demos/src/diagram/styles/diagram-common.css\" rel=\"stylesheet\">\n    <style>\n       @font-face {\n            font-family: 'e-ddb-icons';\n            src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');\n            font-weight: normal;\n            font-style: normal;\n        }\n\n        .e-ddb-icons1 {\n            font-family: 'e-ddb-icons1';\n            speak: none;\n            font-size: 16px;\n            font-style: normal;\n            font-weight: normal;\n            font-variant: normal;\n            text-transform: none;\n            line-height: 1;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n\n        .e-toggle-palette::before {\n            content: \"\\e700\"\n        }\n\n        .sb-mobile-palette {\n            width: 195px;\n            height: 559px;\n            float: left;\n        }\n\n        .sb-mobile-palette-bar {\n            display: none;\n        }\n\n        .sb-mobile-diagram {\n            width: calc(100% - 197px);\n            height: 559px;\n            float: left;\n            border: 1px solid rgba(0, 0, 0, 0.12);\n            border-left: none;\n        }\n\n        .container-fluid {\n            padding-bottom: 15px;\n        }\n\n        .e-upload {\n            height: 0px;\n            width: 0px;\n            display: none !important;\n            border: none !important;\n        }\n\n        #dropArea {\n            height: 50px;\n            padding: 7px;\n            text-align: center;\n            position: relative;\n            border: 1px solid rgba(0, 0, 0, 0.12);\n            /* border-top: none; */\n        }\n\n        @media (max-width: 550px) {\n            .sb-mobile-palette {\n                z-index: 19;\n                position: absolute;\n                display: none;\n                transition: transform 300ms linear, visibility 0s linear 300ms;\n                width: 39%;\n                height: 100%;\n            }\n            .sb-mobile-diagram {\n                width: 100%;\n                height: 100%;\n                float: left;\n                left: 0px;\n            }\n            .sb-mobile-palette-bar {\n                display: block;\n                width: 100%;\n                background: #fafafa;\n                padding: 10px 10px;\n                border: 0.5px solid #e0e0e0;\n                min-height: 40px;\n            }\n            #palette-icon {\n                font-size: 20px;\n            }\n        }\n\n        .sb-mobile-palette-open {\n            position: absolute;\n            display: block;\n            right: 15px;\n        }\n\n        .e-file-select-wrap {\n            display: none;\n        }\n\n        .material #swimlaneDiagram #palette-space .e-accordion {\n            border: none;\n        }\n\n        .material #swimlaneDiagram #palette-space {\n            border: 1px solid rgba(0, 0, 0, 0.12);\n        }\n\n        .material #dropArea {\n            border-width: 1px 0px 0px 0px;\n            border-style: solid;\n            border-color: rgba(0, 0, 0, 0.12);\n        }\n\n        .fabric #swimlaneDiagram .sb-mobile-diagram {\n            border-left: 1px solid rgba(0, 0, 0, 0.12);\n        }\n\n        .bootstrap #swimlaneDiagram .sb-mobile-diagram {\n            height: 554px;\n            margin-top: 5px;\n            border-radius: 4px;\n            border-left: 1px solid rgba(0, 0, 0, 0.12);\n        }\n    </style>\n<div id=\"swimlaneDiagram\" style=\"width: 100%;\">\n    <div class=\"sb-mobile-palette-bar\">\n        <div id=\"palette-icon\" style=\"float: right;\" role=\"button\" class=\"e-ddb-icons1 e-toggle-palette\"></div>\n    </div>\n    <div id=\"palette-space\" class=\"sb-mobile-palette\">\n        <div id=\"symbolpalette\" style=\"width:90%;\"></div>\n    </div>\n    <div id=\"diagram-space\" class=\"sb-mobile-diagram\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Default Swimlane sample\n */\nej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo);\n\n//Create and add ports for node.\nvar port = [\n    { offset: { x: 0, y: 0.5 }, visibility: ej.diagrams.PortVisibility.Connect | ej.diagrams.PortVisibility.Hover, constraints: ej.diagrams.PortConstraints.Draw },\n    { offset: { x: 0.5, y: 0 }, visibility: ej.diagrams.PortVisibility.Connect | ej.diagrams.PortVisibility.Hover, constraints: ej.diagrams.PortConstraints.Draw },\n    { offset: { x: 1, y: 0.5 }, visibility: ej.diagrams.PortVisibility.Connect | ej.diagrams.PortVisibility.Hover, constraints: ej.diagrams.PortConstraints.Draw },\n    { offset: { x: 0.5, y: 1 }, visibility: ej.diagrams.PortVisibility.Connect | ej.diagrams.PortVisibility.Hover, constraints: ej.diagrams.PortConstraints.Draw }\n];\n\nfunction addEvents() {\n    var isMobileDevice = window.matchMedia('(max-width:550px)').matches;\n    if (isMobileDevice) {\n        var pIcons = document.getElementById('palette-icon');\n        if (pIcons) {\n            pIcons.addEventListener('click', openPalette, false);\n        }\n    }\n}\n\nfunction openPalette() {\n    var pSpaces = document.getElementById('palette-space');\n    isMobileDevice = window.matchMedia('(max-width:550px)').matches;\n    if (isMobileDevice) {\n        if (!pSpaces.classList.contains('sb-mobile-palette-open')) {\n            pSpaces.classList.add('sb-mobile-palette-open');\n        }\n        else {\n            pSpaces.classList.remove('sb-mobile-palette-open');\n        }\n    }\n}\n\n\n    var bounds = document.getElementById('diagram-space').getBoundingClientRect();\n    var centerX = bounds.width / 2;\n    var middle = centerX - 50;\n    var darkColor = '#C7D4DF';\n    var lightColor = '#f5f5f5';\n    var pathData = 'M 120 24.9999 C 120 38.8072 109.642 50 96.8653 50 L 23.135' +\n        ' 50 C 10.3578 50 0 38.8072 0 24.9999 L 0 24.9999 C' +\n        '0 11.1928 10.3578 0 23.135 0 L 96.8653 0 C 109.642 0 120 11.1928 120 24.9999 Z';\n    //Initializes the nodes for the diagram.\n    var nodes = [\n        {\n            id: 'swimlane',\n            shape: {\n                type: 'SwimLane',\n                header: {\n                    annotation: { content: 'ONLINE PURCHASE STATUS', style: { fill: '#111111' } },\n                    height: 50, style: { fontSize: 11 },\n                    orientation: 'Horizontal',\n                },\n                lanes: [\n                    {\n                        id: 'stackCanvas1',\n                        header: {\n                            annotation: { content: 'CUSTOMER' }, width: 50,\n                            style: { fontSize: 11 }\n                        },\n                        height: 100,\n                        children: [\n                            {\n                                id: 'Order',\n                                shape: { type: 'Path', data: pathData },\n                                annotations: [\n                                    {\n                                        content: 'ORDER',\n                                        style: { fontSize: 11, fontColor: 'black' }\n                                    }\n                                ],\n                                margin: { left: 60, top: 20 },\n                                height: 40, width: 100, ports: port\n                            }\n                        ],\n                    },\n                    {\n                        id: 'stackCanvas2',\n                        header: {\n                            annotation: { content: 'ONLINE' }, width: 50,\n                            style: { fontSize: 11 }\n                        },\n                        height: 100,\n                        children: [\n                            {\n                                id: 'selectItemaddcart',\n                                annotations: [{ content: 'Select item\\nAdd cart' }],\n                                margin: { left: 190, top: 20 },\n                                height: 40, width: 100, ports: port\n                            },\n                            {\n                                id: 'paymentondebitcreditcard',\n                                annotations: [{ content: 'Payment on\\nDebit/Credit Card' }],\n                                margin: { left: 350, top: 20 },\n                                height: 40, width: 100, ports: port\n                            }\n                        ],\n                    },\n                    {\n                        id: 'stackCanvas3',\n                        header: {\n                            annotation: { content: 'SHOP' }, width: 50,\n                            style: { fontSize: 11 }\n                        },\n                        height: 100,\n                        children: [\n                            {\n                                id: 'getmaildetailaboutorder',\n                                annotations: [{ content: 'Get mail detail\\nabout order' }],\n                                margin: { left: 190, top: 20 },\n                                height: 40, width: 100, ports: port\n                            },\n                            {\n                                id: 'pakingitem',\n                                annotations: [{ content: 'Paking item' }],\n                                margin: { left: 350, top: 20 },\n                                height: 40, width: 100, ports: port\n                            }\n                        ],\n                    },\n                    {\n                        id: 'stackCanvas4',\n                        header: {\n                            annotation: { content: 'DELIVERY' }, width: 50,\n                            style: { fontSize: 11 }\n                        },\n                        height: 100,\n                        children: [\n                            {\n                                id: 'sendcourieraboutaddress',\n                                annotations: [{ content: 'Send Courier\\n about Address' }],\n                                margin: { left: 190, top: 20 },\n                                height: 40, width: 100, ports: port\n                            },\n                            {\n                                id: 'deliveryonthataddress',\n                                annotations: [{ content: 'Delivery on that\\n Address' }],\n                                margin: { left: 350, top: 20 },\n                                height: 40, width: 100, ports: port\n                            },\n                            {\n                                id: 'getitItem',\n                                shape: { type: 'Path', data: pathData },\n                                annotations: [{ content: 'GET IT ITEM', style: { fontSize: 11 } }],\n                                margin: { left: 500, top: 20 },\n                                height: 40, width: 100, ports: port\n                            }\n                        ],\n                    },\n                ],\n                phases: [\n                    {\n                        id: 'phase1', offset: 170,\n                        header: { content: { content: 'Phase' } }\n                    },\n                    {\n                        id: 'phase2', offset: 450,\n                        header: { content: { content: 'Phase' } }\n                    },\n                ],\n                phaseSize: 20,\n            },\n            offsetX: bounds.width / 2, offsetY: bounds.height / 2,\n            height: 100,\n            width: 650\n        },\n    ];\n    function getNodeDefaults(node) {\n        node.style.strokeColor = \"#CCCCCC\";\n        return node;\n    }\n    //Initializes the Connectors for the diagram\n    var connectors = [\n        {\n            id: 'connector1', sourceID: 'Order',\n            targetID: 'selectItemaddcart'\n        },\n        {\n            id: 'connector2', sourceID: 'selectItemaddcart',\n            targetID: 'paymentondebitcreditcard'\n        },\n        {\n            id: 'connector3', sourceID: 'paymentondebitcreditcard',\n            targetID: 'getmaildetailaboutorder'\n        },\n        {\n            id: 'connector4', sourceID: 'getmaildetailaboutorder',\n            targetID: 'pakingitem'\n        },\n        {\n            id: 'connector5', sourceID: 'pakingitem',\n            targetID: 'sendcourieraboutaddress'\n        },\n        {\n            id: 'connector6', sourceID: 'sendcourieraboutaddress',\n            targetID: 'deliveryonthataddress'\n        },\n        {\n            id: 'connector7', sourceID: 'deliveryonthataddress',\n            targetID: 'getitItem'\n        },\n    ];\n    var intervals = [1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75];\n    var hvgridlines = { lineColor: '#e0e0e0', lineIntervals: intervals };\n    //Initializes diagram control\n    var diagram = new ej.diagrams.Diagram({\n        width: '100%', height: '100%', nodes: nodes, connectors: connectors,\n        getNodeDefaults: getNodeDefaults,\n        snapSettings: {\n            horizontalGridlines: hvgridlines,\n            verticalGridlines: hvgridlines,\n            constraints: ej.diagrams.SnapConstraints.All & ~ej.diagrams.SnapConstraints.ShowLines\n        },\n        //Sets the default values of a Connector.\n        getConnectorDefaults: function (connector) {\n            if (connector.id.indexOf(\"Link21\") !== -1) {\n                connector.type = 'Straight';\n            }\n            else if (connector.id.indexOf(\"Link22\") !== -1) {\n                connector.type = 'Straight';\n            }\n            else {\n                connector.type = 'Orthogonal';\n            }\n            connector.style.strokeColor = \"#CCCCCC\";\n            connector.sourceDecorator.style.strokeColor = \"#CCCCCC\";\n            connector.targetDecorator.style.strokeColor = \"#CCCCCC\";\n            connector.sourceDecorator.style.fill = \"#CCCCCC\";\n            connector.targetDecorator.style.fill = \"#CCCCCC\";\n            return connector;\n        },\n        contextMenuSettings: {\n            show: true, items: [\n                {\n                    text: 'Clone', id: 'Clone', target: '.e-diagramcontent',\n                },\n                {\n                    text: 'Cut', id: 'Cut', target: '.e-diagramcontent',\n                },\n                {\n                    text: 'InsertLaneBefore', id: 'InsertLaneBefore', target: '.e-diagramcontent',\n                },\n                {\n                    text: 'InsertLaneAfter', id: 'InsertLaneAfter', target: '.e-diagramcontent',\n                }],\n            showCustomMenuOnly: true,\n        },\n        contextMenuOpen: function (args) {\n            for (var i=0; i< args.items.length; i++ ) {\n                var item = args.items[i];\n                if ((diagram.selectedItems.connectors.length + diagram.selectedItems.nodes.length) > 0) {\n                    if (item.id === 'InsertLaneBefore' || item.id === 'InsertLaneAfter') {\n                        if (diagram.selectedItems.connectors.length || (diagram.selectedItems.nodes.length && !(diagram.selectedItems.nodes[0]).isLane)) {\n                            args.hiddenItems.push(item.text);\n                        }\n                    }\n                } else {\n                    args.hiddenItems.push(item.text);\n                }\n            }\n        },\n        contextMenuClick: function (args) {\n            if (args.item.id === 'InsertLaneBefore' || args.item.id === 'InsertLaneAfter') {\n                if (diagram.selectedItems.nodes.length > 0 && (diagram.selectedItems.nodes[0]).isLane) {\n                    var index;\n                    var node = diagram.selectedItems.nodes[0];\n                    var swimlane = diagram.getObject((diagram.selectedItems.nodes[0]).parentId);\n                    var shap = swimlane.shape;\n                    var existingLane = cloneObject(shape.lanes[0]);\n\n                    var newLane = {\n                        id: randomId(),\n                        header: {\n                            width: existingLane.header.width, height: existingLane.header.height,\n                            style: existingLane.header.style\n                        },\n                        style: existingLane.style,\n                        height: existingLane.height, width: existingLane.width,\n                    };\n\n                    if (shape.orientation === 'Horizontal') {\n                        var exclude = 0;\n                        exclude += (shape.header) ? 1 : 0;\n                        exclude += (shape.phases.length) ? 1 : 0;\n                        index = node.rowIndex - exclude;\n                        newLane.header.width = existingLane.header.width;\n                        newLane.header.height = existingLane.height;\n                    } else {\n                        index = node.columnIndex - (shape.phases.length) ? 1 : 0;\n                        newLane.header.width = existingLane.width;\n                        newLane.header.height = existingLane.header.height;\n                    }\n                    if (args.item.id === 'InsertLaneBefore') {\n                        diagram.addLanes(swimlane, [newLane], index);\n                    } else {\n                        diagram.addLanes(swimlane, [newLane], index + 1);\n                    }\n                    diagram.clearSelection();\n                }\n            } else if (args.item.id === 'Cut') {\n                diagram.cut();\n            } else if (args.item.id === 'Clone') {\n                diagram.copy();\n                diagram.paste();\n            }\n        },\n        //Sets the Node style for DragEnter element.\n        dragEnter: function (args) {\n            var obj = args.element;\n            if (obj instanceof ej.diagrams.Node) {\n                var shape = obj.shape;\n                if (shape.isLane) {\n                    if (shape.orientation === 'Horizontal') {\n                        shape.lanes[0].height = 100;\n                        shape.lanes[0].width = 400;\n                    } else if (shape.orientation === 'Vertical') {\n                        shape.lanes[0].height = 400;\n                        shape.lanes[0].width = 100;\n                    }\n                }\n            }\n        }\n    });\n    diagram.appendTo('#diagram');\n    if (ej.base.Browser.isDevice) {\n        diagram.fitToPage();\n    }\n    // Initializes the palettes to be displayed in the symbol palette.\n    var palettes = [\n        {\n            id: 'flow', expanded: true, title: 'Flow Shapes', symbols: [\n                {\n                    id: 'Terminator', width: 50, height: 60, addInfo: { tooltip: 'Terminator' }, shape: { type: 'Flow', shape: 'Terminator' }, style: { strokeWidth: 1 }, ports: port\n                },\n                {\n                    id: 'Process', addInfo: { tooltip: 'Process' }, width: 50, height: 60, shape: { type: 'Flow', shape: 'Process' }, style: { strokeWidth: 1 }, ports: port\n                },\n                {\n                    id: 'Decision', addInfo: { tooltip: 'Decision' }, width: 50, height: 50, shape: { type: 'Flow', shape: 'Decision' }, style: { strokeWidth: 1 }, ports: port\n                },\n                {\n                    id: 'Document',  addInfo: { tooltip: 'Document' }, width: 50, height: 50, shape: { type: 'Flow', shape: 'Document' }, style: { strokeWidth: 1 }, ports: port\n                },\n                {\n                    id: 'PreDefinedProcess',  addInfo: { tooltip: 'Predefined process' }, width: 50, height: 50, shape: { type: 'Flow', shape: 'PreDefinedProcess' }, ports: port, style: { strokeWidth: 1 }\n                },\n                {\n                    id: 'data', addInfo: { tooltip: 'Data' }, width: 50, height: 50, shape: { type: 'Flow', shape: 'Data' }, ports: port, style: { strokeWidth: 1 }\n                },\n            ]\n        },\n        {\n            id: 'swimlaneShapes', expanded: true,\n            title: 'Swimlane Shapes',\n            symbols: [\n                {\n                    id: 'stackCanvas1', addInfo: { tooltip: 'Horizontal swimlane' },\n                    shape: {\n                        type: 'SwimLane', lanes: [\n                            {\n                                id: 'lane1',\n                                style: { strokeColor: 'black' }, height: 60, width: 150,\n                                header: { width: 50, height: 50, style: { strokeColor: 'black', fontSize: 11 } },\n                            }\n                        ],\n                        orientation: 'Horizontal', isLane: true\n                    },\n                    height: 60,\n                    width: 140,\n                    offsetX: 70,\n                    offsetY: 30,\n                }, {\n                    id: 'stackCanvas2', addInfo: { tooltip: 'Vertical swimlane' },\n                    shape: {\n                        type: 'SwimLane',\n                        lanes: [\n                            {\n                                id: 'lane1',\n                                style: { strokeColor: 'black' }, height: 150, width: 60,\n                                header: { width: 50, height: 50, style: { strokeColor: 'black', fontSize: 11 } },\n                            }\n                        ],\n                        orientation: 'Vertical', isLane: true\n                    },\n                    height: 140,\n                    width: 60,\n                    offsetX: 70,\n                    offsetY: 30,\n                }, {\n                    id: 'verticalPhase', addInfo: { tooltip: 'Vertical phase' },\n                    shape: {\n                        type: 'SwimLane',\n                        phases: [{ style: { strokeWidth: 1, strokeDashArray: '3,3', strokeColor: '#A9A9A9' }, }],\n                        annotations: [{ text: '' }],\n                        orientation: 'Vertical', isPhase: true\n                    },\n                    height: 60,\n                    width: 140\n                }, {\n                    id: 'horizontalPhase', addInfo: { tooltip: 'Horizontal phase' },\n                    shape: {\n                        type: 'SwimLane',\n                        phases: [{ style: { strokeWidth: 1, strokeDashArray: '3,3', strokeColor: '#A9A9A9' }, }],\n                        annotations: [{ text: '' }],\n                        orientation: 'Horizontal', isPhase: true\n                    },\n                    height: 60,\n                    width: 140\n                }\n            ]\n        },\n        {\n            id: 'connectors', expanded: true, symbols: [\n                {\n                    id: 'Link1', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n                    targetDecorator: { shape: 'Arrow' }, style: { strokeWidth: 1 }\n                },\n                {\n                    id: 'Link2', type: 'Orthogonal', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 40, y: 40 },\n                    targetDecorator: { shape: 'Arrow' }, style: { strokeWidth: 1, strokeDashArray: '4 4' }\n                },\n                {\n                    id: 'Link21', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n                    targetDecorator: { shape: 'Arrow' }, style: { strokeWidth: 1 }\n                },\n                {\n                    id: 'Link22', type: 'Straight', sourcePoint: { x: 0, y: 0 }, targetPoint: { x: 60, y: 60 },\n                    targetDecorator: { shape: 'Arrow' }, style: { strokeWidth: 1, strokeDashArray: '4 4' }\n                }\n            ], title: 'Connectors'\n        }\n    ];\n    //Initializes the symbol palette\n    var palette = new ej.diagrams.SymbolPalette({\n        expandMode: 'Multiple',\n        palettes: palettes,\n        width: '100%', height: '100%',\n        symbolMargin: { left: 8, right: 8, top: 8, bottom: 8 },\n        symbolHeight: 48, symbolWidth: 48,\n        getSymbolInfo: function (symbol) {\n            return { tooltip: symbol.addInfo ? symbol.addInfo.tooltip : symbol.id };\n        }\n    });\n\n    palette.appendTo('#symbolpalette');\n    addEvents();\n\n\n"}