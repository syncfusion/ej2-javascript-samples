{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/custom-shapes/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"diagram\"></div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Getting started -  Html Node\r\n */\r\n\r\n//Add Gauge control to Diagram.\r\nfunction getHtmlContent() {\r\n    var div = document.getElementById('gauge');\r\n    var circularGauge = new ej.circulargauge.CircularGauge({\r\n        load: function (args) {\r\n            var selectedTheme = location.hash.split('/')[1];\r\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n        },\r\n        axes: [{\r\n            lineStyle: { width: 10, color: 'transparent' },\r\n            labelStyle: {\r\n                position: 'Inside', useRangeColor: false,\r\n                font: { size: '12px', fontFamily: 'Roboto', fontStyle: 'Regular' }\r\n            }, majorTicks: { height: 10, offset: 5, color: '#9E9E9E' }, minorTicks: { height: 0 },\r\n            annotations: [{\r\n                content: '<div><span style=\"font-size:14px; color:#9E9E9E; font-family:Regular\">Speedometer</span></div>',\r\n                radius: '30%', angle: 0, zIndex: '1'\r\n            }, {\r\n                content: '<div><span style=\"font-size:20px; color:#424242; font-family:Regular\">65 MPH</span></div>',\r\n                radius: '40%', angle: 180, zIndex: '1'\r\n            }],\r\n            startAngle: 210, endAngle: 150, minimum: 0, maximum: 120, radius: '80%',\r\n            ranges: [{ start: 0, end: 40, color: '#30B32D' }, { start: 40, end: 80, color: '#FFDD00' },\r\n            { start: 80, end: 120, color: '#F03E3E' }],\r\n            pointers: [{\r\n                value: 65, radius: '60%', color: '#757575', pointerWidth: 8,\r\n                cap: { radius: 7, color: '#757575' }, needleTail: { length: '18%', color: '#757575' }\r\n            }]\r\n        }]\r\n    });\r\n    circularGauge.appendTo('#gauge');\r\n    return div;\r\n}\r\n// tslint:disable-next-line:max-func-body-length\r\n\r\n    var htmlcontent = '<div id=\"gauge\" style=\"height:100%; width:100%; overflow:hidden;\"> </div>';\r\n    var shape = { type: 'HTML', content: htmlcontent };\r\n    var node1 = {\r\n        id: 'node', offsetX: 450, offsetY: 200, width: 300, height: 300, shape: shape\r\n    };\r\n    //initialize the diagram control\r\n    var diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: '640px', nodes: [node1], snapSettings: { constraints: 0 },\r\n        created: function() { diagram.fitToPage(); }\r\n    });\r\n    diagram.appendTo('#diagram');\r\n    getHtmlContent();\r\n\r\n"}