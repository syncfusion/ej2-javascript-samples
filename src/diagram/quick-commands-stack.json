{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/diagram/quick-commands/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n        <style>\n                .image-pattern-style {\n                    background-color: white;\n                    background-size: contain;\n                    background-repeat: no-repeat;\n                    height: 50px;\n                    width: calc((100% - 18px) / 3);\n                    cursor: pointer;\n                    border: 1px solid #D5D5D5;\n                    background-position: center;\n                    float: left;\n                }\n            \n                .image-pattern-style:hover {\n                    border-color: gray;\n                    border-width: 2px;\n                }\n            \n                .row {\n                    margin: 10px 0px 0px 0px;\n                }\n            \n                .e-selected-style {\n                    border-color: #006CE6;\n                    border-width: 2px;\n                }\n            \n                .row-header {\n                    font-size: 15px;\n                    font-weight: 500;\n                    margin-top: 10px\n                }\n            \n                .e-checkbox-wrapper .e-label {\n                    font-size: 12px;\n                }\n            </style>\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <div class=\"row\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row row-header1\">\n                Alignment\n            </div>\n            <div class=\"row\" style=\"padding-top: 8px\">\n                <div class=\"image-pattern-style e-selected-style\" id=\"left\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/user-handle/bottoml.png); margin-right: 4px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"right\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/user-handle/bottomr.png); margin: 0px 4px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"topr\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/user-handle/topr.png);\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" id=\"pattern\">\n            <div class=\"row row-header1\">\n                Appearance\n            </div>\n            <div class=\"row\" style=\"padding-top: 8px\">\n                <div class=\"image-pattern-style\" id=\"pattern1\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/user-handle/pattern1.png); margin-right: 4px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"pattern2\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/user-handle/pattern2.png); margin: 0px 4px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"pattern3\" style=\"background-image: url(//npmci.syncfusion.com/production/demos/src/diagram/Images/user-handle/pattern3.png);\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/*jshint esversion: 6 */\n/**\n * UserHandle\n */\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.MindMap, ej.diagrams.HierarchicalTree);\nvar diagram;\n//Defines the nodes collection in diagram\nvar nodes = [\n    {\n        id: 'NewIdea', width: 150, height: 60, offsetX: 300, offsetY: 60, shape: { type: 'Flow', shape: 'Terminator' },\n        annotations: [{ content: 'New idea identified' }],\n    }, {\n        id: 'Meeting', width: 150, height: 60, offsetX: 300, offsetY: 155, shape: { type: 'Flow', shape: 'Process' },\n        annotations: [{ content: 'Meeting with board' }]\n    }, {\n        id: 'BoardDecision', width: 150, height: 110, offsetX: 300, offsetY: 280, shape: { type: 'Flow', shape: 'Decision' },\n        annotations: [{ content: 'Board decides \\n whether to proceed' }]\n    }, {\n        id: 'Project', width: 150, height: 100, offsetX: 300, offsetY: 430, shape: { type: 'Flow', shape: 'Decision' },\n        annotations: [{ content: 'Find Project manager' }]\n    }, {\n        id: 'End', width: 150, height: 60, offsetX: 300, offsetY: 555, shape: { type: 'Flow', shape: 'Process' },\n        annotations: [{ content: 'Implement and Deliver' }]\n    }, {\n        id: 'Decision', width: 250, height: 60, offsetX: 550, offsetY: 60, shape: { type: 'Flow', shape: 'Card' },\n        annotations: [{ content: 'Decision process for new software ideas' }]\n    }, {\n        id: 'Reject', width: 150, height: 60, offsetX: 550, offsetY: 280, shape: { type: 'Flow', shape: 'Process' },\n        annotations: [{ content: 'Reject' }]\n    }, {\n        id: 'Resources', width: 150, height: 60, offsetX: 550, offsetY: 430, shape: { type: 'Flow', shape: 'Process' },\n        annotations: [{ content: 'Hire new resources' }]\n    }\n];\n//Defines the connectors collection in diagram\nvar connectors = [\n    { id: 'connector1', type: 'Straight', sourceID: 'NewIdea', targetID: 'Meeting' },\n    { id: 'connector2', type: 'Straight', sourceID: 'Meeting', targetID: 'BoardDecision' },\n    { id: 'connector3', type: 'Straight', sourceID: 'BoardDecision', targetID: 'Project' },\n    { id: 'connector4', type: 'Straight', sourceID: 'Project', targetID: 'End' },\n    { id: 'connector5', type: 'Straight', sourceID: 'BoardDecision', targetID: 'Reject' },\n    { id: 'connector6', type: 'Straight', sourceID: 'Project', targetID: 'Resources' }\n];\n\n//Enable the clone Tool for UserHandle.\nfunction getTool(action) {\n    var tool;\n    if (action === 'clone') {\n        tool = new CloneTool(diagram.commandHandler);\n    }\n    return tool;\n}\n\n\n//set the position of the userhandle.\nfunction setuserhandleposition(offset, side, target) {\n    diagram.selectedItems.userHandles[0].offset = offset;\n    diagram.selectedItems.userHandles[0].side = side;\n\n}\n//set the style of the userhandle.\nfunction applyuserhandlestyle(bgcolor, target) {\n    diagram.selectedItems.userHandles[0].backgroundColor = bgcolor;\n    diagram.selectedItems.userHandles[0].pathColor = 'White';\n\n}\n\n//Defines the user handle collection for nodes in diagram\n\nvar handles = [\n    {\n        name: 'clone', pathData: 'M60.3,18H27.5c-3,0-5.5,2.4-5.5,5.5v38.2h5.5V23.5h32.7V18z M68.5,28.9h-30c-3,' +\n            '0-5.5,2.4-5.5,5.5v38.2c0,3,2.4,5.5,5.5,5.5h30c3,0,5.5-2.4,5.5-5.5V34.4C73.9,31.4,71.5,28.9,68.5,28.9z ' +\n            'M68.5,72.5h-30V34.4h30V72.5z',\n        visible: true, offset: 0, side: 'Bottom', margin: { top: 0, bottom: 0, left: 0, right: 0 }\n    }\n];\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        /* jshint proto: true */\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar CloneTool = (function (_super) {\n    __extends(CloneTool, _super);\n    function CloneTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CloneTool.prototype.mouseDown = function (args) {\n        var newObject;\n        if (diagram.selectedItems.nodes.length > 0) {\n            newObject = ej.diagrams.cloneObject(diagram.selectedItems.nodes[0]);\n        }\n        else {\n            newObject = ej.diagrams.cloneObject(diagram.selectedItems.connectors[0]);\n        }\n        newObject.id += ej.diagrams.randomId();\n        diagram.paste([newObject]);\n        args.source = diagram.nodes[diagram.nodes.length - 1];\n        args.sourceWrapper = args.source.wrapper;\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    return CloneTool;\n}(ej.diagrams.MoveTool));\n\n\n    //Defines the diagram content\n    diagram = new ej.diagrams.Diagram({\n        width: '100%', height: '600px', nodes: nodes,\n        connectors: connectors,\n        selectedItems: { constraints: ej.diagrams.SelectorConstraints.UserHandle, userHandles: handles },\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\n        //set Node default value \n        getNodeDefaults: function (node) {\n            return {\n                style: { fill: '#578CA9', strokeColor: 'none' },\n                annotations: [{ style: { color: 'white' } }]\n            };\n        },\n        //set CustomTool \n        getCustomTool: getTool\n\n    });\n    diagram.appendTo('#diagram');\n    diagram.fitToPage();\n    diagram.select([diagram.nodes[0]]);\n    //Change the postion of the UserHandle\n    document.getElementById('appearance').onclick = function (args) {\n        var target = args.target;\n        var appearanceBlock = document.getElementById('appearance');\n\n        if (target.className === 'image-pattern-style') {\n            switch (target.id) {\n                case 'left':\n                    setuserhandleposition(0, 'Bottom', target);\n                    break;\n                case 'right':\n                    setuserhandleposition(1, 'Bottom', target);\n                    break;\n                case 'topr':\n                    setuserhandleposition(0, 'Right', target);\n                    break;\n            }\n        }\n        diagram.dataBind();\n    };\n    //Change the Appearence of the UserHandle\n    document.getElementById('pattern').onclick = function (args) {\n        var target = args.target;\n        var patternBlock = document.getElementById('pattern');\n\n        if (target.className === 'image-pattern-style') {\n            switch (target.id) {\n                case 'pattern1':\n                    applyuserhandlestyle('#1E90FF', target);\n                    break;\n                case 'pattern2':\n                    applyuserhandlestyle('#3CB371', target);\n                    break;\n                case 'pattern3':\n                    applyuserhandlestyle('#FF6347', target);\n                    break;\n            }\n        }\n        diagram.dataBind();\n    };\n\n\n\n\n"}