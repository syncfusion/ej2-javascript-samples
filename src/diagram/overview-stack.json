{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/diagram/overview/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n<div class=\"col-lg-4\" style=\" width:50%; padding:0px;right:30px;bottom:20px;border: #eeeeee;border-style: solid;box-shadow: 0px 2px 2px rgba(0,0,0,0.3); background:#f7f7f7;position:absolute\">\n    <div id=\"overview\" style=\"top:30px\"></div>\n</div>\n\n\n<style>\n</style></div></body></html>","index.js":"{{ripple}}\r\n/**\r\n * OverView\r\n */\r\nej.diagrams.Diagram.Inject(ej.diagrams.DataBinding, ej.diagrams.HierarchicalTree);\r\n\r\n//Funtion to add the Template of the Node.\r\nfunction setNodeTemplate(obj, diagram) {\r\n    var content = new ej.diagrams.StackPanel();\r\n    content.id = obj.id + '_outerstack';\r\n    content.orientation = 'Horizontal';\r\n    content.style.strokeColor = 'gray';\r\n    content.padding = { left: 5, right: 10, top: 5, bottom: 5 };\r\n\r\n    var image = new ej.diagrams.ImageElement();\r\n    image.width = 50;\r\n    image.height = 50;\r\n    image.style.strokeColor = 'none';\r\n    image.source = obj.data.ImageUrl;\r\n    image.id = obj.id + '_pic';\r\n\r\n    var innerStack = new ej.diagrams.StackPanel();\r\n    innerStack.style.strokeColor = 'none';\r\n    innerStack.margin = { left: 5, right: 0, top: 0, bottom: 0 };\r\n    innerStack.id = obj.id + '_innerstack';\r\n\r\n    var text = new ej.diagrams.TextElement();\r\n    text.content = obj.data.Name;\r\n    text.style.color = 'black';\r\n    text.style.bold = true;\r\n    text.style.strokeColor = 'none';\r\n    text.horizontalAlignment = 'Left';\r\n    text.style.fill = 'none';\r\n    text.id = obj.id + '_text1';\r\n\r\n    var desigText = new ej.diagrams.TextElement();\r\n    desigText.margin = { left: 0, right: 0, top: 5, bottom: 0 };\r\n    desigText.content = obj.data.Designation;\r\n    desigText.style.color = 'black';\r\n    desigText.style.strokeColor = 'none';\r\n    desigText.style.fontSize = 12;\r\n    desigText.style.fill = 'none';\r\n    desigText.horizontalAlignment = 'Left';\r\n    desigText.style.textWrapping = 'Wrap';\r\n    desigText.id = obj.id + '_desig';\r\n    innerStack.children = [text, desigText];\r\n    content.children = [image, innerStack];\r\n    return content;\r\n}\r\n\r\n    var overview;\r\n    //Initializtion of the diagram.\r\n    var diagram = new ej.diagrams.Diagram({\r\n        width: '100%', height: '590px', scrollSettings: { scrollLimit: 'Infinity' },\r\n        //Sets the constraints of the SnapSettings\r\n        snapSettings: { constraints: ej.diagrams.SnapConstraints.None },\r\n        //Configrues organizational chart layout\r\n        layout: {\r\n            type: 'OrganizationalChart', margin: { top: 20 },\r\n            getLayoutInfo: function (node, tree) {\r\n                if (!tree.hasSubTree) {\r\n                    tree.orientation = 'Vertical';\r\n                    tree.type = 'Right';\r\n                }\r\n            }\r\n        },\r\n        //Sets the parent and child relationship of DataSource.\r\n        dataSourceSettings: {\r\n            id: 'Id', parentId: 'ReportingPerson', dataSource: new ej.data.DataManager(window.overviewData)\r\n        },\r\n        //Sets the default values of Nodes.\r\n        getNodeDefaults: function (obj, diagram) {\r\n            obj.height = 50;\r\n            obj.style = { fill: 'transparent', strokeWidth: 2 };\r\n            return obj;\r\n        },\r\n        //Sets the default values of connectors.\r\n        getConnectorDefaults: function (connector, diagram) {\r\n            connector.targetDecorator.shape = 'None';\r\n            connector.type = 'Orthogonal';\r\n            connector.style.strokeColor = 'gray';\r\n            return connector;\r\n        },\r\n        //customization of the node.\r\n        setNodeTemplate: function (obj, diagram) {\r\n            return setNodeTemplate(obj, diagram);\r\n        }\r\n    });\r\n    diagram.appendTo('#diagram');\r\n    //Initializtion of the Overview.\r\n\r\n    overview = new ej.diagrams.Overview({\r\n        width: '100%', height: '150px', sourceID: 'diagram'\r\n    });\r\n    overview.appendTo('#overview');\r\n\r\n"}