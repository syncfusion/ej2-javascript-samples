{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/pivot-table/label-filtering/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section pivottable-property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;height:100%;\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Fields:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div>\n                        <input type=\"text\" tabindex=\"1\" id=\"label-fields\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Condition:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"conditionscls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"label-conditions\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"input1cls\" style=\"height: 50px\">\n                <td>\n                    <div>Value 1:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"value1cls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"label-value1\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"input2cls\" style=\"height: 50px; display: none\">\n                <td>\n                    <div>Value 2:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"value2cls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"label-value2\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td colspan=\"2\">\n                    <div style=\"float:right;margin-right: 4px\">\n                        <button id=\"label-clear\">Clear</button>\n                    </div>\n                    <div style=\"float:right;margin-right: 4px\">\n                        <button id=\"label-apply\">Apply</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","index.js":"{{ripple}}/**\r\n * Pivot Table Filtering Sample.\r\n */\r\n\r\n    ej.base.enableRipple(false);\r\n    var fieldCollections = {};\r\n    var operators = ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\r\n        'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\r\n        'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'];\r\n    var fields = ['Country', 'Products', 'Year'];\r\n    var pivotObj = new ej.pivotview.PivotView({\r\n        dataSourceSettings: {\r\n            allowLabelFilter: true,\r\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\r\n            rows: [{ name: 'Country' }, { name: 'Products' }],\r\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\r\n            columns: [{ name: 'Year' }],\r\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\r\n            { name: 'Amount', caption: 'Sold Amount' }],\r\n            dataSource: window.Pivot_Data,\r\n            expandAll: false\r\n        },\r\n        dataBound: function (args) {\r\n            fieldCollections = {};\r\n            for (var i = 0, len = pivotObj.dataSourceSettings.filterSettings; i < len.length; i++) {\r\n                var field = len[i];\r\n                fieldCollections[field.name] = field;\r\n            }\r\n        },\r\n        width: '100%',\r\n        height: 300,\r\n        gridSettings: { columnWidth: 140 }\r\n    });\r\n    pivotObj.appendTo('#PivotView');\r\n    var fieldsddl = new ej.dropdowns.DropDownList({\r\n        dataSource: fields,\r\n        index: 0,\r\n        width: '100%',\r\n        change: function (args) {\r\n            if (fieldCollections[args.value]) {\r\n                operatorddl.value = fieldCollections[args.value].condition;\r\n                valueInput1.value = fieldCollections[args.value].value1;\r\n                valueInput2.value = fieldCollections[args.value].value2;\r\n            }\r\n            else {\r\n                setFilters(args.value, 'DoesNotEquals', '', '');\r\n                operatorddl.value = 'DoesNotEquals';\r\n                valueInput1.value = '';\r\n                valueInput2.value = '';\r\n            }\r\n            updateButtonState();\r\n        }\r\n    });\r\n    fieldsddl.appendTo('#label-fields');\r\n    var operatorddl = new ej.dropdowns.DropDownList({\r\n        dataSource: operators,\r\n        value: 'DoesNotEquals',\r\n        change: function (args) {\r\n            if (args.value === 'Between' || args.value === 'NotBetween') {\r\n                document.querySelector('.input2cls').style.display = '';\r\n            }\r\n            else {\r\n                document.querySelector('.input2cls').style.display = 'none';\r\n            }\r\n            setFilters(fieldsddl.value, args.value, valueInput1.value, valueInput2.value);\r\n            updateButtonState();\r\n        }\r\n    });\r\n    operatorddl.appendTo('#label-conditions');\r\n    var valueInput1 = new ej.inputs.MaskedTextBox({\r\n        value: '',\r\n        placeholder: 'Example: \"Germany\"',\r\n        change: function (e) {\r\n            setFilters(fieldsddl.value, operatorddl.value, e.value, valueInput2.value);\r\n            updateButtonState();\r\n        },\r\n        width: '100%'\r\n    });\r\n    valueInput1.appendTo('#label-value1');\r\n    var valueInput2 = new ej.inputs.MaskedTextBox({\r\n        value: '',\r\n        placeholder: 'Example: \"States\"',\r\n        change: function (e) {\r\n            setFilters(fieldsddl.value, operatorddl.value, valueInput1.value, e.value);\r\n            updateButtonState();\r\n        },\r\n        width: '100%'\r\n    });\r\n    valueInput2.appendTo('#label-value2');\r\n    var applyBtn = new ej.buttons.Button({\r\n        isPrimary: true, disabled: true\r\n    });\r\n    applyBtn.appendTo('#label-apply');\r\n    var clearBtn = new ej.buttons.Button({ });\r\n    clearBtn.appendTo('#label-clear');\r\n    function setFilters(fieldName, condition, operand1, operand2) {\r\n        fieldCollections[fieldName] = {\r\n            name: fieldName,\r\n            type: 'Label',\r\n            condition: condition,\r\n            value1: operand1,\r\n            value2: operand2\r\n        };\r\n    }\r\n    function updateButtonState() {\r\n        applyBtn.disabled = true;\r\n        for (var i = 0, len = fields; i < len.length; i++) {\r\n            var field = len[i];\r\n            if (fieldCollections[field] && (fieldCollections[field].value1 !== '' || fieldCollections[field].value2 !== '')) {\r\n                applyBtn.disabled = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    document.getElementById('label-apply').onclick = function () {\r\n        var filterOptions = [];\r\n        for (var i = 0, len = fields; i < len.length; i++) {\r\n            var field = len[i];\r\n            if (fieldCollections[field] && fieldCollections[field].value1 !== ''){ \r\n                filterOptions.push(fieldCollections[field]);\r\n            }\r\n        }\r\n        if (filterOptions.length === 0) {\r\n            filterOptions = [{\r\n                name: fieldsddl.value,\r\n                type: 'Label',\r\n                condition: operatorddl.value,\r\n                value1: valueInput1.value.toString(),\r\n                value2: valueInput2.value.toString()\r\n            }];\r\n        }\r\n        pivotObj.dataSourceSettings.filterSettings = filterOptions;\r\n    };\r\n    document.getElementById('label-clear').onclick = function () {\r\n        pivotObj.dataSourceSettings.filterSettings = [];\r\n        valueInput1.value = '';\r\n        valueInput2.value = '';\r\n        fieldCollections = {};\r\n        updateButtonState();\r\n    };\r\n\r\n"}