{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/pivot-table/toolbar/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"height:100%;\">\n        </div>\n    </div>\n</div>\n","index.js":"{{ripple}}/**\r\n * Pivot Table Toolbar Sample.\r\n */\r\n\r\n    ej.base.enableRipple(false);\r\n    var pivotObj = new ej.pivotview.PivotView({\r\n        dataSourceSettings: {\r\n            expandAll: false,\r\n            dataSource: window.Pivot_Data,\r\n            columns: [{ name: 'Year' }, { name: 'Order_Source', caption: 'Order Source' }],\r\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\r\n            enableSorting: true,\r\n            allowLabelFilter: true,\r\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\r\n                { name: 'Amount', caption: 'Sold Amount' }],\r\n            allowValueFilter: true,\r\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\r\n            rows: [{ name: 'Country' }, { name: 'Products' }]\r\n        },\r\n        allowExcelExport: true,\r\n        allowConditionalFormatting: true,\r\n        allowPdfExport: true,\r\n        showToolbar: true,\r\n        displayOption:{view:'Both'},\r\n        chartSettings: {\r\n            load: function(args) {\r\n              var selectedTheme = location.hash.split(\"/\")[1];\r\n              selectedTheme = selectedTheme ? selectedTheme : \"Material\";\r\n              args.chart.theme =\r\n                selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1);\r\n            }\r\n        },\r\n        allowCalculatedField: true,\r\n        showFieldList: true,\r\n        width: '100%',\r\n        toolbar: ['New', 'Save', 'SaveAs', 'Rename', 'Remove', 'Load',\r\n\t\t'Grid', 'Chart', 'Export', 'SubTotal', 'GrandTotal', 'ConditionalFormatting', 'FieldList'],\r\n        saveReport: function (args) {\r\n            var reports = [];\r\n            var isSaved = false;\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                reports = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            if (args.report && args.reportName && args.reportName !== '') {\r\n                reports.map(function (item) {\r\n                    if (args.reportName === item.reportName) {\r\n                        item.report = args.report;\r\n                        isSaved = true;\r\n                    }\r\n                });\r\n                if (!isSaved) {\r\n                    reports.push(args);\r\n                }\r\n                localStorage.pivotviewReports = JSON.stringify(reports);\r\n            }\r\n        },\r\n        fetchReport: function (args) {\r\n            var reportCollection = [];\r\n            var reeportList = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            reportCollection.map(function (item) {\r\n                reeportList.push(item.reportName);\r\n            });\r\n            args.reportName = reeportList;\r\n        },\r\n        loadReport: function (args) {\r\n            var reportCollection = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            reportCollection.map(function (item) {\r\n                if (args.reportName === item.reportName) {\r\n                    args.report = item.report;\r\n                }\r\n            });\r\n            if (args.report) {\r\n                pivotObj.dataSourceSettings = JSON.parse(args.report).dataSourceSettings;\r\n            }\r\n        },\r\n        removeReport: function (args) {\r\n            var reportCollection = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            for (var i = 0; i < reportCollection.length; i++) {\r\n                if (reportCollection[i].reportName === args.reportName) {\r\n                    reportCollection.splice(i, 1);\r\n                }\r\n            }\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                localStorage.pivotviewReports = JSON.stringify(reportCollection);\r\n            }\r\n        },\r\n        renameReport: function (args) {\r\n            var reportCollection = [];\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\r\n            }\r\n            reportCollection.map(function (item) {\r\n                if (args.reportName === item.reportName) {\r\n                    item.reportName = args.rename;\r\n                }\r\n            });\r\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\r\n                localStorage.pivotviewReports = JSON.stringify(reportCollection);\r\n            }\r\n        },\r\n        newReport: function () {\r\n            pivotObj.setProperties({\r\n                dataSourceSettings: {\r\n                    columns: [],\r\n                    rows: [],\r\n                    values: [],\r\n                    filters: []\r\n                }\r\n            }, false);\r\n        },\r\n\t\ttoolbarRender: function (args) {\r\n\t\t\targs.customToolbar.splice(6, 0, {\r\n\t\t\t\ttype: 'Separator' \r\n\t\t\t});\r\n\t\t\targs.customToolbar.splice(9, 0, {\r\n\t\t\t\ttype: 'Separator' \r\n\t\t\t});\r\n\t\t},\r\n        height: 300,\r\n        gridSettings: {\r\n            columnWidth: 140\r\n        }\r\n    });\r\n    pivotObj.appendTo('#PivotView');\r\n"}