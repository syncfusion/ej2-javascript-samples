{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/pivot-table/filtering/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section pivot-property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;height:100%;\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Fields:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" tabindex=\"1\" id=\"fields\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Members:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"valuecls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"values\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Filter Type:\n                    </div>\n                </td>\n                <td>\n                    <div style=\"margin-top:-5px\">\n                        <input type=\"text\" tabindex=\"1\" id=\"type\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td></td>\n                <td>\n                    <div style=\"float: right;margin-right: 4px\">\n                        <button id=\"apply\">Apply</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","index.js":"{{ripple}}/**\r\n * Pivot Table Filtering Sample.\r\n */\r\n\r\n    var fieldCollections = {};\r\n    var filterCollections= {};\r\n    var isInitial = true;\r\n    var type = ['Include', 'Exclude'];\r\n    var values = [];\r\n    var fields = ['Country', 'Products', 'Year'];\r\n    ej.base.enableRipple(false);\r\n    var pivotObj = new ej.pivotview.PivotView({\r\n        dataSourceSettings: {\r\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\r\n                { name: 'Amount', caption: 'Sold Amount' }],\r\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\r\n            rows: [{ name: 'Country' }, { name: 'Products' }],\r\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\r\n            columns: [{ name: 'Year' }],\r\n            dataSource: window.Pivot_Data,\r\n            expandAll: false\r\n        },\r\n        dataBound: function (args) {\r\n            if (isInitial) {\r\n                /** To fill the members for each fields into the object fieldCollections. */\r\n                var fieldCnt = fields.length - 1;\r\n                while (fieldCnt > -1) {\r\n                    var members = Object.keys(pivotObj.engineModule.fieldList[fields[fieldCnt]].members);\r\n                    var memberCnt = members.length - 1;\r\n                    var memberColl = [];\r\n                    while (memberCnt > -1) {\r\n                        memberColl.push({ Member: members[memberCnt], Checked: members[memberCnt] + '_' + false });\r\n                        memberCnt--;\r\n                    }\r\n                    fieldCollections[fields[fieldCnt]] = memberColl;\r\n                    fieldCnt--;\r\n                }\r\n                values = fieldCollections[fields[0]];\r\n                isInitial = false;\r\n            }\r\n            for (var i = 0, Cnt = pivotObj.dataSourceSettings.filterSettings; i < Cnt.length; i++) {\r\n                filterCollections[Cnt[i].name] = Cnt[i];\r\n            }\r\n        },\r\n        width: '100%',\r\n        height: 300,\r\n        gridSettings: { columnWidth: 140 }\r\n    });\r\n    pivotObj.appendTo('#PivotView');\r\n    var valuesddl = new ej.dropdowns.MultiSelect({\r\n        dataSource: values,\r\n        mode: 'CheckBox',\r\n        showDropDownIcon: true,\r\n        showClearButton: false,\r\n        enableSelectionOrder: false,\r\n        fields: { text: 'Member' },\r\n        select: function (args) {\r\n            applyBtn.disabled = false;\r\n            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + true);\r\n        },\r\n        removed: function (args) {\r\n            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + false);\r\n            setApplyBtnState();\r\n        },\r\n        open: function (args) {\r\n            args.popup.element.querySelector(\".e-filter-parent\").style.display = 'none';\r\n        }\r\n    });\r\n    valuesddl.appendTo('#values');\r\n    var fieldsddl = new ej.dropdowns.DropDownList({\r\n        dataSource: fields,\r\n        index: 0,\r\n        width: '98%',\r\n        change: function (args) {\r\n            valuesddl.dataSource = fieldCollections[args.value.toString()];\r\n            valuesddl.value = getSelectedMembers(args.value.toString());\r\n            if (filterCollections[args.value.toString()]) {\r\n                typeddl.value = filterCollections[args.value.toString()].type;\r\n            }\r\n            valuesddl.dataBind();\r\n            typeddl.dataBind();\r\n        }\r\n    });\r\n    fieldsddl.appendTo('#fields');\r\n    var typeddl = new ej.dropdowns.DropDownList({\r\n        dataSource: type,\r\n        width: '98%',\r\n        index: 1\r\n    });\r\n    typeddl.appendTo('#type');\r\n    var applyBtn = new ej.buttons.Button({\r\n        isPrimary: true, disabled: true\r\n    });\r\n    applyBtn.appendTo('#apply');\r\n    document.getElementById('apply').onclick = function () {\r\n        /** You can set your filter settings here. */\r\n        var filterItems0 = getSelectedMembers(fields[0]);\r\n        var filterItems1 = getSelectedMembers(fields[1]);\r\n        var filterItems2 = getSelectedMembers(fields[2]);\r\n        pivotObj.dataSourceSettings.filterSettings = [\r\n            { name: fields[0], items: getSelectedMembers(fields[0]), type: updateFilterType(fields[0]) },\r\n            { name: fields[1], items: getSelectedMembers(fields[1]), type: updateFilterType(fields[1]) },\r\n            { name: fields[2], items: getSelectedMembers(fields[2]), type: updateFilterType(fields[2]) }\r\n        ];\r\n        if (filterItems0.length === 0 && filterItems1.length === 0 && filterItems2.length === 0) {\r\n            applyBtn.disabled = true;\r\n        }\r\n    };\r\n\r\n    /** To get the filter type of the field in the object filterCollection. */\r\n    function updateFilterType(fieldName) {\r\n        if (fieldsddl.itemData === fieldName) {\r\n            return typeddl.itemData;\r\n        } else if (filterCollections[fieldName]) {\r\n            return filterCollections[fieldName].type;\r\n        } else {\r\n            return 'Exclude';\r\n        }\r\n    }\r\n\r\n    /** To get the checked members/status here as string array. */\r\n    function getSelectedMembers(field) {\r\n        var membersColl = [];\r\n        var members = fieldCollections[field];\r\n        var memLength = members.length - 1;\r\n        while (memLength > -1) {\r\n            if (members[memLength].Checked === members[memLength].Member + '_' + true) {\r\n                membersColl.push(members[memLength].Member.toString());\r\n            }\r\n            memLength--;\r\n        }\r\n        return membersColl;\r\n    }\r\n    /** To set the checked status of the members maintained in the object fieldCollections. */\r\n    function setMemberCheckedState(field, member, checkedState) {\r\n        var members = fieldCollections[field];\r\n        var memLength = members.length - 1;\r\n        while (memLength > -1) {\r\n            if (members[memLength].Member === member) {\r\n                members[memLength].Checked = checkedState;\r\n                break;\r\n            }\r\n            memLength--;\r\n        }\r\n    }\r\n\r\n    /** To set disabled/enabled state in the Apply button. */\r\n    function setApplyBtnState() {\r\n        var fieldArray = ['Country', 'Products', 'Year'];\r\n        var loopCount = fieldArray.length;\r\n        var isSelected = false;\r\n        var isFiltersAvail = false;\r\n        while (loopCount) {\r\n            if (getSelectedMembers(fieldArray[loopCount - 1]).length > 0) {\r\n                isSelected = true;\r\n                break;\r\n            }\r\n            if (pivotObj.dataSourceSettings.filterSettings &&\r\n                pivotObj.dataSourceSettings.filterSettings[loopCount] &&\r\n                pivotObj.dataSourceSettings.filterSettings[loopCount].items.length > 0) {\r\n                isFiltersAvail = true;\r\n            }\r\n            loopCount--;\r\n        }\r\n        applyBtn.disabled = (!isSelected && isFiltersAvail) ? isSelected : !isSelected;\r\n    }\r\n\r\n"}