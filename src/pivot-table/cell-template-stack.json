{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/pivot-table/cell-template/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"height:100%;\">\n        </div>\n    </div>\n</div>\n","index.js":"{{ripple}}/**\r\n * Pivot Table sample with Cell Template.\r\n */\r\n\r\n    ej.base.enableRipple(false);\r\n    var pivotObj = new ej.pivotview.PivotView({\r\n        dataSourceSettings: {\r\n            dataSource: window.renewableEnergy,\r\n            expandAll: true,\r\n            enableSorting: true,\r\n            drilledMembers: [{name:'Year', items:['FY 2015', 'FY 2017', 'FY 2018']}],\r\n            formatSettings: [{ name: 'ProCost', format: 'C0' }, { name: 'PowUnits', format: 'N0' }],\r\n            rows: [\r\n                { name: 'Year', caption: 'Production Year' },\r\n                { name: 'HalfYear', caption: 'Half Year' }\r\n            ],\r\n            columns: [\r\n                { name: 'EnerType', caption: 'Energy Type' },\r\n                { name: 'EneSource', caption: 'Energy Source' }\r\n            ],\r\n            values: [\r\n                { name: 'ProCost', caption: 'Revenue Growth' }\r\n            ],\r\n            filters: []\r\n        },\r\n        dataBound: function (args) {\r\n            trend();\r\n        },\r\n        height: 300,\r\n        width: '100%',\r\n        cellTemplate: '${getCellContent(data)}',\r\n        gridSettings: { columnWidth: 140 }\r\n    });\r\n    pivotObj.appendTo('#PivotView');\r\n\r\n    window.getCellContent = function (e) {\r\n        var template;\r\n        if (e && e.targetCell.className.indexOf('e-valuescontent') > -1) {\r\n            template = '<span class=\"tempwrap sb-icon-neutral pv-icons\"></span>';\r\n        } else {\r\n            template = '';\r\n        }\r\n        return template;\r\n    };\r\n    /* jshint ignore:start */\r\n    function trend() {\r\n        var cTable = document.getElementsByClassName(\"e-table\");\r\n        var colLen = pivotObj.pivotValues[3].length;\r\n        var cLen = cTable[3].children[0].children.length;\r\n        var rLen = cTable[3].children[1].children.length;\r\n     \r\n        for (let k = 0; k < rLen; k++) {\r\n            if (pivotObj.pivotValues[k] && pivotObj.pivotValues[k][0] !== undefined) {\r\n                rowIndx = (pivotObj.pivotValues[k][0]).rowIndex;\r\n                break;\r\n            }\r\n        }\r\n        var rowHeaders = [].slice.call(cTable[2].children[1].querySelectorAll('td'));\r\n        var rows = pivotObj.dataSourceSettings.rows;\r\n        if (rowHeaders.length > 1) {\r\n            for (var i = 0, Cnt = rows; i < Cnt.length; i++) {\r\n                var fields = {};\r\n                var fieldHeaders = [];\r\n                    for (var j = 0, Lnt = rowHeaders; j < Lnt.length; j++) {\r\n                        var header = rowHeaders[j];\r\n                        if (header.className.indexOf('e-gtot') === -1 && header.className.indexOf('e-rowsheader') > -1 && header.getAttribute('fieldname') === rows[i].name) {\r\n                            var headerName = rowHeaders[j].getAttribute('fieldname') + '_' + rowHeaders[j].textContent;\r\n                            fields[rowHeaders[j].textContent] = j;\r\n                            fieldHeaders.push(rowHeaders[j].textContent);\r\n                        }\r\n                    }\r\n                    if (i === 0) {\r\n                        for (var rnt = 0, Lnt = fieldHeaders; rnt < Lnt.length; rnt++) {\r\n                            if (rnt !== 0) {\r\n                                var row = fields[fieldHeaders[rnt]];\r\n                                var prevRow = fields[fieldHeaders[rnt - 1]];\r\n                                for (var j = 0, ci = 1; j < cLen && ci < colLen; j++, ci++) {\r\n                                    if (!cTable[3].children[1].children[row]) {\r\n                                        break;\r\n                                    }\r\n                                    var node = cTable[3].children[1].children[row].childNodes[j];\r\n                                    var prevNode = cTable[3].children[1].children[prevRow].childNodes[j];\r\n                                    var ri = undefined;\r\n                                    var prevRi = undefined;\r\n                                    if (node) {\r\n                                        ri = node.getAttribute(\"index\");\r\n                                    }\r\n                                    if (prevNode) {\r\n                                        prevRi = prevNode.getAttribute(\"index\");\r\n                                    }\r\n                                    if (ri && ri < pivotObj.pivotValues.length) {\r\n                                        if ((pivotObj.pivotValues[prevRi][ci]).value > (pivotObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap')) {\r\n                                            var trendElement = node.querySelector('.tempwrap');\r\n                                            trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-loss');\r\n                                        } else if ((pivotObj.pivotValues[prevRi][ci]).value < (pivotObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap')) {\r\n                                            var trendElement = node.querySelector('.tempwrap');\r\n                                            trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-profit');\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                } else {\r\n                    for (var rnt = 0, Lnt = fieldHeaders; rnt < Lnt.length; rnt++) {\r\n                        var cRow = fields[fieldHeaders[rnt]];\r\n                        for (var j = 0, ci = 1; j < cLen && ci < colLen; j++, ci++) {\r\n                            if (!cTable[3].children[1].children[cRow]) {\r\n                                break;\r\n                            }\r\n                            var node = cTable[3].children[1].children[cRow].childNodes[j];\r\n                            var prevNode = cTable[3].children[1].children[cRow - 1].childNodes[j];\r\n                            var ri = undefined;\r\n                            var prevRi = undefined;\r\n                            if (node) {\r\n                                ri = node.getAttribute(\"index\");\r\n                            }\r\n                            if (prevNode) {\r\n                                prevRi = prevNode.getAttribute(\"index\");\r\n                            }\r\n                            if (ri && ri < pivotObj.pivotValues.length) {\r\n                                var cRowFieldName = cTable[2].children[1].children[cRow].childNodes[0].getAttribute('fieldname');\r\n                                var prevRowFieldName = cTable[2].children[1].children[cRow -1].childNodes[0].getAttribute('fieldname');\r\n                                if ((pivotObj.pivotValues[prevRi][ci]).value > (pivotObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap') &&\r\n                                cRowFieldName === prevRowFieldName) {\r\n                                    var trendElement = node.querySelector('.tempwrap');\r\n                                    trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-loss');\r\n                                } else if ((pivotObj.pivotValues[prevRi][ci]).value < (pivotObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap') &&\r\n                                cRowFieldName === prevRowFieldName) {\r\n                                    var trendElement = node.querySelector('.tempwrap');\r\n                                    trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-profit');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    /* jshint ignore:end */\r\n\r\n"}