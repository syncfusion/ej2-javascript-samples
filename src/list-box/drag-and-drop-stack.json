{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/list-box/drag-and-drop/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\">\n    <div id=\"drag-drop-wrapper\">\n        <div class=\"listbox-control\">\n            <h4>Group A</h4>\n            <input id=\"listbox1\">\n        </div>\n        <span class=\"e-swap-icon\"></span>\n        <div class=\"listbox-control\">\n            <h4>Group B</h4>\n            <input id=\"listbox2\">\n            <button id=\"savechange\" class=\"e-btn\">Update</button>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n","index.js":"{{ripple}}/**\r\n * ListBox drag and drop sample.\r\n */\r\n\r\nvar dataA = new ej.data.DataManager({\r\n    json: window.dragAndDropA\r\n});\r\n\r\n\r\n\r\n    // Initialize ListBox component.\r\n    var listObj1= new ej.dropdowns.ListBox({ \r\n        // Set the scope of the ListBox.\r\n        scope: 'combined-list',\r\n\r\n        // Set the dragAndDropA data to the data source.\r\n        dataSource: dataA,\r\n\r\n        // Set allowDragAndDrop as `true`.\r\n        allowDragAndDrop: true,\r\n        \r\n        height: '330px',\r\n\r\n        drop: onDropGroupA,\r\n        // Map the appropriate columns to fields property.\r\n        fields: { text:'Region' }\r\n    });\r\n\r\n    listObj1.appendTo('#listbox1');\r\n\r\n    \r\n    var dataB = new ej.data.DataManager({\r\n        json: window.dragAndDropB\r\n    });\r\n\r\n    // Initialize ListBox component.\r\n    var listObj2= new ej.dropdowns.ListBox({ \r\n        // Set the scope of the ListBox.\r\n        scope: 'combined-list',\r\n\r\n        // Set the dragAndDropB data to the data source.\r\n        dataSource: dataB,\r\n\r\n        // Set allowDragAndDrop as `true`.\r\n        allowDragAndDrop: true,\r\n\r\n        height: '330px',\r\n\r\n        drop: onDropGroupB,\r\n\r\n        // Set field property with text as `Name`.\r\n        fields: { text:'Region' }\r\n    });\r\n \r\n    listObj2.appendTo('#listbox2');\r\n\r\n\r\n    var modifiedDataA = { addedRecords: [], deletedRecords: [], changedRecords: [] };\r\n    var modifiedDataB = { addedRecords: [], deletedRecords: [], changedRecords: [] };\r\n\r\n    document.getElementById('savechange').onclick = function() {\r\n        // Saving the manipulated records in to data manager.\r\n        dataA.saveChanges(modifiedDataA, listObj1.fields.text);\r\n        dataB.saveChanges(modifiedDataB, listObj2.fields.text);\r\n        modifiedDataA.addedRecords = []; modifiedDataB.addedRecords = [];\r\n    };\r\n\r\n    function onDropGroupA(args) {\r\n        args.items.forEach(function (item) {\r\n            if (!listObj1.getDataByValue(item[listObj1.fields.text])) {/*Preventing item manipulation while doing drag and drop within same list box.*/\r\n                modifiedDataB.addedRecords.push(item);\r\n                modifiedDataA.deletedRecords.push(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    function onDropGroupB(args) {\r\n        args.items.forEach(function (item) {\r\n            if (!listObj2.getDataByValue(item[listObj2.fields.text])) {\r\n                modifiedDataA.addedRecords.push(item);\r\n                modifiedDataB.deletedRecords.push(item);\r\n            }\r\n        });\r\n    }\r\n"}