{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/chart/candle-stick/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n     <h4 id=\"days\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;\" align=\"center\">AAPL Historical</h4>\n    <div id=\"container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}\r\n/**\r\n * Sample for Candle Series\r\n */\r\n    var _this = this;\r\n    var pointColors = [];\r\n    var getLabelText = function (value) {\r\n        return (((value) / 1000000000)).toFixed(1) + 'bn';\r\n    };\r\n    this.renderChart2 = function (chartData) {\r\n        var chart = new ej.charts.Chart({\r\n            primaryXAxis: {\r\n                valueType: 'DateTime', crosshairTooltip: { enable: true }, majorGridLines: { width: 0 },\r\n            },\r\n            primaryYAxis: {\r\n                title: 'Volume', valueType: 'Logarithmic', opposedPosition: true, majorGridLines: { width: 1 }, lineStyle: { width: 0 },\r\n                stripLines: [\r\n                    {\r\n                        end: 1300000000, startFromAxis: true, text: '', color: 'black', visible: true,\r\n                        opacity: 0.03, zIndex: 'Behind'\r\n                    }\r\n                ]\r\n            },\r\n            axes: [{\r\n                    name: 'secondary', opposedPosition: true, rowIndex: 1, majorGridLines: { width: 1 },\r\n                    labelFormat: 'n0', title: 'Price', plotOffset: 30, lineStyle: { width: 0 }, rangePadding: 'None'\r\n                }],\r\n            rows: [{ height: '30%' }, { height: '70%' }],\r\n            series: [\r\n                { type: 'Column', dataSource: chartData, animation: { enable: true }, xName: 'x', yName: 'volume', name: 'Volume' },\r\n                {\r\n                    type: 'Candle', yAxisName: 'secondary', bearFillColor: '#2ecd71', bullFillColor: '#e74c3d',\r\n                    dataSource: chartData, animation: { enable: true }, volume: 'volume',\r\n                    xName: 'x', low: 'low', high: 'high', open: 'open', close: 'close', name: 'Apple Inc',\r\n                }\r\n            ], tooltip: { enable: true, shared: true },\r\n            tooltipRender: function (args) {\r\n                if (!args.series.index) {\r\n                    args.text = 'Volume : <b>' + getLabelText(args.text.split('<b>')[1].split('</b>')[0]) + '</b>';\r\n                }\r\n            },\r\n            pointRender: function (args) {\r\n                if (args.series.type === 'Candle') {\r\n                    pointColors.push(args.fill);\r\n                }\r\n                else {\r\n                    args.fill = pointColors[args.point.index];\r\n                }\r\n            },\r\n            axisLabelRender: function (args) {\r\n                if (args.axis.name === 'primaryYAxis') {\r\n                    args.text = getLabelText(+args.text);\r\n                }\r\n                if (args.axis.name === 'secondary') {\r\n                    args.text = '$' + args.text;\r\n                }\r\n            },\r\n\r\n            width: ej.base.Browser.isDevice ? '100%' : '80%', chartArea: { border: { width: 0 } },\r\n            crosshair: { enable: true, lineType: 'Vertical' }\r\n        });\r\n        chart.appendTo('#container');\r\n    };\r\n    \r\n        var chartData;\r\n        var ajax = new ej.base.Ajax('//npmci.syncfusion.com/development/demos/src/chart/data-source/financial-data.json', 'GET', true);\r\n        ajax.send().then();\r\n        ajax.onSuccess = function (data) {\r\n            chartData = JSON.parse(data);\r\n            chartData.map(function (data) {\r\n                data.x = new Date(data.x);\r\n            });\r\n            _this.renderChart2(chartData);\r\n        };\r\n    "}