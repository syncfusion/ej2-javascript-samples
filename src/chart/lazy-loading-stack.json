{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/chart/lazy-loading/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-md-8 control-section\">\n    <div>\n        <!-- <div id=\"spinner\"> </div> -->\n        <div id=\"container\"></div>\n    </div>\n</div>\n<div class=\"col-md-4 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody><tr style=\"height: 50px\">\n            <td style=\"width: 40%\">\n                <div>Lazy Load </div>\n            </td>\n            <td style=\"width: 60%;\">\n                <select id=\"lazymode\" style=\"width:98%;margin-left: -5px;\">\n                    <option value=\"Range\">Range</option>\n                    <option value=\"Points Length\">Points Length</option>\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Min </div>\n            </td>\n            <td>\n                <input id=\"datepickermin\" type=\"text\">\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Max </div>\n            </td>\n            <td>\n                <input id=\"datepickermax\" type=\"text\">\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Point Length </div>\n            </td>\n            <td>\n                <input id=\"pointslength\" type=\"text\">\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}window.default = function () {\r\n    var intl = new ej.base.Internationalization();\r\n    //var spinnerEle = document.getElementById('spinner');\r\n    var chart = new ej.charts.Chart({\r\n        primaryXAxis: {\r\n            title: 'Day',\r\n            valueType: 'DateTime',\r\n            edgeLabelPlacement: 'Shift',\r\n            skeleton: 'yMMM',\r\n            skeletonType: 'Date',\r\n            scrollbarSettings: {\r\n                range: {\r\n                    minimum: new Date(2009, 0, 1),\r\n                    maximum: new Date(2014, 0, 1)\r\n                },\r\n                enable: true,\r\n                pointsLength: 1000\r\n            }\r\n        },\r\n        primaryYAxis: {\r\n            title: 'Server Load',\r\n            labelFormat: '{value}MB'\r\n        },\r\n        series: [{\r\n            dataSource: GetDateTimeData(new Date(2009, 0, 1), new Date(2009, 8, 1)),\r\n            xName: 'x', yName: 'y',\r\n            type: 'Line', animation: { enable: false },\r\n        }],\r\n        height: '450',\r\n        title: 'Network Load',\r\n        crosshair: { enable: false, lineType: 'Vertical' },\r\n        tooltip: { enable: true, shared: true, header : '<b>${point.x}</b>', format : 'Server load : <b>${point.y}</b>'},\r\n        legendSettings: { visible: true },\r\n        // scrollStart: function (args) {\r\n        //         ej.popups.createSpinner({ target: spinnerEle, width: '50px', label: 'Loading' });\r\n        //         ej.popups.showSpinner(spinnerEle);\r\n        //     },\r\n        scrollEnd: function (args) {\r\n            //ej.popups.hideSpinner(spinnerEle);\r\n            if (lazymode.value === 'Range') {\r\n                chart.series[0].dataSource = GetDateTimeData(args.currentRange.minimum, args.currentRange.maximum);\r\n            }\r\n            else {\r\n                chart.series[0].dataSource = GetNumericData(args.currentRange.minimum, args.currentRange.maximum);\r\n            }\r\n            chart.dataBind();\r\n        },\r\n        width: '100%',\r\n\r\n    });\r\n    chart.appendTo('#container');\r\n    function GetDateTimeData(start, end) {\r\n        var series1 = [];\r\n        var date;\r\n        var value = 30;\r\n        var option = {\r\n            skeleton: 'full',\r\n            type: 'dateTime'\r\n        };\r\n        var dateParser = intl.getDateParser(option);\r\n        var dateFormatter = intl.getDateFormat(option);\r\n        for (var i = 0; start <= end; i++) {\r\n            date = Date.parse(dateParser(dateFormatter(start)));\r\n            if (Math.random() > 0.5) {\r\n                value += (Math.random() * 10 - 5);\r\n            } \r\n            else {\r\n                value -= (Math.random() * 10 - 5);\r\n            }\r\n            if (value < 0) {\r\n                value = getRandomInt(20, 40);\r\n            }\r\n            var point1 = { x: new Date(date), y: Math.round(value) };\r\n            new Date(start.setDate(start.getDate() + 1));\r\n            series1.push(point1);\r\n        }\r\n        return series1;\r\n    }\r\n    function GetNumericData(start, end) {\r\n        var series1 = [];\r\n        var value = 30;\r\n        for (var i = start; i <= end; i++) {\r\n            if (Math.random() > 0.5) {\r\n                value += (Math.random() * 10 - 5);\r\n            }\r\n            else {\r\n                value -= (Math.random() * 10 - 5);\r\n            }\r\n            if (value < 0) {\r\n                value = getRandomInt(20, 40);\r\n            }\r\n            var point = { x: i, y: Math.round(value) };\r\n            series1.push(point);\r\n        }\r\n        return series1;\r\n    }\r\n    function getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    var lazymode = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        width: 120,\r\n        change: function (arg) {\r\n            var min;\r\n            var max;\r\n            if (arg.value === 'Range') {\r\n                chart.primaryXAxis.valueType = 'DateTime';\r\n                min = chart.primaryXAxis.scrollbarSettings.range.minimum = new Date(2009, 0, 1);\r\n                max = chart.primaryXAxis.scrollbarSettings.range.maximum = new Date(2014, 0, 1);\r\n                chart.series[0].dataSource = GetDateTimeData(min, max);\r\n                chart.refresh();\r\n                minDate.enabled = true;\r\n                maxDate.enabled = true;\r\n                pointslength.enabled = false;\r\n            }\r\n            else {\r\n                chart.primaryXAxis.valueType = 'Double';\r\n                chart.primaryXAxis.scrollbarSettings.range.minimum = null;\r\n                chart.primaryXAxis.scrollbarSettings.range.maximum = null;\r\n                chart.primaryXAxis.scrollbarSettings.pointsLength = 1000;\r\n                chart.series[0].dataSource = GetNumericData(1, 200);\r\n                chart.refresh();\r\n                minDate.enabled = false;\r\n                maxDate.enabled = false;\r\n                pointslength.enabled = true;\r\n            }\r\n        }\r\n    });\r\n    lazymode.appendTo('#lazymode');\r\n    var minDate = new ej.calendars.DatePicker({\r\n        value: new Date(2009, 0, 1),\r\n        width: 120,\r\n        change: function (args) {\r\n            chart.primaryXAxis.scrollbarSettings.range.minimum = args.value;\r\n            chart.refresh();\r\n        }\r\n    });\r\n    minDate.appendTo('#datepickermin');\r\n    var maxDate = new ej.calendars.DatePicker({\r\n        value: new Date(2014, 0, 1),\r\n        width: 120,\r\n        change: function (args) {\r\n            chart.primaryXAxis.scrollbarSettings.range.maximum = args.value;\r\n            chart.refresh();\r\n        }\r\n    });\r\n    maxDate.appendTo('#datepickermax');\r\n    var pointslength = new ej.inputs.NumericTextBox({\r\n        min: 1000,\r\n        max: 10000,\r\n        value: 1000,\r\n        step: 100,\r\n        enabled: false,\r\n        format: 'n',\r\n        width: 120,\r\n        change: function (args) {\r\n            chart.primaryXAxis.scrollbarSettings.pointsLength = args.value;\r\n            chart.refresh();\r\n        }\r\n    });\r\n    pointslength.appendTo('#pointslength');\r\n\r\n\r\n"}