{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/chart/pie-annotation/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\r\n * Sample for Annotation in chart\r\n */\r\nfunction getValue(series, pointIndex, y) {\r\n    var totalValue = 0;\r\n    for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\r\n        var ser = series_1[_i];\r\n        totalValue += ser.points[pointIndex].y;\r\n    }\r\n    return (Math.round((y / totalValue) * 100)) + '%';\r\n}\r\n\r\n    var pie;\r\n    var isRender = false;\r\n    var dataSource = [\r\n        { x: '2014', y0: 51, y1: 77, y2: 66, y3: 34 }, { x: '2015', y0: 67, y1: 49, y2: 19, y3: 38 },\r\n        { x: '2016', y0: 143, y1: 121, y2: 91, y3: 44 }, { x: '2017', y0: 19, y1: 28, y2: 65, y3: 51 },\r\n        { x: '2018', y0: 30, y1: 66, y2: 32, y3: 61 }, { x: '2019', y0: 189, y1: 128, y2: 122, y3: 76 },\r\n        { x: '2020', y0: 72, y1: 97, y2: 65, y3: 82 }\r\n    ];\r\n    var pieDataSource = [\r\n        { x: 'UK', y: 51, text: '22%' }, { x: 'Germany', y: 77, text: '34%' },\r\n        { x: 'France', y: 66, text: '29%' }, { x: 'Italy', y: 34, text: '15%' }\r\n    ];\r\n    var chart = new ej.charts.Chart({\r\n        primaryXAxis: {\r\n            title: 'Years', valueType: 'Category', majorGridLines: { width: 0 }, minorGridLines: { width: 1 },\r\n            minorTickLines: { width: 1 }, interval: 1, labelIntersectAction: 'Rotate45',\r\n        },\r\n        primaryYAxis: {\r\n            title: 'Sales', lineStyle: { width: 0 }, minimum: 0, maximum: 700, interval: 100,\r\n            majorGridLines: { width: 1 }, minorGridLines: { width: 1 },\r\n            minorTickLines: { width: 0 }, labelFormat: '{value}B', majorTickLines: { width: 0 }\r\n        },\r\n        series: [\r\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y0', name: 'UK', dataSource: dataSource },\r\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y1', name: 'Germany', dataSource: dataSource },\r\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y2', name: 'France', dataSource: dataSource },\r\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y3', name: 'Italy', dataSource: dataSource }\r\n        ],\r\n        chartArea: { border: { width: 0 } }, title: 'Mobile Game Market by Country',\r\n        selectionMode: 'Cluster', selectedDataIndexes: [{ series: 0, point: 0 }],\r\n        width: ej.base.Browser.isDevice ? '100%' : '80%',\r\n\r\n        legendSettings: { visible: true, toggleVisibility: false },\r\n        annotations: [{\r\n            content: '<div id=\"chart_annotation\" style=\"width: 200px; height: 200px\"></div>',\r\n            x: '20%', y: '25%', coordinateUnits: 'Pixel', region: 'Series'\r\n        }],\r\n        chartMouseUp: function (args) {\r\n            if (args.target.indexOf('Point') > -1 && args.target.indexOf('annotation') === -1) {\r\n                var pointIndex = parseInt(args.target[args.target.length - 1], 10);\r\n                pieDataSource = [];\r\n                for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\r\n                    var series = _a[_i];\r\n                    var value = series.points[pointIndex].y;\r\n                    pieDataSource.push({\r\n                        'x': series.name, 'y': value, 'text': getValue(chart.visibleSeries, pointIndex, value)\r\n                    });\r\n                }\r\n                pie.series[0].dataSource = pieDataSource;\r\n                pie.series[0].xName = 'x';\r\n                pie.series[0].yName = 'y';\r\n                pie.refresh();\r\n            }\r\n        },\r\n        resized: function (args) {\r\n            location.reload();\r\n        },\r\n        loaded: function (args) {\r\n            if (isRender) {\r\n                pie.destroy();\r\n                pie = new ej.charts.AccumulationChart({\r\n                    background: 'transparent',\r\n                    series: [{\r\n                        radius: '65%', animation: { enable: false },\r\n                        dataSource: pieDataSource, border: { color: 'transparent'},\r\n                        xName: 'x', yName: 'y', dataLabel: { visible: true, position: 'Inside', font: { color: 'white' }, name: 'text' },\r\n                    }],\r\n                    load: function (args) {\r\n                        var selectedTheme = location.hash.split('/')[1];\r\n                        selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n                        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n                    },\r\n                    legendSettings: { visible: false },\r\n                });\r\n                pie.appendTo('#chart_annotation');\r\n            }\r\n        },\r\n        animationComplete: function (args) {\r\n            isRender = true;\r\n            var selectedTheme = location.hash.split('/')[1];\r\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n            pie = new ej.charts.AccumulationChart({\r\n                background: 'transparent',\r\n                series: [{\r\n                    radius: '65%', animation: { enable: false },\r\n                    dataSource: pieDataSource, border: { color: 'transparent'},\r\n                    xName: 'x', yName: 'y', dataLabel: { visible: true, position: 'Inside', name: 'text' },\r\n                }],\r\n                theme: (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)),\r\n                legendSettings: { visible: false }\r\n            });\r\n            pie.appendTo('#chart_annotation');\r\n        }\r\n    });\r\n    chart.appendTo('#container');\r\n"}