{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/query-builder/template/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n    <div id=\"querybuilder\" class=\"row\">\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\" class=\"querybuilder-property\" style=\"width: 100%; margin:10px\">\n        <tbody><tr>\n            <td>\n                <div class=\"row\"> <input id=\"radio1\" type=\"radio\"> </div>\n            </td>\n            <td>\n                <div class=\"row\"> <input id=\"radio2\" type=\"radio\"> </div>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <textarea id=\"ruleContent\" readonly=\"true\"> </textarea>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n<style>\n    .e-query-builder .e-control-wrapper.e-slider-container.e-horizontal {\n        height: 0;\n    }\n\n    #ruleContent {\n        border: 1px solid #d3d3d3;\n        width: 100%;\n        height: 500px;\n        overflow: auto;\n    }\n\t\n\t.highcontrast textarea#ruleContent {\n\t  background-color: #000;\n\t}\n    \n\n</style>\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Template sample\r\n */\r\n\r\n\r\n    var elem;\r\n    var dropDownObj;\r\n    var boxObj;\r\n    var ticksSlider;\r\n    var filter = [{\r\n        field: 'Category',\r\n        label: 'Category',\r\n        type: 'string'\r\n    },\r\n    {\r\n        field: 'PaymentMode',\r\n        label: 'PaymentMode',\r\n        type: 'string',\r\n        operators: [\r\n            { key: 'Equal', value: 'equal' },\r\n            { key: 'Not Equal', value: 'notequal' }\r\n        ],\r\n        template: {\r\n            create: function () {\r\n                elem = document.createElement('input');\r\n                elem.setAttribute('type', 'text');\r\n                return elem;\r\n            },\r\n            destroy: function (args) {\r\n                var dropdown = ej.base.getComponent(document.getElementById(args.elementId), 'dropdownlist');\r\n                if (dropdown) {\r\n                    dropdown.destroy();\r\n                }\r\n            },\r\n            write: function (args) {\r\n                var ds = ['Cash', 'Debit Card', 'Credit Card', 'Net Banking', 'Wallet'];\r\n                    dropDownObj = new ej.dropdowns.DropDownList({\r\n                        dataSource: ds,\r\n                        value: args.values ? args.values : ds[0],\r\n                        change: function (e) {\r\n                        qryBldrObj.notifyChange(e.itemData.value, e.element);\r\n                        }\r\n                    });\r\n                    dropDownObj.appendTo('#' + args.elements.id);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        field: 'TransactionType',\r\n        label: 'TransactionType',\r\n        type: 'string',\r\n        operators: [{\r\n            key: 'Equal',\r\n            value: 'equal'\r\n        }, {\r\n            key: 'Not Equal',\r\n            value: 'notequal'\r\n        }],\r\n        template: {\r\n            create: function () {\r\n                elem = document.createElement('input');\r\n                elem.setAttribute('type', 'checkbox');\r\n                return elem;\r\n            },\r\n            destroy: function (args) {\r\n                ej.base.getComponent(document.getElementById(args.elementId), 'checkbox').destroy();\r\n            },\r\n            write: function (args) {\r\n                var checked = args.values === 'IsExpensive' ? true : false;\r\n                boxObj = new ej.buttons.CheckBox({\r\n                    label: 'Is Expensive',\r\n                    checked: checked,\r\n                    change: function (e) {\r\n                        qryBldrObj.notifyChange(e.checked ? 'expensive' : 'income', e.event.target);\r\n                    }\r\n                });\r\n                boxObj.appendTo('#' + args.elements.id);\r\n            }\r\n        }\r\n    },\r\n    {\r\n        field: 'Description',\r\n        label: 'Description',\r\n        type: 'string'\r\n    },\r\n    {\r\n        field: 'Date',\r\n        label: 'Date',\r\n        type: 'date'\r\n    },\r\n    {\r\n        field: 'Amount',\r\n        label: 'Amount',\r\n        type: 'number',\r\n        operators: [\r\n            { key: 'Equal', value: 'equal' },\r\n            { key: 'Greater than', value: 'greaterthan' },\r\n            { key: 'Less than', value: 'lessthan' },\r\n            { key: 'Less than or equal', value: 'lessthanorequal' },\r\n            { key: 'Greater than or equal', value: 'greaterthanorequal' },\r\n            { key: 'Not equal', value: 'notequal' }\r\n        ],\r\n        template: {\r\n            create: function () {\r\n                elem = document.createElement('div');\r\n                elem.setAttribute('class', 'ticks_slider');\r\n                return elem;\r\n            },\r\n            destroy: function (args) {\r\n                ej.base.getComponent(document.getElementById(args.elementId), 'slider').destroy();\r\n            },\r\n            write: function (args) {\r\n                ticksSlider = new ej.inputs.Slider({\r\n                    value: args.values,\r\n                    min: 0,\r\n                    max: 100,\r\n                    tooltip: { isVisible: true, placement: 'Before', showOn: 'Hover' },\r\n                    type: 'MinRange',\r\n                    change: function (e) {\r\n                        qryBldrObj.notifyChange(e.value, args.elements);\r\n                    }\r\n                });\r\n                ticksSlider.appendTo('#' + args.elements.id);\r\n            }\r\n        }\r\n    }\r\n    ];\r\n    var importRules = {\r\n        'condition': 'and',\r\n        'rules': [{\r\n            'label': 'Category',\r\n            'field': 'Category',\r\n            'type': 'string',\r\n            'operator': 'in',\r\n            'value': ['Clothing']\r\n        },\r\n        {\r\n            'condition': 'or',\r\n            'rules': [{\r\n                'label': 'TransactionType',\r\n                'field': 'TransactionType',\r\n                'type': 'string',\r\n                'operator': 'equal',\r\n                'value': 'Income'\r\n            },\r\n            {\r\n                'label': 'PaymentMode',\r\n                'field': 'PaymentMode',\r\n                'type': 'string',\r\n                'operator': 'equal',\r\n                'value': 'Cash'\r\n            }\r\n            ]\r\n        }, {\r\n            'label': 'Amount',\r\n            'field': 'Amount',\r\n            'type': 'number',\r\n            'operator': 'equal',\r\n            'value': 10\r\n        }\r\n        ]\r\n    };\r\n    var qryBldrObj = new ej.querybuilder.QueryBuilder({\r\n        dataSource: window.expenseData,\r\n        columns: filter,\r\n        width: '100%',\r\n        rule: importRules,\r\n        ruleChange: updateRule\r\n    });\r\n    qryBldrObj.appendTo('#querybuilder');\r\n    var radioButton = new ej.buttons.RadioButton({\r\n        label: 'JSON Rule',\r\n        name: 'rule',\r\n        value: 'json',\r\n        checked: true,\r\n        change: changeValue\r\n    });\r\n    radioButton.appendTo('#radio1');\r\n    radioButton = new ej.buttons.RadioButton({\r\n        label: 'SQL Rule',\r\n        name: 'rule',\r\n        value: 'sql',\r\n        change: changeValue\r\n    });\r\n    radioButton.appendTo('#radio2');\r\n    var element = document.getElementById('ruleContent');\r\n\r\n    function updateRule(args) {\r\n        if (ej.base.getComponent(radioButton.element, 'radio').checked) {\r\n            element.textContent = qryBldrObj.getSqlFromRules(args.rule);\r\n        } else {\r\n            element.textContent = JSON.stringify(args.rule, null, 4);\r\n        }\r\n    }\r\n    element.textContent = JSON.stringify(qryBldrObj.getValidRules(qryBldrObj.rule), null, 4);\r\n\r\n    function changeValue() {\r\n        element = document.getElementById('ruleContent');\r\n        var validRule = qryBldrObj.getValidRules(qryBldrObj.rule);\r\n        if (ej.base.getComponent(radioButton.element, 'radio').checked) {\r\n            element.textContent = qryBldrObj.getSqlFromRules(validRule);\r\n        } else {\r\n            element.textContent = JSON.stringify(validRule, null, 4);\r\n        }\r\n    }\r\n    if (document.getElementById('right-pane')) {\r\n        document.getElementById('right-pane').addEventListener('scroll', onScroll);\r\n    }\r\n\r\n    // Handler used to reposition the tooltip on page scroll\r\n    function onScroll() {\r\n        var tooltip = document.getElementsByClassName('e-handle e-control e-tooltip'), tooltipObj;\r\n        for (var i = 0, len = tooltip.length; i < len; i++) {\r\n\t\t\ttooltipObj = tooltip[i].ej2_instances[0];\r\n            // Refreshing each slider tooltip object position\r\n\t\t\ttooltipObj.refresh(tooltipObj.element);\r\n\t\t}\r\n    }\r\n\r\n"}