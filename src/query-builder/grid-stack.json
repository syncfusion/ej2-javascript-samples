{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/query-builder/grid/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\" style=\"min-height: auto;\">\n    <div id=\"querybuilder\"></div>\n</div>\n<div class=\"col-lg-12 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\" style=\"margin: 0 auto;\">\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}\n    /**\n     * Integration with Data Grid sample\n     */\n\n    \n        var columnData = [\n            { field: 'TaskID', label: 'Task ID', type: 'number' },\n            { field: 'Name', label: 'Name', type: 'string' },\n            { field: 'Category', label: 'Category', type: 'string' },\n            { field: 'SerialNo', label: 'Serial No', type: 'string' },\n            { field: 'InvoiceNo', label: 'Invoice No', type: 'string' },\n            { field: 'Status', label: 'Status', type: 'string' }\n        ];\n        var importRules = {\n            'condition': 'or',\n            'rules': [{\n                'label': 'Category',\n                'field': 'Category',\n                'type': 'string',\n                'operator': 'equal',\n                'value': 'Laptop'\n            }]\n        };\n        var qryBldrObj = new ej.querybuilder.QueryBuilder({\n            width: '100%',\n            dataSource: window.hardwareData,\n            columns: columnData,\n            rule: importRules,\n            change: updateRule\n        });\n        qryBldrObj.appendTo('#querybuilder');\n        var grid;\n        createGrid(new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status']));\n\t\tupdateRule();\n        function updateRule() {\n            var predicate = qryBldrObj.getPredicate({condition: qryBldrObj.rule.condition, rules: qryBldrObj.rule.rules});\n            var query;\n            if (predicate) {\n                query = new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status'])\n                    .where(predicate);\n            } else {\n                query = new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status']);\n            }\n            grid.query = query;\n            grid.refresh();\n        }\n\n        function createGrid(query) {\n            grid = new ej.grids.Grid({ \n                dataSource: window.hardwareData,\n                query: query,\n                width: '100%',\n                allowPaging: true,\n                columns: [\n                    { field: 'TaskID', headerText: 'Task ID', width: 120, textAlign: 'Right' },\n                    { field: 'Name', headerText: 'Name', width: 140 },\n                    { field: 'Category', headerText: 'Category', width: 140, textAlign: 'Right' },\n                    { field: 'InvoiceNo', headerText: 'Invoice No', width: 130 },\n                    { field: 'Status', headerText: 'Status', width: 120 },\n                    { field: 'SerialNo', headerText: 'Serial No', width: 130 },\n                ],\n                pageSettings: { pageSize: 8, pageCount: 5 },\n            });\n            grid.appendTo('#Grid');\n        }\n    "}