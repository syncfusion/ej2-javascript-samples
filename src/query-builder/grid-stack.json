{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/query-builder/grid/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\" style=\"min-height: auto;\">\n    <div id=\"querybuilder\"></div>\n</div>\n<div class=\"col-lg-12 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\" style=\"margin: 0 auto;\">\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}\r\n    /**\r\n     * Integration with Data Grid sample\r\n     */\r\n\r\n    \r\n        var columnData = [\r\n            { field: 'TaskID', label: 'Task ID', type: 'number' },\r\n            { field: 'Name', label: 'Name', type: 'string' },\r\n            { field: 'Category', label: 'Category', type: 'string' },\r\n            { field: 'SerialNo', label: 'Serial No', type: 'string' },\r\n            { field: 'InvoiceNo', label: 'Invoice No', type: 'string' },\r\n            { field: 'Status', label: 'Status', type: 'string' }\r\n        ];\r\n        var importRules = {\r\n            'condition': 'or',\r\n            'rules': [{\r\n                'label': 'Category',\r\n                'field': 'Category',\r\n                'type': 'string',\r\n                'operator': 'equal',\r\n                'value': 'Laptop'\r\n            }]\r\n        };\r\n        var qryBldrObj = new ej.querybuilder.QueryBuilder({\r\n            width: '100%',\r\n            dataSource: window.hardwareData,\r\n            columns: columnData,\r\n            rule: importRules,\r\n            ruleChange: updateRule\r\n        });\r\n        qryBldrObj.appendTo('#querybuilder');\r\n        var grid;\r\n        createGrid(new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status']));\r\n\t\tupdateRule({rule: qryBldrObj.getValidRules(qryBldrObj.rule) });\r\n        function updateRule(args) {\r\n            var predicate = qryBldrObj.getPredicate(args.rule);\r\n            var query;\r\n            if (predicate) {\r\n                query = new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status'])\r\n                    .where(predicate);\r\n            } else {\r\n                query = new ej.data.Query().select(['TaskID', 'Name', 'Category', 'SerialNo', 'InvoiceNo', 'Status']);\r\n            }\r\n            grid.query = query;\r\n            grid.refresh();\r\n        }\r\n\r\n        function createGrid(query) {\r\n            grid = new ej.grids.Grid({ \r\n                dataSource: window.hardwareData,\r\n                query: query,\r\n                width: '100%',\r\n                allowPaging: true,\r\n                columns: [\r\n                    { field: 'TaskID', headerText: 'Task ID', width: 120, textAlign: 'Right' },\r\n                    { field: 'Name', headerText: 'Name', width: 140 },\r\n                    { field: 'Category', headerText: 'Category', width: 140, textAlign: 'Right' },\r\n                    { field: 'InvoiceNo', headerText: 'Invoice No', width: 130 },\r\n                    { field: 'Status', headerText: 'Status', width: 120 },\r\n                    { field: 'SerialNo', headerText: 'Serial No', width: 130 },\r\n                ],\r\n                pageSettings: { pageSize: 8, pageCount: 5 },\r\n            });\r\n            grid.appendTo('#Grid');\r\n        }\r\n    "}