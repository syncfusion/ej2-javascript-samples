{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/dashboard-layout/dynamic-widget/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div>\n        <div style=\"width:100%;height: 30px\">\n            <button id=\"togglebtn\" style=\"float:right;width: 75px;\">Edit</button>\n        </div>\n\n        <div style=\"padding:5px;text-align: end;\">\n            <div class=\"add-widget-button e-control e-btn e-lib\" id=\"dialogBtn\">\n                Add New Widget\n            </div>\n        </div>\n    </div>\n\n    <div id=\"defaultLayout\">\n    </div>\n    <div id=\"dialogcontent\">\n        <div>\n            <div id=\"linetemplate\">\n                <p class=\"dialog-text\">Linechart (1x1) </p>\n            </div>\n            <div id=\"pietemplate\">\n                <p class=\"dialog-text\">Piechart (1x1) </p>\n\n            </div>\n            <div id=\"splinetemplate\">\n                <p class=\"dialog-text\">Splinechart (2x1) </p>\n\n            </div>\n        </div>\n    </div>\n    <div id=\"headerTemplate\">\n        <span id=\"close\" class=\"e-template-icon e-clear-icon\"></span>\n    </div>\n    <div id=\"content\"></div>\n</div>\n\n\n\n<div id=\"modalDialog\"></div>\n<script id=\"bodycontent\" type=\"template\">\n    <div class=\"panel-content\">\n        Content Area\n    </div>\n</script>\n<script id=\"headercontent\" type=\"template\">\n    <div>\n        <div class=\"header-border\"></div>\n        <span id=\"close\" class=\"e-template-icon e-clear-icon\"></span>\n        <!-- <span class=\"e-template-icon menu default\"></span> -->\n    </div>\n</script>\n\n<style>\n    #dialogBtn {\n        display: none;\n    }\n\n    .e-btn,\n    .e-css.e-btn {\n        display: block;\n    }\n\n    .dialog-text {\n        height: 35px;\n        border: 1px solid #80808029;\n        vertical-align: middle;\n        line-height: 35px;\n        border-radius: 4px;\n        padding-left: 12px;\n        margin-bottom: 5%;\n        cursor: pointer;\n    }\n\n    @media (max-width: 650px) {\n        #togglebtn {\n            display: none;\n        }\n    }\n\n    .add-widget-button {\n        padding: 10px;\n        text-align: center;\n        margin-bottom: 10px;\n        cursor: pointer;\n        font-size: 15px;\n    }\n\n    .e-dashboardlayout.e-control .e-panel:hover span {\n        display: block;\n    }\n\n    .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {\n        padding: 10px;\n        border-bottom: 2px solid #e6e9ed !important;\n        height: 35px;\n        margin: 0 15px 0 15px;\n    }\n\n    .sb-demo-section .container-fluid {\n        background: #E5E5E5;\n    }\n\n    .e-panel-content {\n        height: calc(100% - 35px) !important;\n        overflow: hidden;\n        width: 100%;\n    }\n\n    .e-dashboardlayout.e-control .e-panel,\n    .e-dashboardlayout.e-control .e-panel:hover,\n    .e-dashboardlayout.e-control .e-panel:active {\n        border: 1px solid #bbb;\n    }\n\n    .e-dialog .e-dlg-header-content {\n        border-bottom: none;\n        padding: 18px 18px 18px 20px;\n    }\n\n    .edit::before {\n        content: '\\e501';\n        font-family: 'e-sb-icons';\n        /* color: #e3165b; */\n        margin-left: -7px;\n        vertical-align: middle;\n    }\n\n    .save::before {\n        content: '\\e500';\n        font-family: 'e-sb-icons';\n        /* color: #e3165b; */\n        margin-left: -7px;\n        vertical-align: middle;\n    }\n\n\n    /* custom code start*/\n    @font-face {\n        font-family: 'e-sb-icons';\n        src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMjttR/MAAAEoAAAAVmNtYXDlEOVaAAABjAAAADhnbHlmAM1kuQAAAcwAAAD8aGVhZBRipc8AAADQAAAANmhoZWEIUQQEAAAArAAAACRobXR4DAAAAAAAAYAAAAAMbG9jYQA6AH4AAAHEAAAACG1heHABEQA4AAABCAAAACBuYW1lWD3y/QAAAsgAAAIlcG9zdNvk7cwAAATwAAAANQABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAApr5cCV8PPPUACwQAAAAAANioMG8AAAAA2KgwbwAAAAAD9AP0AAAACAACAAAAAAAAAAEAAAADACwABAAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5QDlAQQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOUB//8AAOUA//8AAAABAAQAAAABAAIAAAAAADoAfgAEAAAAAAP0A/MAAwALABkAIwAAAREhEQEVMzUzFSE1IxEhETMVMxEjESERIxEjERUhESM1IzUhAx79xAEeR0j+m0gB9I9HR/02SEcD6EdI/KcBcf7iAR4CPI+P19f+4gEeSPzuAWb+mgNa/KZHA1lIRwAAAAMAAAAAA/QD9AADAAgAKwAACQEnCQEDJQEnNwcXPwc1Lw8PBgLH/ko2Abb9uT4BGQJC2m0/2z8HBgUFAwMCAQIEBQcICQoLDA0NDw8PEA0NDQwLCwsCkf5KNgG2/l7+5z4CQ9puP9s/CgsLCwwNDQ0QDw8PDQ0MCwoJCAcFBAIBAQEDAwUFBgAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAcAAQABAAAAAAACAAcACAABAAAAAAADAAcADwABAAAAAAAEAAcAFgABAAAAAAAFAAsAHQABAAAAAAAGAAcAKAABAAAAAAAKACwALwABAAAAAAALABIAWwADAAEECQAAAAIAbQADAAEECQABAA4AbwADAAEECQACAA4AfQADAAEECQADAA4AiwADAAEECQAEAA4AmQADAAEECQAFABYApwADAAEECQAGAA4AvQADAAEECQAKAFgAywADAAEECQALACQBIyBlai1pY29uUmVndWxhcmVqLWljb25lai1pY29uVmVyc2lvbiAxLjBlai1pY29uRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABlAGoALQBpAGMAbwBuAFIAZQBnAHUAbABhAHIAZQBqAC0AaQBjAG8AbgBlAGoALQBpAGMAbwBuAFYAZQByAHMAaQBvAG4AIAAxAC4AMABlAGoALQBpAGMAbwBuAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHNhdmUEZWRpdAAAAAAA) format('truetype');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    [class^=\"sf-icon-\"],\n    [class*=\" sf-icon-\"] {\n        font-family: 'e-sb-icons' !important;\n        speak: none;\n        font-size: 55px;\n        font-style: normal;\n        font-weight: normal;\n        font-variant: normal;\n        text-transform: none;\n        line-height: 1;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\r\n *  Sample for edit  functionalities\r\n */\r\n\r\n    var dashboard = new ej.layouts.DashboardLayout({\r\n        cellSpacing: [10, 10],\r\n        cellAspectRatio: 100 / 85,\r\n        columns:2,\r\n        allowDragging: false,\r\n        allowResizing: false,\r\n        resizeStop: onPanelResize,\r\n        panels: [{\r\n            'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 0,\r\n            header: '<div>Line Chart</div>', content: '<div id=\"linechart\" style=\"height:100%; width:100%\"></div>'\r\n        },\r\n        {\r\n            'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 1,\r\n            header: '<div>Pie Chart</div>', content: '<div id=\"pie\" style=\"height:100%; width:100%\"></div>'\r\n        },\r\n        {\r\n            'sizeX': 2, 'sizeY': 1, 'row': 1, 'col': 0,\r\n            header: '<div>Spline Chart</div>', content: '<div id=\"chart\" style=\"height:100%; width:100%\"></div>'\r\n        }]\r\n\r\n    });\r\n    dashboard.appendTo('#defaultLayout');\r\n    var toggleBtn = new ej.buttons.Button({\r\n        cssClass: 'e-outline e-flat e-primary',\r\n        iconCss: 'edit',\r\n        isToggle: true\r\n    });\r\n    toggleBtn.appendTo('#togglebtn');\r\n    toggleBtn.element.onclick = function () {\r\n        if (toggleBtn.element.classList.contains('e-active')) {\r\n            dashboardObject.allowResizing = true;\r\n            dashboardObject.allowDragging = true;\r\n            toggleBtn.content = \"SAVE\";\r\n            toggleBtn.iconCss = \"save\";\r\n            document.getElementById('dialogBtn').style.display = 'block';\r\n        } else {\r\n            dashboardObject.allowResizing = false;\r\n            dashboardObject.allowDragging = false;\r\n            toggleBtn.content = \"EDIT\";\r\n            toggleBtn.iconCss = \"edit\";\r\n            document.getElementById('dialogBtn').style.display = 'none';\r\n        }\r\n    };\r\n\r\n    function onPanelResize(args) {\r\n        if (args.element && args.element.querySelector('.e-panel-container .e-panel-content div')) {\r\n            var chartObj = (args.element.querySelector('.e-panel-container .e-panel-content div')).ej2_instances[0];\r\n            chartObj.height = '95%';\r\n            chartObj.width = '100%';\r\n            chartObj.refresh();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    var linechartObj = new ej.charts.Chart({\r\n        //Initializing Primary X Axis\r\n        primaryYAxis: {\r\n            majorGridLines: { width: 0 },\r\n            majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' }\r\n        },\r\n        //Initializing Primary X Axis\r\n        primaryXAxis: {\r\n            valueType: 'Category', interval: 1, majorGridLines: { width: 0 }\r\n        },\r\n        chartArea: { border: { width: 0 } },\r\n        height: '100%',\r\n        width: '99%',\r\n        //Initializing Chart Series\r\n        series: [\r\n            {\r\n                dataSource: [{ x: 'Jan', y: 46 }, { x: 'Feb', y: 27 }, { x: 'Mar', y: 26 }],\r\n                type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Jan', fill: '#00bdae',\r\n                marker: {\r\n                    dataLabel: {\r\n                        visible: false, position: 'Top', font: {\r\n                            fontWeight: '600', color: '#ffffff'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } },\r\n                type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Feb', fill: '#e56691',\r\n                dataSource: [{ x: 'Jan', y: 37 }, { x: 'Feb', y: 23 }, { x: 'Mar', y: 18 }]                \r\n            },\r\n            {\r\n                dataSource: [{ x: 'Jan', y: 38 }, { x: 'Feb', y: 17 }, { x: 'Mar', y: 26 }],\r\n                type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Mar', fill: '#357cd2',\r\n                marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } }\r\n            }\r\n        ],\r\n        load: lineChartTheme\r\n    });\r\n    linechartObj.appendTo('#linechart');\r\n    var pie = new ej.charts.AccumulationChart({\r\n        series: [\r\n            {\r\n                \r\n                palettes: ['#00bdae', '#357cd2', '#e56691'],\r\n                dataSource: [\r\n                    { 'x': 'Jan', y: 12.5, text: 'January' },\r\n                    { 'x': 'Feb', y: 25, text: 'February' },\r\n                    { 'x': 'Mar', y: 50, text: 'March' },\r\n                ],\r\n                xName: 'x', \r\n                radius: '100%', startAngle: 0, yName: 'y', innerRadius: '40%', endAngle: 360, \r\n                name: 'Earnings',\r\n                dataLabel: {\r\n                    visible: true,\r\n                    name: 'value',\r\n                    position: 'Inside'\r\n                }\r\n            }\r\n\r\n        ],\r\n        tooltip: {\r\n            enable: true,\r\n            header: '<b>${point.x}</b>',\r\n            format: 'Composition : <b>${point.y}%</b>'\r\n        },\r\n\r\n        legendSettings: {\r\n            visible: false, toggleVisibility: false\r\n        },\r\n        width: '99%',\r\n        height: '100%',\r\n        load: themeAccumulation\r\n    });\r\n    pie.appendTo('#pie');\r\n\r\n    var chart = new ej.charts.Chart({\r\n        //Initializing Primary Y Axis\r\n        primaryYAxis: {\r\n            maximum: 4, interval: 1,\r\n            labelFormat: '{value}',\r\n            lineStyle: { width: 0 },\r\n            majorTickLines: { width: 0 },\r\n            minorTickLines: { width: 0 }\r\n        },\r\n        chartArea: {\r\n            border: {\r\n                width: 0\r\n            }\r\n        },\r\n        //Initializing Primary X Axis\r\n        primaryXAxis: {\r\n            valueType: 'DateTime',\r\n            labelFormat: 'MMM',\r\n            majorGridLines: { width: 0 },\r\n            intervalType: 'Months',\r\n            edgeLabelPlacement: 'Shift'\r\n        },\r\n        //Initializing Chart Series\r\n        series: [\r\n            {\r\n                name: 'Jan', xName: 'x', yName: 'y', type: 'SplineArea',\r\n                fill: 'rgb(239, 183, 202)',\r\n                dataSource: [\r\n                    { x: new Date(2002, 0, 1), y: 2.2 }, { x: new Date(2003, 0, 1), y: 3.5 },\r\n                    { x: new Date(2004, 0, 1), y: 2.8 }, { x: new Date(2005, 0, 1), y: 1.7 },\r\n                    { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 2.6 },\r\n                    { x: new Date(2008, 0, 1), y: 2.9 }, { x: new Date(2009, 0, 1), y: 3.9 },\r\n                    { x: new Date(2010, 0, 1), y: 1.4 }, { x: new Date(2011, 0, 1), y: 3.2 }\r\n                ],\r\n                border: { color: 'transparent' },\r\n                opacity: 0.5\r\n            },\r\n            {\r\n                border: { color: 'transparent' },\r\n                opacity: 0.5,\r\n                dataSource: [\r\n                    { x: new Date(2002, 0, 1), y: 2 }, { x: new Date(2003, 0, 1), y: 1.7 },\r\n                    { x: new Date(2004, 0, 1), y: 1.8 }, { x: new Date(2005, 0, 1), y: 2.1 },\r\n                    { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 1.6 },\r\n                    { x: new Date(2008, 0, 1), y: 1.5 }, { x: new Date(2009, 0, 1), y: 2.7 },\r\n                    { x: new Date(2010, 0, 1), y: 1.5 }, { x: new Date(2011, 0, 1), y: 2.2 }\r\n                ],\r\n                name: 'Feb', xName: 'x', yName: 'y', type: 'SplineArea',\r\n                fill: 'rgb(0, 189, 174)',\r\n            }\r\n        ],\r\n        width: '99%',\r\n        height: '100%',\r\n        load: lineChartTheme\r\n    });\r\n    chart.appendTo('#chart');\r\n\r\n\r\n    var dashboardObject = document.getElementById('defaultLayout').ej2_instances[0];\r\n\r\n    var dialogObj = new ej.popups.Dialog({\r\n        width: '500px',\r\n        header: 'Add a widget',\r\n        showCloseIcon: true,\r\n        animationSettings: { effect: 'Zoom' },\r\n        content: document.getElementById('dialogcontent'),\r\n        target: document.getElementById('target'),\r\n        isModal: true,\r\n        height: '260px',\r\n        visible: false\r\n    });\r\n    dialogObj.appendTo('#modalDialog');\r\n    dialogObj.hide();\r\n\r\n    var count = 3;\r\n    document.getElementById('dialogBtn').onclick = function () {\r\n\r\n        dialogObj.show();\r\n        document.getElementById('linetemplate').onclick = function (e) {\r\n            var countValue = count.toString();\r\n            var panel = [{\r\n                'id': '_layout' + countValue, 'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 0,\r\n                header: '<div>Line Chart</div>', content: '<div id=_line' + countValue + ' style=\"height:100%; width:100%\"></div>'\r\n            }];\r\n            count = count + 1;\r\n            dashboardObject.addPanel(panel[0]);\r\n\r\n            var linechartObj = new ej.charts.Chart({\r\n                chartArea: { border: { width: 0 } },\r\n                 //Initializing Primary X Axis\r\n                 primaryXAxis: {\r\n                    valueType: 'Category', interval: 1, majorGridLines: { width: 0 }\r\n                },\r\n                width: '99%',\r\n                //Initializing Primary X Axis\r\n                primaryYAxis: {\r\n                    majorGridLines: { width: 0 },\r\n                    majorTickLines: { width: 0 }, lineStyle: { width: 0 }, labelStyle: { color: 'transparent' }\r\n                },\r\n                height: '100%',\r\n                //Initializing Chart Series\r\n                series: [\r\n                    {\r\n                        type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Jan', fill: '#00bdae',\r\n                        dataSource: [{ x: 'Jan', y: 46 }, { x: 'Feb', y: 27 }, { x: 'Mar', y: 26 }],\r\n                        marker: {\r\n                            dataLabel: {\r\n                                visible: false, position: 'Top', font: {\r\n                                    fontWeight: '600', color: '#ffffff'\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Feb', fill: '#e56691',\r\n                        dataSource: [{ x: 'Jan', y: 37 }, { x: 'Feb', y: 23 }, { x: 'Mar', y: 18 }],\r\n                        marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } }\r\n                    },\r\n                    {\r\n                        type: 'Column', xName: 'x', width: 2, yName: 'y', name: 'Mar', fill: '#357cd2',\r\n                        dataSource: [{ x: 'Jan', y: 38 }, { x: 'Feb', y: 17 }, { x: 'Mar', y: 26 }],\r\n                        marker: { dataLabel: { visible: false, position: 'Top', font: { fontWeight: '600', color: '#ffffff' } } }\r\n                    }\r\n                ],\r\n                load: lineChartTheme\r\n            });\r\n            linechartObj.appendTo('#' + '_line' + countValue);\r\n            linechartObj.refresh();\r\n            dialogObj.hide();\r\n        };\r\n        document.getElementById('pietemplate').onclick = function (e) {\r\n            var  countValue = count.toString();\r\n            var panel = [{\r\n                'id': '_layout' + countValue, 'sizeX': 1, 'sizeY': 1, 'row': 0, 'col': 0,\r\n                header: '<div>Pie Chart</div>', content: '<div id=_pie' + countValue + ' style=\"height:100%; width:100%\"></div>'\r\n            }];\r\n            count = count + 1;\r\n            dashboardObject.addPanel(panel[0]);\r\n            var pie = new ej.charts.AccumulationChart({\r\n                series: [\r\n                    {\r\n                        dataSource: [\r\n                            { 'x': 'Jan', y: 12.5, text: 'January' },\r\n                            { 'x': 'Feb', y: 25, text: 'February' },\r\n                            { 'x': 'Mar', y: 50, text: 'March' },\r\n                        ],\r\n                        palettes: ['#00bdae', '#357cd2', '#e56691'],\r\n                        radius: '100%', xName: 'x', yName: 'y', startAngle: 0, endAngle: 360, innerRadius: '40%', name: 'Earnings',\r\n                        dataLabel: {\r\n                            visible: true,\r\n                            name: 'value',\r\n                            position: 'Inside'\r\n                        }\r\n                    }\r\n\r\n                ],\r\n                tooltip: {\r\n                    enable: true,\r\n                    header: '<b>${point.x}</b>',\r\n                    format: 'Composition : <b>${point.y}%</b>'\r\n                },\r\n\r\n                legendSettings: {\r\n                    visible: false, toggleVisibility: false\r\n                },\r\n                width: '99%',\r\n                height: '100%',\r\n                load: themeAccumulation\r\n            });\r\n            pie.appendTo('#' + '_pie' + countValue);\r\n            pie.refresh();\r\n            dialogObj.hide();\r\n        };\r\n        document.getElementById('splinetemplate').onclick = function (e) {\r\n            var countValue = count.toString();\r\n            var panel = [{\r\n                'id': '_layout' + countValue, 'sizeX': 2, 'sizeY': 1, 'row': 0, 'col': 0,\r\n                header: '<div>Spline Chart</div>', content: '<div id=_spline' + countValue + ' style=\"height:100%; width:100%\"></div>'\r\n            }];\r\n            count = count + 1;\r\n            dashboardObject.addPanel(panel[0]);\r\n            var chart = new ej.charts.Chart({\r\n                //Initializing Primary X Axis\r\n                primaryXAxis: {\r\n                    valueType: 'DateTime',\r\n                    labelFormat: 'MMM',\r\n                    majorGridLines: { width: 0 },\r\n                    intervalType: 'Months',\r\n                    edgeLabelPlacement: 'Shift'\r\n                },\r\n                //Initializing Primary Y Axis\r\n                primaryYAxis: {\r\n                    maximum: 4, interval: 1,\r\n                    labelFormat: '{value}',\r\n                    lineStyle: { width: 0 },\r\n                    majorTickLines: { width: 0 },\r\n                    minorTickLines: { width: 0 }\r\n                },\r\n                chartArea: {\r\n                    border: {\r\n                        width: 0\r\n                    }\r\n                },\r\n                //Initializing Chart Series\r\n                series: [\r\n                    {\r\n                        dataSource: [\r\n                            { x: new Date(2002, 0, 1), y: 2.2 }, { x: new Date(2003, 0, 1), y: 3.4 },\r\n                            { x: new Date(2004, 0, 1), y: 2.8 }, { x: new Date(2005, 0, 1), y: 1.6 },\r\n                            { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 2.5 },\r\n                            { x: new Date(2008, 0, 1), y: 2.9 }, { x: new Date(2009, 0, 1), y: 3.8 },\r\n                            { x: new Date(2010, 0, 1), y: 1.4 }, { x: new Date(2011, 0, 1), y: 3.1 }\r\n                        ],\r\n                        name: 'Jan', xName: 'x', yName: 'y', type: 'SplineArea',\r\n                        border: { color: 'transparent' },\r\n                        fill: 'rgb(239, 183, 202)',\r\n                        opacity: 0.5\r\n                    },\r\n                    {\r\n                        dataSource: [\r\n                            { x: new Date(2002, 0, 1), y: 2 }, { x: new Date(2003, 0, 1), y: 1.7 },\r\n                            { x: new Date(2004, 0, 1), y: 1.8 }, { x: new Date(2005, 0, 1), y: 2.1 },\r\n                            { x: new Date(2006, 0, 1), y: 2.3 }, { x: new Date(2007, 0, 1), y: 1.7 },\r\n                            { x: new Date(2008, 0, 1), y: 1.5 }, { x: new Date(2009, 0, 1), y: 2.8 },\r\n                            { x: new Date(2010, 0, 1), y: 1.5 }, { x: new Date(2011, 0, 1), y: 2.3 }\r\n                        ],\r\n                        name: 'Feb', xName: 'x', yName: 'y', type: 'SplineArea',\r\n                        border: { color: 'transparent' },\r\n                        fill: 'rgb(0, 189, 174)',\r\n                        opacity: 0.5\r\n                    }\r\n                ],\r\n                width: '99%',\r\n                height: '100%',\r\n                load: lineChartTheme\r\n            });\r\n            chart.appendTo('#' + '_spline' + countValue);\r\n            chart.refresh();\r\n            dialogObj.hide();\r\n        };\r\n    };\r\n\r\n    function lineChartTheme(args) {\r\n        var chartTheme = location.hash.split('/')[1];\r\n        chartTheme = chartTheme ? chartTheme: 'Material';\r\n        args.chart.theme = (chartTheme.charAt(0).toUpperCase() + chartTheme.slice(1)).replace(/-dark/i, 'Dark');\r\n    }\r\n    function themeAccumulation(args) {\r\n        var pieTheme = location.hash.split('/')[1];\r\n        pieTheme = pieTheme ? pieTheme : 'Material';\r\n        args.accumulation.theme = (pieTheme.charAt(0).toUpperCase() + pieTheme.slice(1)).replace(/-dark/i, 'Dark');\r\n    }\r\n\r\n"}