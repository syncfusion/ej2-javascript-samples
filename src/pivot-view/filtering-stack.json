{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-view/filtering/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section pivotgrid-property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;height:100%;\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Fields:\n                    </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"text\" tabindex=\"1\" id=\"fields\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Members:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"valuecls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"values\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Filter Type:\n                    </div>\n                </td>\n                <td>\n                    <div style=\"margin-top:-5px\">\n                        <input type=\"text\" tabindex=\"1\" id=\"type\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td></td>\n                <td>\n                    <div style=\"float: right;margin-right: 4px\">\n                        <button id=\"apply\">Apply</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","index.js":"{{ripple}}/**\n * PivotView Filtering Sample.\n */\n\n    var fieldCollections = {};\n    var filterCollections= {};\n    var isInitial = true;\n    var type = ['Include', 'Exclude'];\n    var values = [];\n    var fields = ['Country', 'Products', 'Year'];\n    ej.base.enableRipple(false);\n    var pivotGridObj = new ej.pivotview.PivotView({\n        dataSource: {\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\n                { name: 'Amount', caption: 'Sold Amount' }],\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\n            rows: [{ name: 'Country' }, { name: 'Products' }],\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\n            columns: [{ name: 'Year' }],\n            data: window.Pivot_Data,\n            expandAll: false\n        },\n        dataBound: function (args) {\n            if (isInitial) {\n                /** To fill the members for each fields into the object fieldCollections. */\n                var fieldCnt = fields.length - 1;\n                while (fieldCnt > -1) {\n                    var members = Object.keys(pivotGridObj.engineModule.fieldList[fields[fieldCnt]].members);\n                    var memberCnt = members.length - 1;\n                    var memberColl = [];\n                    while (memberCnt > -1) {\n                        memberColl.push({ Member: members[memberCnt], Checked: members[memberCnt] + '_' + false });\n                        memberCnt--;\n                    }\n                    fieldCollections[fields[fieldCnt]] = memberColl;\n                    fieldCnt--;\n                }\n                values = fieldCollections[fields[0]];\n                isInitial = false;\n            }\n            for (var i = 0, Cnt = pivotGridObj.dataSource.filterSettings; i < Cnt.length; i++) {\n                filterCollections[Cnt[i].name] = Cnt[i];\n            }\n        },\n        width: '100%',\n        height: 300,\n        gridSettings: { columnWidth: 140 }\n    });\n    pivotGridObj.appendTo('#PivotView');\n    var valuesddl = new ej.dropdowns.MultiSelect({\n        dataSource: values,\n        mode: 'CheckBox',\n        showDropDownIcon: true,\n        showClearButton: false,\n        enableSelectionOrder: false,\n        fields: { text: 'Member' },\n        select: function (args) {\n            applyBtn.disabled = false;\n            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + true);\n        },\n        removed: function (args) {\n            setMemberCheckedState(fieldsddl.itemData, args.item.textContent, args.item.textContent + '_' + false);\n            setApplyBtnState();\n        },\n        open: function (args) {\n            args.popup.element.querySelector(\".e-filter-parent\").style.display = 'none';\n        }\n    });\n    valuesddl.appendTo('#values');\n    var fieldsddl = new ej.dropdowns.DropDownList({\n        dataSource: fields,\n        index: 0,\n        width: '98%',\n        change: function (args) {\n            valuesddl.dataSource = fieldCollections[args.value.toString()];\n            valuesddl.value = getSelectedMembers(args.value.toString());\n            if (filterCollections[args.value.toString()]) {\n                typeddl.value = filterCollections[args.value.toString()].type;\n            }\n            valuesddl.dataBind();\n            typeddl.dataBind();\n        }\n    });\n    fieldsddl.appendTo('#fields');\n    var typeddl = new ej.dropdowns.DropDownList({\n        dataSource: type,\n        width: '98%',\n        index: 1\n    });\n    typeddl.appendTo('#type');\n    var applyBtn = new ej.buttons.Button({\n        isPrimary: true, disabled: true\n    });\n    applyBtn.appendTo('#apply');\n    document.getElementById('apply').onclick = function () {\n        /** You can set your filter settings here. */\n        pivotGridObj.dataSource.filterSettings = [\n            { name: fields[0], items: getSelectedMembers(fields[0]), type: updateFilterType(fields[0]) },\n            { name: fields[1], items: getSelectedMembers(fields[1]), type: updateFilterType(fields[1]) },\n            { name: fields[2], items: getSelectedMembers(fields[2]), type: updateFilterType(fields[2]) }\n        ];\n    };\n\n    /** To get the filter type of the field in the object filterCollection. */\n    function updateFilterType(fieldName) {\n        if (fieldsddl.itemData === fieldName) {\n            return typeddl.itemData;\n        } else if (filterCollections[fieldName]) {\n            return filterCollections[fieldName].type;\n        } else {\n            return 'Exclude';\n        }\n    }\n\n    /** To get the checked members/status here as string array. */\n    function getSelectedMembers(field) {\n        var membersColl = [];\n        var members = fieldCollections[field];\n        var memLength = members.length - 1;\n        while (memLength > -1) {\n            if (members[memLength].Checked === members[memLength].Member + '_' + true) {\n                membersColl.push(members[memLength].Member.toString());\n            }\n            memLength--;\n        }\n        return membersColl;\n    }\n    /** To set the checked status of the members maintained in the object fieldCollections. */\n    function setMemberCheckedState(field, member, checkedState) {\n        var members = fieldCollections[field];\n        var memLength = members.length - 1;\n        while (memLength > -1) {\n            if (members[memLength].Member === member) {\n                members[memLength].Checked = checkedState;\n                break;\n            }\n            memLength--;\n        }\n    }\n\n    /** To set disabled/enabled state in the Apply button. */\n    function setApplyBtnState() {\n        var fieldArray = ['Country', 'Products', 'Year'];\n        var loopCount = fieldArray.length;\n        var isSelected = false;\n        while (loopCount) {\n            if (getSelectedMembers(fieldArray[loopCount - 1]).length > 0) {\n                isSelected = true;\n                break;\n            }\n            loopCount--;\n        }\n        applyBtn.disabled = !isSelected;\n    }\n\n"}