{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-view/label-filtering/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section pivotgrid-property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%;height:100%;\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Fields:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div>\n                        <input type=\"text\" tabindex=\"1\" id=\"label-fields\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div>Condition:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"conditionscls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"label-conditions\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"input1cls\" style=\"height: 50px\">\n                <td>\n                    <div>Value 1:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"value1cls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"label-value1\">\n                    </div>\n                </td>\n            </tr>\n            <tr class=\"input2cls\" style=\"height: 50px; display: none\">\n                <td>\n                    <div>Value 2:\n                    </div>\n                </td>\n                <td style=\"padding-bottom: 16px\">\n                    <div class=\"value2cls\">\n                        <input type=\"text\" tabindex=\"1\" id=\"label-value2\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td colspan=\"2\">\n                    <div style=\"float:right;margin-right: 4px\">\n                        <button id=\"label-clear\">Clear</button>\n                    </div>\n                    <div style=\"float:right;margin-right: 4px\">\n                        <button id=\"label-apply\">Apply</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","index.js":"{{ripple}}/**\n * PivotView Filtering Sample.\n */\n\n    ej.base.enableRipple(false);\n    var fieldCollections = {};\n    var operators = ['Equals', 'DoesNotEquals', 'BeginWith', 'DoesNotBeginWith', 'EndsWith',\n        'DoesNotEndsWith', 'Contains', 'DoesNotContains', 'GreaterThan',\n        'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'Between', 'NotBetween'];\n    var fields = ['Country', 'Products', 'Year'];\n    var pivotGridObj = new ej.pivotview.PivotView({\n        dataSource: {\n            allowLabelFilter: true,\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\n            rows: [{ name: 'Country' }, { name: 'Products' }],\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\n            columns: [{ name: 'Year' }],\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\n            { name: 'Amount', caption: 'Sold Amount' }],\n            data: window.Pivot_Data,\n            expandAll: false\n        },\n        dataBound: function (args) {\n            fieldCollections = {};\n            for (var i = 0, len = pivotGridObj.dataSource.filterSettings; i < len.length; i++) {\n                var field = len[i];\n                fieldCollections[field.name] = field;\n            }\n        },\n        width: '100%',\n        height: 300,\n        gridSettings: { columnWidth: 140 }\n    });\n    pivotGridObj.appendTo('#PivotView');\n    var fieldsddl = new ej.dropdowns.DropDownList({\n        dataSource: fields,\n        index: 0,\n        width: '100%',\n        change: function (args) {\n            if (fieldCollections[args.value]) {\n                operatorddl.value = fieldCollections[args.value].condition;\n                valueInput1.value = fieldCollections[args.value].value1;\n                valueInput2.value = fieldCollections[args.value].value2;\n            }\n            else {\n                setFilters(args.value, 'DoesNotEquals', '', '');\n                operatorddl.value = 'DoesNotEquals';\n                valueInput1.value = '';\n                valueInput2.value = '';\n            }\n            updateButtonState();\n        }\n    });\n    fieldsddl.appendTo('#label-fields');\n    var operatorddl = new ej.dropdowns.DropDownList({\n        dataSource: operators,\n        value: 'DoesNotEquals',\n        change: function (args) {\n            if (args.value === 'Between' || args.value === 'NotBetween') {\n                document.querySelector('.input2cls').style.display = '';\n            }\n            else {\n                document.querySelector('.input2cls').style.display = 'none';\n            }\n            setFilters(fieldsddl.value, args.value, valueInput1.value, valueInput2.value);\n            updateButtonState();\n        }\n    });\n    operatorddl.appendTo('#label-conditions');\n    var valueInput1 = new ej.inputs.MaskedTextBox({\n        value: '',\n        placeholder: 'Example: \"Germany\"',\n        change: function (e) {\n            setFilters(fieldsddl.value, operatorddl.value, e.value, valueInput2.value);\n            updateButtonState();\n        },\n        width: '100%'\n    });\n    valueInput1.appendTo('#label-value1');\n    var valueInput2 = new ej.inputs.MaskedTextBox({\n        value: '',\n        placeholder: 'Example: \"States\"',\n        change: function (e) {\n            setFilters(fieldsddl.value, operatorddl.value, valueInput1.value, e.value);\n            updateButtonState();\n        },\n        width: '100%'\n    });\n    valueInput2.appendTo('#label-value2');\n    var applyBtn = new ej.buttons.Button({\n        isPrimary: true, disabled: true\n    });\n    applyBtn.appendTo('#label-apply');\n    var clearBtn = new ej.buttons.Button({ });\n    clearBtn.appendTo('#label-clear');\n    function setFilters(fieldName, condition, operand1, operand2) {\n        fieldCollections[fieldName] = {\n            name: fieldName,\n            type: 'Label',\n            condition: condition,\n            value1: operand1,\n            value2: operand2\n        };\n    }\n    function updateButtonState() {\n        applyBtn.disabled = true;\n        for (var i = 0, len = fields; i < len.length; i++) {\n            var field = len[i];\n            if (fieldCollections[field] && (fieldCollections[field].value1 !== '' || fieldCollections[field].value2 !== '')) {\n                applyBtn.disabled = false;\n                break;\n            }\n        }\n    }\n    document.getElementById('label-apply').onclick = function () {\n        var filterOptions = [];\n        for (var i = 0, len = fields; i < len.length; i++) {\n            var field = len[i];\n            if (fieldCollections[field] && fieldCollections[field].value1 !== ''){ \n                filterOptions.push(fieldCollections[field]);\n            }\n        }\n        if (filterOptions.length === 0) {\n            filterOptions = [{\n                name: fieldsddl.value,\n                type: 'Label',\n                condition: operatorddl.value,\n                value1: valueInput1.value.toString(),\n                value2: valueInput2.value.toString()\n            }];\n        }\n        pivotGridObj.dataSource.filterSettings = filterOptions;\n    };\n    document.getElementById('label-clear').onclick = function () {\n        pivotGridObj.dataSource.filterSettings = [];\n        valueInput1.value = '';\n        valueInput2.value = '';\n        fieldCollections = {};\n        updateButtonState();\n    };\n\n"}