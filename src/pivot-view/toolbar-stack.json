{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-view/toolbar/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"height:100%;\">\n        </div>\n    </div>\n</div>\n","index.js":"{{ripple}}/**\n * PivotView Toolbar Sample.\n */\n\n    ej.base.enableRipple(false);\n    var pivotGridObj = new ej.pivotview.PivotView({\n        dataSource: {\n            expandAll: false,\n            data: window.Pivot_Data,\n            columns: [{ name: 'Year' }, { name: 'Order_Source', caption: 'Order Source' }],\n            filters: [{ name: 'Product_Categories', caption: 'Product Categories' }],\n            enableSorting: true,\n            allowLabelFilter: true,\n            values: [{ name: 'In_Stock', caption: 'In Stock' }, { name: 'Sold', caption: 'Units Sold' },\n                { name: 'Amount', caption: 'Sold Amount' }],\n            allowValueFilter: true,\n            formatSettings: [{ name: 'Amount', format: 'C0' }],\n            rows: [{ name: 'Country' }, { name: 'Products' }]\n        },\n        allowExcelExport: true,\n        allowConditionalFormatting: true,\n        allowPdfExport: true,\n        showToolbar: true,\n        displayOption:{view:'Both'},\n        allowCalculatedField: true,\n        showFieldList: true,\n        width: '100%',\n        toolbar: ['New', 'Save', 'SaveAs', 'Rename', 'Remove', 'Load',\n\t\t'Grid', 'Chart', 'Export', 'SubTotal', 'GrandTotal', 'ConditionalFormatting', 'FieldList'],\n        saveReport: function (args) {\n            var reports = [];\n            var isSaved = false;\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                reports = JSON.parse(localStorage.pivotviewReports);\n            }\n            if (args.report && args.reportName && args.reportName !== '') {\n                reports.map(function (item) {\n                    if (args.reportName === item.reportName) {\n                        item.report = args.report;\n                        isSaved = true;\n                    }\n                });\n                if (!isSaved) {\n                    reports.push(args);\n                }\n                localStorage.pivotviewReports = JSON.stringify(reports);\n            }\n        },\n        fetchReport: function (args) {\n            var reportCollection = [];\n            var reeportList = [];\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\n            }\n            reportCollection.map(function (item) {\n                reeportList.push(item.reportName);\n            });\n            args.reportName = reeportList;\n        },\n        loadReport: function (args) {\n            var reportCollection = [];\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\n            }\n            reportCollection.map(function (item) {\n                if (args.reportName === item.reportName) {\n                    args.report = item.report;\n                }\n            });\n            if (args.report) {\n                pivotGridObj.dataSource = JSON.parse(args.report).dataSource;\n            }\n        },\n        removeReport: function (args) {\n            var reportCollection = [];\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\n            }\n            for (var i = 0; i < reportCollection.length; i++) {\n                if (reportCollection[i].reportName === args.reportName) {\n                    reportCollection.splice(i, 1);\n                }\n            }\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                localStorage.pivotviewReports = JSON.stringify(reportCollection);\n            }\n        },\n        renameReport: function (args) {\n            var reportCollection = [];\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                reportCollection = JSON.parse(localStorage.pivotviewReports);\n            }\n            reportCollection.map(function (item) {\n                if (args.reportName === item.reportName) {\n                    item.reportName = args.rename;\n                }\n            });\n            if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n                localStorage.pivotviewReports = JSON.stringify(reportCollection);\n            }\n        },\n        newReport: function () {\n            pivotGridObj.setProperties({\n                dataSource: {\n                    columns: [],\n                    rows: [],\n                    values: [],\n                    filters: []\n                }\n            }, false);\n        },\n\t\ttoolbarRender: function (args) {\n\t\t\targs.customToolbar.splice(6, 0, {\n\t\t\t\ttype: 'Separator' \n\t\t\t});\n\t\t\targs.customToolbar.splice(9, 0, {\n\t\t\t\ttype: 'Separator' \n\t\t\t});\n\t\t},\n        height: 300,\n        gridSettings: {\n            columnWidth: 140\n        }\n    });\n    pivotGridObj.appendTo('#PivotView');\n"}