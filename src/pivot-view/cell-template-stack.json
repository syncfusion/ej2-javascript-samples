{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-view/cell-template/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\" style=\"overflow:auto;\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"height:100%;\">\n        </div>\n    </div>\n</div>\n","index.js":"{{ripple}}/**\n * PivotView sample with Cell Template.\n */\n\n    ej.base.enableRipple(false);\n    var pivotGridObj = new ej.pivotview.PivotView({\n        dataSource: {\n            data: window.renewableEnergy,\n            expandAll: true,\n            enableSorting: true,\n            drilledMembers: [{name:'Year', items:['FY 2015', 'FY 2017', 'FY 2018']}],\n            formatSettings: [{ name: 'ProCost', format: 'C0' }, { name: 'PowUnits', format: 'N0' }],\n            rows: [\n                { name: 'Year', caption: 'Production Year' },\n                { name: 'HalfYear', caption: 'Half Year' }\n            ],\n            columns: [\n                { name: 'EnerType', caption: 'Energy Type' },\n                { name: 'EneSource', caption: 'Energy Source' }\n            ],\n            values: [\n                { name: 'ProCost', caption: 'Revenue Growth' }\n            ],\n            filters: []\n        },\n        dataBound: function (args) {\n            trend();\n        },\n        height: 300,\n        width: '100%',\n        cellTemplate: '${getCellContent(data)}',\n        gridSettings: { columnWidth: 140 }\n    });\n    pivotGridObj.appendTo('#PivotView');\n\n    window.getCellContent = function (e) {\n        var template;\n        if (e && e.targetCell.className.indexOf('e-valuescontent') > -1) {\n            template = '<span class=\"tempwrap sb-icon-neutral pv-icons\"></span>';\n        } else {\n            template = '';\n        }\n        return template;\n    };\n    /* jshint ignore:start */\n    function trend() {\n        var cTable = document.getElementsByClassName(\"e-table\");\n        var colLen = pivotGridObj.pivotValues[3].length;\n        var cLen = cTable[3].children[0].children.length;\n        var rLen = cTable[3].children[1].children.length;\n     \n        for (let k = 0; k < rLen; k++) {\n            if (pivotGridObj.pivotValues[k] && pivotGridObj.pivotValues[k][0] !== undefined) {\n                rowIndx = (pivotGridObj.pivotValues[k][0]).rowIndex;\n                break;\n            }\n        }\n        var rowHeaders = [].slice.call(cTable[2].children[1].querySelectorAll('td'));\n        var rows = pivotGridObj.dataSource.rows;\n        if (rowHeaders.length > 1) {\n            for (var i = 0, Cnt = rows; i < Cnt.length; i++) {\n                var fields = {};\n                var fieldHeaders = [];\n                    for (var j = 0, Lnt = rowHeaders; j < Lnt.length; j++) {\n                        var header = rowHeaders[j];\n                        if (header.className.indexOf('e-gtot') === -1 && header.className.indexOf('e-rowsheader') > -1 && header.getAttribute('fieldname') === rows[i].name) {\n                            var headerName = rowHeaders[j].getAttribute('fieldname') + '_' + rowHeaders[j].textContent;\n                            fields[rowHeaders[j].textContent] = j;\n                            fieldHeaders.push(rowHeaders[j].textContent);\n                        }\n                    }\n                    if (i === 0) {\n                        for (var rnt = 0, Lnt = fieldHeaders; rnt < Lnt.length; rnt++) {\n                            if (rnt !== 0) {\n                                var row = fields[fieldHeaders[rnt]];\n                                var prevRow = fields[fieldHeaders[rnt - 1]];\n                                for (var j = 0, ci = 1; j < cLen && ci < colLen; j++, ci++) {\n                                    var node = cTable[3].children[1].children[row].childNodes[j];\n                                    var prevNode = cTable[3].children[1].children[prevRow].childNodes[j];\n                                    var ri = undefined;\n                                    var prevRi = undefined;\n                                    if (node) {\n                                        ri = node.getAttribute(\"index\");\n                                    }\n                                    if (prevNode) {\n                                        prevRi = prevNode.getAttribute(\"index\");\n                                    }\n                                    if (ri && ri < pivotGridObj.pivotValues.length) {\n                                        if ((pivotGridObj.pivotValues[prevRi][ci]).value > (pivotGridObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap')) {\n                                            var trendElement = node.querySelector('.tempwrap');\n                                            trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-loss');\n                                        } else if ((pivotGridObj.pivotValues[prevRi][ci]).value < (pivotGridObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap')) {\n                                            var trendElement = node.querySelector('.tempwrap');\n                                            trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-profit');\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                } else {\n                    for (var rnt = 0, Lnt = fieldHeaders; rnt < Lnt.length; rnt++) {\n                        var row = fields[fieldHeaders[rnt]];\n                        for (var j = 0, ci = 1; j < cLen && ci < colLen; j++, ci++) {\n                            var node = cTable[3].children[1].children[row].childNodes[j];\n                            var prevNode = cTable[3].children[1].children[row - 1].childNodes[j];\n                            var ri = undefined;\n                            var prevRi = undefined;\n                            if (node) {\n                                ri = node.getAttribute(\"index\");\n                            }\n                            if (prevNode) {\n                                prevRi = prevNode.getAttribute(\"index\");\n                            }\n                            if (ri && ri < pivotGridObj.pivotValues.length) {\n                                var cRowFieldName = cTable[2].children[1].children[row].childNodes[0].getAttribute('fieldname');\n                                var prevRowFieldName = cTable[2].children[1].children[row -1].childNodes[0].getAttribute('fieldname');\n                                if ((pivotGridObj.pivotValues[prevRi][ci]).value > (pivotGridObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap') &&\n                                cRowFieldName === prevRowFieldName) {\n                                    var trendElement = node.querySelector('.tempwrap');\n                                    trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-loss');\n                                } else if ((pivotGridObj.pivotValues[prevRi][ci]).value < (pivotGridObj.pivotValues[ri][ci]).value && node.querySelector('.tempwrap') &&\n                                cRowFieldName === prevRowFieldName) {\n                                    var trendElement = node.querySelector('.tempwrap');\n                                    trendElement.className = trendElement.className.replace('sb-icon-neutral', 'sb-icon-profit');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    /* jshint ignore:end */\n\n"}