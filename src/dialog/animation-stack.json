{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div id=\"target\" class=\"col-lg-12 control-section\" style=\"height:100%; width:100%;\">\n    <div id=\"customization\">\n        <div class=\"animate\">\n            <button class=\"text btn-animate\" id=\"Zoom\">Zoom in/out</button>\n        </div>\n        <div class=\"animate\">\n            <button class=\"text btn-animate\" id=\"FlipXDown\">FlipX Down</button>\n        </div>\n        <div class=\"animate\">\n            <button class=\"text btn-animate\" id=\"FlipXUp\">FlipX Up</button>\n        </div>\n        <div class=\"animate\">\n            <button class=\"text btn-animate\" id=\"FlipYLeft\">FlipY Left</button>\n        </div>\n        <div class=\"animate\">\n            <button class=\"text btn-animate\" id=\"FlipYRight\">FlipY Right</button>\n        </div>\n        <div id=\"dialog\"></div>\n      </div>\n</div>\n\n  \n<style>\n    html,\n        body,    \n        #container {\n            height: 100%;\n            overflow: hidden;\n            width: 100%;\n            position: relative;\n            min-height: 400px;\n        }\n\n        .text {\n            text-transform: capitalize;\n        }\n                \n        #customization {\n            display: inline-block;\n            margin: 0 auto;\n        }\n\n        .animate {\n            display: inline-block;\n            padding: 10px;\n        }\n\n        .control-wrapper {\n            text-align: center;\n        }\n</style>\n\n","index.js":"{{ripple}}\n    //Render Button components\n    var zoom = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    zoom.appendTo('#Zoom');\n    var flipXDown = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    flipXDown.appendTo('#FlipXDown');\n    var flipXUp = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    flipXUp.appendTo('#FlipXUp');\n    var flipYLeft = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    flipYLeft.appendTo('#FlipYLeft');\n    var flipYRight = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n    flipYRight.appendTo('#FlipYRight');\n    ej.base.enableRipple(true);\n    // Initialization of Dialog component\n    var dialog = new ej.popups.Dialog({\n        // Enables the header\n        header: 'Animation Dialog',\n        // Enables the close icon button in header\n        showCloseIcon: true,\n        // Dialog content\n        content: '<span>The dialog is configured with animation effect. It is opened or closed with \"Zoom In or Out\" animation.</span>',\n        // The Dialog shows within the target element\n        target: document.getElementById(\"target\"),\n        width: '285px',\n        isModal: true,\n        animationSettings: { effect: 'Zoom' },\n        buttons: [{\n                click: dlgButtonClick,\n                buttonModel: { content: 'Hide', isPrimary: true }\n            }],\n    });\n    // Render initialized Dialog\n    dialog.appendTo('#dialog');\n\n    function dlgButtonClick() {\n        dialog.hide();\n    }\n    var list = document.getElementsByClassName('btn-animate');\n    var animationfn = function (index) {\n        return function () {\n            var effects = list[index].id;\n            var txt = list[index].parentElement.innerText;\n            txt = (txt == \"Zoom In/Out\") ? \"Zoom In or Out\" : txt;\n            dialog.content = 'The dialog is configured with animation effect. It is opened or closed with \"' + txt + '\" animation.';\n            dialog.animationSettings = { effect: effects, duration: 400 };\n            dialog.show();\n        };\n    };\n\n    for (var i = 0; i < list.length; i++) {\n        list[i].addEventListener('click', animationfn(i));\n    }\n"}