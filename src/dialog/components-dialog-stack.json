{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/dialog/components-dialog/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n<div id=\"target\" class=\"col-lg-12 control-section\" style=\"height:100%; width:100%;\">\n<div style=\"position:relative; top:10px; left:10px;\">\n    <!-- Button to open the default Dialog -->\n    <button id=\"dialogBtn\" type=\"button\">Open</button>\n</div>\n<!-- Initialize default Dialog -->\n<div id=\"defaultDialog\">\n    <div id=\"tab_default\">\n    </div>\n\n</div>\n<div id=\"Grid\" style=\"display:none;\">\n</div>\n<div id=\"chartComponent\" style=\"display:none;\">\n    <div id=\"chart\" align=\"center\"></div>\n</div>\n<div id=\"scheduleComponent\" style=\"display:none;\">\n    <div id=\"Schedule\">\n    </div>\n</div>\n<div id=\"rteComponent\" style=\"display:none;\">\n    <div id=\"defaultRTE\">\n        <p>The rich text editor component is WYSIWYG (&quot;what you see is what you get&quot;) editor that provides the best\n            user experience to create and update the content.\n            Users can format their content using standard toolbar commands.</p>\n\n        <p><b>Key features:</b></p>\n\n        <ul>\n            <li>\n                <p>Provides &lt;IFRAME&gt; and &lt;DIV&gt; modes</p>\n            </li>\n            <li>\n                <p>Capable of handling markdown editing.</p>\n            </li>\n            <li>\n                <p>Contains a modular library to load the necessary functionality on demand.</p>\n            </li>\n            <li>\n                <p>Provides a fully customizable toolbar.</p>\n            </li>\n            <li>\n                <p>Provides HTML view to edit the source directly for developers.</p>\n            </li>\n        </ul>\n    </div>\n</div>\n<div id=\"formComponent\" style=\"display:none;\">\n    <div class=\"content-wrapper\" style=\"margin-bottom: 25px;\">\n        <div class=\"form-title\"><span>Add Customer Details</span></div>\n        <form id=\"formId\" class=\"form-horizontal\" novalidate>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input type=\"text\" id=\"user\" name=\"User\" required data-msg-containerid=\"userError\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"user\">User Name</label>\n                </div>\n                <div id=\"userError\"></div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input id=\"dob\" name=\"DOB\" required data-msg-containerid=\"dateError\">\n                    <span class=\"e-float-line\"></span>\n                </div>\n                <div id=\"dateError\"></div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <textarea rows=\"2\" id=\"Address\" name=\"Address\"></textarea>\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"address\">Address</label>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input type=\"text\" id=\"city\" name=\"City\" required data-msg-containerid=\"cityError\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"city\">City</label>\n                </div>\n                <div id=\"cityError\"></div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input type=\"text\" id=\"state\" name=\"State\" required data-msg-containerid=\"stateError\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"state\">State</label>\n                </div>\n                <div id=\"stateError\"></div>\n            </div>\n            <div class=\"e-row\">\n                <div style=\"width: 320px;margin:0px auto;height: 100px;padding-top: 25px;\">\n                    <div style=\"display: inline-block;\">\n                        <button id=\"validateSubmit\" class=\"samplebtn e-control e-btn e-primary\" type=\"submit\" style=\"height:40px;width: 150px;\" data-ripple=\"true\">Add Customer</button>\n                    </div>\n                    <div style=\"float: right;\">\n                        <button id=\"resetbtn\" class=\"samplebtn e-control e-btn\" type=\"reset\" style=\"height:40px;width: 150px;\" data-ripple=\"true\">Clear</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n</div>\n</div>\n</div>\n\n\n\n<style>\n#defaultDialog {\nleft:23%;\ntop:0%! important;\n}\n.dlgbtn {\n    margin-right: 10px;\n}\n#target {\n    height: 100%;\n    min-height: 500px;\n}\n@media screen and (min-width: 150px) and (max-width: 480px) {\n    .control-section {\n        margin-bottom: 30px;\n    }\n    .control-wrapper {\n        margin-bottom: 0px;\n    }\n}\n.e-btn-hide {\n    display: none;\n}\n\n.form-title {\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 16px;\n    font-weight: 500;\n    color: rgba(0, 0, 0, 0.70);\n}\n\n.e-error,\n.e-float-text {\n    font-weight: 500;\n}\n\n.e-custom-label {\n    font-size: 14px;\n    font-weight: 500;\n    margin-left: 20px;\n}\n\n#formId {\n    padding-top: 10px;\n    border: 1px solid #ccc;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.36);\n    border-radius: 5px;\n    background: #f9f9f9;\n    height: 250px;\n    overflow-y: scroll;\n}\n\n.highcontrast form,\n.highcontrast .header {\n    color: #fff;\n    background: #000000;\n}\n\n.header {\n    color: rgba(0, 0, 0, 0.7);\n}\n\ntable,\ntd,\nth {\n    padding: 3px;\n}\n\n.form-horizontal .form-group {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 5px;\n}\n</style></div></body></html>","index.js":"{{ripple}}/**\r\n * Default Dialog sample\r\n */\r\n\r\n    var initRte = true;\r\n    var initchart = true;\r\n    var initschedule = true;\r\n    var dialogObj = new ej.popups.Dialog({\r\n        header: 'Syncfusion Components inside Dialog',\r\n        target: document.getElementById('target'),\r\n        animationSettings: { effect: 'None' },\r\n        showCloseIcon: true,\r\n        width: '700px',\r\n        buttons: [{\r\n          click: dlgButtonClick,\r\n          buttonModel: { content: 'OK', isPrimary: true }\r\n        },\r\n        {\r\n          click: dlgButtonClick,\r\n          buttonModel: { content: 'Cancel', cssClass: 'e-flat' }\r\n        }],\r\n        open: dialogOpen,\r\n        close: dialogClose\r\n      });\r\n      dialogObj.appendTo('#defaultDialog');\r\n      var tabObj = new ej.navigations.Tab({\r\n        items: [\r\n          {\r\n            header: { 'text': 'Grid' }, content: '#Grid'\r\n          },\r\n          {\r\n            header: { 'text': 'Scheduler' }, content: '#scheduleComponent'\r\n          },\r\n          {\r\n            header: { 'text': 'Chart' }, content: '#chartComponent'\r\n          },\r\n          {\r\n            header: { 'text': 'Rich Text Editor' }, content: '#rteComponent'\r\n          },\r\n          {\r\n            header: { 'text': 'Forms' }, content: '#formComponent'\r\n          }\r\n        ],\r\n        selected: selected\r\n      });\r\n      //Render initialized Tab component\r\n      tabObj.appendTo('#tab_default');\r\n      var gridData = new ej.data.DataManager(window.orderData).executeLocal(new ej.data.Query().take(15));\r\n      var grid = new ej.grids.Grid(\r\n        {\r\n          dataSource: gridData,\r\n          allowPaging: true,\r\n          columns: [\r\n            { field: 'OrderID', headerText: 'Order ID', width: 120, textAlign: 'Right' },\r\n            { field: 'CustomerName', headerText: 'Customer Name', width: 150 },\r\n            { field: 'OrderDate', headerText: 'Order Date', width: 130, format: 'yMd', textAlign: 'Right' },\r\n            { field: 'Freight', width: 120, format: 'C2', textAlign: 'Right' },\r\n            { field: 'ShippedDate', headerText: 'Shipped Date', width: 140, format: 'yMd', textAlign: 'Right' },\r\n            { field: 'ShipCountry', headerText: 'Ship Country', width: 150 }\r\n          ],\r\n          pageSettings: { pageSizes: true, pageSize: 5 }\r\n        });\r\n      grid.appendTo('#Grid');\r\n      var data = new ej.base.extend([], window.scheduleData, null, true);\r\n      var scheduleObj = new ej.schedule.Schedule({\r\n        height: '300px',\r\n        selectedDate: new Date(2019, 0, 10),\r\n        eventSettings: { dataSource: data },\r\n        dragStart: function (args) {\r\n          args.navigation.enable = true;\r\n        }\r\n      });\r\n      scheduleObj.appendTo('#Schedule');\r\n      var defaultRTE = new ej.richtexteditor.RichTextEditor({});\r\n      defaultRTE.appendTo('#defaultRTE');\r\n      // Button has been created to open the Dialog\r\n      var button = new ej.buttons.Button({});\r\n      button.appendTo('#dialogBtn');\r\n      var chart = new ej.charts.Chart({\r\n      \r\n        //Initializing Primary X Axis\r\n        primaryXAxis: {\r\n          valueType: 'DateTime',\r\n          labelFormat: 'y',\r\n          intervalType: 'Years',\r\n          edgeLabelPlacement: 'Shift',\r\n          majorGridLines: { width: 0 }\r\n        },\r\n      \r\n        //Initializing Primary Y Axis\r\n        primaryYAxis:\r\n        {\r\n          labelFormat: '{value}%',\r\n          rangePadding: 'None',\r\n          minimum: 0,\r\n          maximum: 100,\r\n          interval: 20,\r\n          lineStyle: { width: 0 },\r\n          majorTickLines: { width: 0 },\r\n          minorTickLines: { width: 0 }\r\n        },\r\n        chartArea: {\r\n          border: {\r\n            width: 0\r\n          }\r\n        },\r\n        //Initializing Chart Series\r\n        series: [\r\n          {\r\n            type: 'Line',\r\n            dataSource: [\r\n              { x: new Date(2005, 0, 1), y: 21 }, { x: new Date(2006, 0, 1), y: 24 },\r\n              { x: new Date(2007, 0, 1), y: 36 }, { x: new Date(2008, 0, 1), y: 38 },\r\n              { x: new Date(2009, 0, 1), y: 54 }, { x: new Date(2010, 0, 1), y: 57 },\r\n              { x: new Date(2011, 0, 1), y: 70 }\r\n            ],\r\n            xName: 'x', width: 2, marker: {\r\n              visible: true,\r\n              width: 10,\r\n              height: 10\r\n            },\r\n            yName: 'y', name: 'Germany',\r\n          },\r\n          {\r\n            type: 'Line',\r\n            dataSource: [\r\n              { x: new Date(2005, 0, 1), y: 28 }, { x: new Date(2006, 0, 1), y: 44 },\r\n              { x: new Date(2007, 0, 1), y: 48 }, { x: new Date(2008, 0, 1), y: 50 },\r\n              { x: new Date(2009, 0, 1), y: 66 }, { x: new Date(2010, 0, 1), y: 78 }, { x: new Date(2011, 0, 1), y: 84 }\r\n            ],\r\n            xName: 'x', width: 2, marker: {\r\n              visible: true,\r\n              width: 10,\r\n              height: 10\r\n            },\r\n            yName: 'y', name: 'England',\r\n          }\r\n        ],\r\n      \r\n        //Initializing Chart title\r\n        title: 'Inflation - Consumer Price',\r\n        //Initializing User Interaction Tooltip\r\n        tooltip: {\r\n          enable: true\r\n        },\r\n        height: \"300px\",\r\n        load: function (args) {\r\n            var lineTheme = location.hash.split('/')[1];\r\n            lineTheme = lineTheme ? lineTheme: 'Material';\r\n            args.chart.theme = (lineTheme.charAt(0).toUpperCase() + \r\n                lineTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\r\n        }\r\n      });\r\n      chart.appendTo('#chart');\r\n      document.getElementById('dialogBtn').onclick = function () {\r\n        dialogObj.show();\r\n      };\r\n      \r\n      // Navigate to corresponding link\r\n      function dlgButtonClick() {\r\n        dialogObj.hide();\r\n      }\r\n      \r\n      // 'Open' Button will be shown, if Dialog is closed\r\n      function dialogClose() {\r\n        document.getElementById('dialogBtn').style.display = 'block';\r\n      }\r\n      \r\n      // 'Open' Button will be hidden, if Dialog is opened\r\n      function dialogOpen() {\r\n        document.getElementById('dialogBtn').style.display = 'none';\r\n      }\r\n      function selected(args) {\r\n        if (args.selectedIndex == 1 && initschedule) {\r\n          scheduleObj.refresh();\r\n          initschedule = false;\r\n        }\r\n        if (args.selectedIndex == 2 && initchart) {\r\n          chart.refresh();\r\n          initchart = false;\r\n        }\r\n        else if (args.selectedIndex == 3 && initRte) {\r\n          defaultRTE.refresh();\r\n          initRte = false;\r\n        }\r\n      }\r\n      // Initialize Submit button\r\n      var buttonFormValidate = new ej.buttons.Button({ isPrimary: true });\r\n      buttonFormValidate.appendTo('#validateSubmit');\r\n      // Initialize Reset button\r\n      var buttonReset = new ej.buttons.Button({});\r\n      buttonReset.appendTo('#resetbtn');\r\n      // Initialize Custom placement \r\n      var option = {\r\n        rules: {\r\n          // Initialize the CustomPlacement.\r\n          User: { required: true },\r\n          DOB: { date: [true, 'Enter valid format'] },\r\n          City: { required: true },\r\n          State: { required: true },\r\n        }\r\n      };\r\n      // Initialize Form validation\r\n      var formObj;\r\n      formObj = new ej.inputs.FormValidator('#formId', option);\r\n      var formId = document.getElementById('formId');\r\n      document.getElementById('formId').addEventListener(\"submit\", function (e) {\r\n        e.preventDefault();\r\n        if (formObj.validate()) {\r\n            alert('Customer details added!');\r\n            formObj.reset();\r\n        }\r\n    });\r\n      var datepickerObject = new ej.calendars.DatePicker({\r\n        placeholder: 'Date of Birth'\r\n      });\r\n      // render initialized datepicker\r\n      datepickerObject.appendTo('#dob');      \r\n    \r\n"}