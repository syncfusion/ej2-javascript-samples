{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/auto-complete/custom-filtering/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\" style=\"height: 400px;\">\n    <div class=\"control-wrapper\">\n        <div style=\"padding-top:70px;\">\n            <input type=\"text\" tabindex=\"1\" id=\"books\">\n        </div>\n    </div>\n</div>\n\n\n\n\n","index.js":"{{ripple}}\n  // define the JSON of data\n  \n  // initialize AutoComplete component\n  var atcObj = new ej.dropdowns.AutoComplete({\n      // set the data to dataSource property\n      dataSource: window.booksData,\n      // maps the appropriate column to fields property\n      fields: { value: 'BookName' },\n      // set placeholder to AutoComplete input element\n      placeholder: 'e.g. Node.js Succinctly',\n      // Bind the filter event\n      filtering: function (e) {\n          var options = {\n              keys: ['BookName'],\n              includeMatches: true,\n              findAllMatches: true\n          };\n          // create object from Fuse constructor\n          var fuse = new Fuse(window.booksData, options);\n          // store the search result data based on typed characters\n          var result = fuse.search(e.text);\n          var data = [];\n          for (var i = 0; i < result.length; i++) {\n              data.push(result[i].item);\n          }\n          // pass the filter data source to updateData method.\n          e.updateData(data, null);\n          var popupElement = document.getElementById('books_popup');\n          var lists = popupElement.querySelectorAll('.e-list-item');\n          // For highlight the typed characters, pass the result data and list items to highlightSearch method.\n          highlightSearch(lists, result);\n      }\n  });\n  atcObj.appendTo('#books');\n  loadExternalFile();\n  // Dynamically load the fuse.js file\n  function loadExternalFile() {\n      var script = document.createElement('script');\n      script.src = 'dist/fuse.min.js';\n      document.getElementsByTagName('head')[0].appendChild(script);\n  }\n\n  function highlightSearch(listItems, result) {\n      if (result.length > 0) {\n          for (var i = 0; i < listItems.length; i++) {\n              var innerHTML = listItems[i].innerHTML;\n              for (var j = result[i].matches[0].indices.length - 1; j >= 0; j--) {\n                  var indexes = result[i].matches[0].indices[j];\n                  innerHTML = innerHTML.substring(0, indexes[0]) + '<span class=\"e-highlight\">' +\n                      innerHTML.substring(indexes[0], (indexes[1] + 1)) + '</span>' + innerHTML.substring(indexes[1] + 1);\n                  listItems[i].innerHTML = innerHTML;\n              }\n          }\n      }\n  }\n"}