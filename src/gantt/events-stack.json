{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/gantt/events/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Events\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Event Trace\">\n        <tbody><tr>\n            <td>\n                <div class=\"eventarea\" style=\"height: 346px;overflow: auto\">\n                    <span class=\"EventLog\" id=\"EventLog\" style=\"word-break: normal;\"></span>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 50%;padding: 20px 10px 10px 80px;\">\n                <div>\n                    <button type=\"button\" id=\"clear\">Clear</button>\n                </div>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}\r\n    var ganttChart = new ej.gantt.Gantt({\r\n        dataSource: projectNewData,\r\n        height: '450px',\r\n        treeColumnIndex: 1,\r\n        highlightWeekends: true,\r\n        allowSelection: true,\r\n        allowReordering: true,\r\n        allowSorting: true,\r\n        allowResizing: true,\r\n        enableContextMenu: true,\r\n        showColumnMenu: true,\r\n        load: load,\r\n        created: created,\r\n        dataBound: dataBound,\r\n        toolbarClick: toolbarClick,\r\n        beforeTooltipRender: beforeTooltipRender,\r\n        actionBegin: actionBegin,\r\n        actionComplete: actionComplete,\r\n        cellEdit: cellEdit,\r\n        endEdit: endEdit,\r\n        taskbarEditing: taskbarEditing,\r\n        taskbarEdited: taskbarEdited,\r\n        rowSelecting: rowSelecting,\r\n        rowSelected: rowSelected,\r\n        rowDeselecting: rowDeselecting,\r\n        rowDeselected: rowDeselected,\r\n        columnDragStart: columnDragStart,\r\n        columnDrag: columnDrag,\r\n        columnDrop: columnDrop,\r\n        expanding: expanding,\r\n        expanded: expanded,\r\n        collapsing: collapsing,\r\n        collapsed: collapsed,\r\n        columnMenuClick: columnMenuClick,\r\n        columnMenuOpen: columnMenuOpen,\r\n        contextMenuClick: contextMenuClick,\r\n        contextMenuOpen: contextMenuOpen,\r\n        resizeStart: resizeStart,\r\n        resizing: resizing,\r\n        resizeStop: resizeStop,\r\n        splitterResizeStart: splitterResizeStart,\r\n        splitterResizing: splitterResizing,\r\n        splitterResized: splitterResized,\r\n        recordDoubleClick: recordDoubleClick,\r\n        onTaskbarClick: onTaskbarClick,\r\n        taskFields: {\r\n            id: 'TaskID',\r\n            name: 'TaskName',\r\n            startDate: 'StartDate',\r\n            endDate: 'EndDate',\r\n            duration: 'Duration',\r\n            progress: 'Progress',\r\n            dependency: 'Predecessor',\r\n            child: 'subtasks'\r\n        },\r\n        columns: [\r\n            { field: 'TaskID', width: 60 },\r\n            { field: 'TaskName', width: 250 },\r\n            { field: 'StartDate' },\r\n            { field: 'EndDate' },\r\n            { field: 'Duration' },\r\n            { field: 'Predecessor' },\r\n            { field: 'Progress' },\r\n        ],\r\n        toolbar: ['Add', 'Edit', 'Update', 'Delete', 'Cancel', 'ExpandAll', 'CollapseAll', 'Search'],\r\n        editSettings: {\r\n            allowEditing: true,\r\n            allowAdding: true,\r\n            allowDeleting: true,\r\n            allowTaskbarEditing: true,\r\n        },\r\n        labelSettings: {\r\n            leftLabel: 'TaskName'\r\n        },\r\n        splitterSettings: {\r\n            columnIndex: 2\r\n        },\r\n        projectStartDate: new Date('03/24/2019'),\r\n        projectEndDate: new Date('07/06/2019')\r\n    });\r\n    ganttChart.appendTo('#Events');\r\n\r\n    function load() {\r\n        appendElement('Gantt <b>load</b> event called<hr>');\r\n    }\r\n    function created() {\r\n        appendElement('Gantt <b>created</b> event called<hr>');\r\n    }\r\n    function dataBound() {\r\n        appendElement('Gantt <b>dataBound</b> event called<hr>');\r\n    }\r\n    function toolbarClick() {\r\n        appendElement('Gantt <b>toolbarClick</b> event called<hr>');\r\n    }\r\n    function beforeTooltipRender() {\r\n        appendElement('Gantt <b>beforeTooltipRender</b> event called<hr>');\r\n    }\r\n    function actionBegin() {\r\n        appendElement('Gantt <b>actionBegin</b> event called<hr>');\r\n    }\r\n    function actionComplete() {\r\n        appendElement('Gantt <b>actionComplete</b> event called<hr>');\r\n    }\r\n    function cellEdit() {\r\n        appendElement('Gantt <b>cellEdit</b> event called<hr>');\r\n    }\r\n    function endEdit() {\r\n        appendElement('Gantt <b>endEdit</b> event called<hr>');\r\n    }\r\n    function taskbarEditing() {\r\n        appendElement('Gantt <b>taskbarEditing</b> event called<hr>');\r\n    }\r\n    function taskbarEdited() {\r\n        appendElement('Gantt <b>taskbarEdited</b> event called<hr>');\r\n    }\r\n    function rowSelecting() {\r\n        appendElement('Gantt <b>rowSelecting</b> event called<hr>');\r\n    }\r\n    function rowSelected() {\r\n        appendElement('Gantt <b>rowSelected</b> event called<hr>');\r\n    }\r\n    function rowDeselecting() {\r\n        appendElement('Gantt <b>rowDeselecting</b> event called<hr>');\r\n    }\r\n    function rowDeselected() {\r\n        appendElement('Gantt <b>rowDeselected</b> event called<hr>');\r\n    }\r\n    function columnDragStart() {\r\n        appendElement('Gantt <b>columnDragStart</b> event called<hr>');\r\n    }\r\n    function columnDrag() {\r\n        appendElement('Gantt <b>columnDrag</b> event called<hr>');\r\n    }\r\n    function columnDrop() {\r\n        appendElement('Gantt <b>columnDrop</b> event called<hr>');\r\n    }\r\n    function expanding() {\r\n        appendElement('Gantt <b>expanding</b> event called<hr>');\r\n    }\r\n    function expanded() {\r\n        appendElement('Gantt <b>expanded</b> event called<hr>');\r\n    }\r\n    function collapsing() {\r\n        appendElement('Gantt <b>collapsing</b> event called<hr>');\r\n    }\r\n    function collapsed() {\r\n        appendElement('Gantt <b>collapsed</b> event called<hr>');\r\n    }\r\n    function columnMenuClick() {\r\n        appendElement('Gantt <b>columnMenuClick</b> event called<hr>');\r\n    }\r\n    function columnMenuOpen(args) {\r\n        if (args.parentItem != null) {\r\n            args.element.querySelectorAll('li')[ganttChart.treeColumnIndex].style.display = 'none';\r\n        }\r\n        appendElement('Gantt <b>columnMenuOpen</b> event called<hr>');\r\n    }\r\n    function contextMenuClick() {\r\n        appendElement('Gantt <b>contextMenuClick</b> event called<hr>');\r\n    }\r\n    function contextMenuOpen() {\r\n        appendElement('Gantt <b>contextMenuOpen</b> event called<hr>');\r\n    }\r\n    function resizeStart() {\r\n        appendElement('Gantt <b>resizeStart</b> event called<hr>');\r\n    }\r\n    function resizing() {\r\n        appendElement('Gantt <b>resizing</b> event called<hr>');\r\n    }\r\n    function resizeStop() {\r\n        appendElement('Gantt <b>resizeStop</b> event called<hr>');\r\n    }\r\n    function splitterResizeStart() {\r\n        appendElement('Gantt <b>splitterResizeStart</b> event called<hr>');\r\n    }\r\n    function splitterResizing() {\r\n        appendElement('Gantt <b>splitterResizing</b> event called<hr>');\r\n    }\r\n    function splitterResized() {\r\n        appendElement('Gantt <b>splitterResized</b> event called<hr>');\r\n    }\r\n    function recordDoubleClick() {\r\n        appendElement('Gantt <b>recordDoubleClick</b> event called<hr>');\r\n    }\r\n    function onTaskbarClick() {\r\n        appendElement('Gantt <b>onTaskbarClick</b> event called<hr>');\r\n    }\r\n    function appendElement(html) {\r\n        var span = document.createElement('span');\r\n        span.innerHTML = html;\r\n        var log = document.getElementById('EventLog');\r\n        log.insertBefore(span, log.firstChild);\r\n    }\r\n\r\n    var Clear = new ej.buttons.Button();\r\n    Clear.appendTo('#clear');\r\n    document.getElementById('clear').onclick = function () {\r\n        document.getElementById('EventLog').innerHTML = '';\r\n    };\r\n"}