{"index.html":"<!DOCTYPE html><html><head>\n<meta charset=\"UTF-8\">\n<link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\">\n   if (/MSIE d|Trident.*rv:/.test(navigator.userAgent)) {\n       document.write(\"<script src='https://cdnjs.cloudflare.com/ajax/libs/bluebird/3.3.5/bluebird.min.js'><\\/script>\");\n   }\n</script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div class=\"control_wrapper\">\n        <div class=\"tabs-wrap\">\n            <div class=\"wrap\">\n                <input id=\"timepicker\" type=\"text\">\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n<style>\n    /* custom code start*/\n    .control_wrapper {\n        display: block;\n        margin: 0 auto;\n        max-width: 300px;\n        padding: 5% 0;\n    }\n\n    .tabs-wrap {\n        padding: 0 0px 10px;\n    }\n\n    .e-bigger .control-section {\n        margin-top: 60px;\n    }\n    /* custom code end*/\n    .e-custom-style.e-timepicker.e-popup li.e-disabled span {\n        color: #b7b1b1;\n    }\n\n    .e-custom-style.e-timepicker.e-popup li span {\n        color: #727070;\n    }\n\n    .e-custom-style.e-timepicker.e-popup li.e-disabled span {\n        height: 25px;\n        width: 25px;\n        font-size: 15px;\n    }\n\n    body.highcontrast .e-custom-style.e-timepicker.e-popup li.e-hover span:hover,\n    body.highcontrast .e-custom-style.e-timepicker.e-popup li.e-active.e-hover span {\n        color: #fff;\n    }\n    body.highcontrast .e-custom-style.e-timepicker.e-popup li.e-active span{\n        color: #000;\n    }\n\n</style>\n<script src=\"index.js\" type=\"text/javascript\"></script>\n\n</body></html>","index.js":"ej.base.enableRipple(true)\n\r\n    var timeObj = new ej.calendars.TimePicker({\r\n        value: new Date(),\r\n        itemRender: itemRanderHandler,\r\n        open: onOpen,\r\n        cssClass: 'e-custom-style'\r\n    });\r\n    timeObj.appendTo('#timepicker');\r\n\r\n    //initial time variable declaration\r\n    var startTime;\r\n    // scrollTo value will be assigned only if the timepicker value is not null or undefined and is a valid value.\r\n    function onOpen(args) {\r\n        if (timeObj.value && !isNaN(+timeObj.value))\r\n            //assign the current value as the scrollTo value\r\n            timeObj.scrollTo = timeObj.value;\r\n    }\r\n    //utilizing ItemEventArgs to access the beforeItemRender event argument\r\n    function itemRanderHandler(args) {\r\n        // inner element declaration for text\r\n        var span = document.createElement('span');\r\n        if (args.value.getHours() === 0 && args.value.getMinutes() === 0 && args.value.getSeconds() === 0) {\r\n            //assign the initial value to the variable\r\n            startTime = args.value;\r\n        }\r\n        //get the minutes details\r\n        var minutes = (+args.value - +startTime) / 60000;\r\n        //get the hours details\r\n        var hours = parseInt('' + (minutes / 60), 10);\r\n        var mins = (minutes % 60) / 6;\r\n        //displayed text formation for each LI element.\r\n        var minText;\r\n        var minsText = ' mins';\r\n        var hrsText = ' hrs';\r\n        if (timeObj.locale != 'en') {\r\n            if (timeObj.locale === 'fr-CH') {\r\n                minsText = ' minutes';\r\n                hrsText = ' heures';\r\n            }\r\n            if (timeObj.locale === 'de') {\r\n                minsText = ' minuten';\r\n                hrsText = ' stunden';\r\n            }\r\n            if (timeObj.locale === 'ar') {\r\n                minsText = ' دقيقة';\r\n                hrsText = ' ساعة';\r\n            }\r\n            if (timeObj.locale === 'zh') {\r\n                minsText = ' 分鐘';\r\n                hrsText = ' 小時';\r\n            }\r\n        }\r\n        if (minutes === 0 || minutes === 30) {\r\n            minText = minutes + minsText;\r\n        } else {\r\n            minText = (mins > 0) ? ('.' + mins) : '';\r\n        }\r\n        span.innerHTML = ' (' + ((hours > 0) ? (hours + minText + hrsText) : ('' + minText)) + ')';\r\n\r\n        //disable the specific time from the selection\r\n        if ((minutes / 60) % 3 === 0) {\r\n            //disable the time values by addeding the e-disabled class.\r\n            args.element.classList.add('e-disabled');\r\n        }\r\n\r\n        //append the custom SPAN element into LI element\r\n        args.element.appendChild(span);\r\n    }\r\n"}