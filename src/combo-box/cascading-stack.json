{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/combo-box/cascading/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\">\n    <div class=\"control-wrapper\">\n        <div class=\"padding-top\">\n            <input type=\"text\" id=\"country\">\n        </div>\n        <div class=\"padding-top\">\n            <input type=\"text\" id=\"state\">\n        </div>\n        <div class=\"padding-top\">\n            <input type=\"text\" id=\"city\">\n        </div>\n    </div>\n</div>\n\n\n\n\n","index.js":"{{ripple}}\r\n\r\n    var countryList = new ej.dropdowns.ComboBox({\r\n        // set the country data to dataSource property\r\n        dataSource: window.ddCountry,\r\n        // set the height of the popup element\r\n        popupHeight: 'auto',\r\n        // map the appropriate columns to fields property\r\n        fields: { value: 'CountryId', text: 'CountryName' },\r\n        // set false for disable the behavior of custom value rendering\r\n        allowCustom: false,\r\n        // bind change event\r\n        change: function () {\r\n            if (countryList.value === null) {\r\n                stateList.enabled = false;\r\n                cityList.enabled = false;\r\n                // clear the selection\r\n                stateList.value = null;\r\n                // clear the selection\r\n                cityList.value = null;\r\n            }\r\n            else {\r\n                stateList.enabled = true;\r\n                // frame the query based on selected value in country ComboBox.\r\n                var tempQuery = new ej.data.Query().where('CountryId', 'equal', countryList.value);\r\n                stateList.query = tempQuery;\r\n                // clear the selection\r\n                stateList.value = null;\r\n                // clear the selection\r\n                cityList.value = null;\r\n                cityList.enabled = false;\r\n            }\r\n            // bind the property change to state ComboBox\r\n            stateList.dataBind();\r\n            // bind the property change to city ComboBox\r\n            cityList.dataBind();\r\n        },\r\n        // set the placeholder to ComboBox input element\r\n        placeholder: 'Select a country'\r\n    });\r\n    countryList.appendTo('#country');\r\n    var stateList = new ej.dropdowns.ComboBox({\r\n        // set the state data to dataSource property\r\n        dataSource: window.ddState,\r\n        // set the height of the popup element\r\n        popupHeight: 'auto',\r\n        // map the appropriate columns to fields property\r\n        fields: { value: 'StateId', text: 'StateName' },\r\n        // set disable state by default to prevent user interact.\r\n        enabled: false,\r\n        // set false for disable the behavior of custom value rendering\r\n        allowCustom: false,\r\n        // bind change event\r\n        change: function () {\r\n            if (stateList.value === null) {\r\n                cityList.enabled = false;\r\n                // clear the selection\r\n                cityList.value = null;\r\n            }\r\n            else {\r\n                cityList.enabled = true;\r\n                // frame the query based on selected value in state ComboBox.\r\n                var tempQuery = new ej.data.Query().where('StateId', 'equal', stateList.value);\r\n                // set the framed query based on selected value in state ComboBox.\r\n                cityList.query = tempQuery;\r\n                // clear the selection\r\n                cityList.value = null;\r\n            }\r\n            // bind the property change to city ComboBox\r\n            cityList.dataBind();\r\n        },\r\n        placeholder: 'Select a state'\r\n    });\r\n    stateList.appendTo('#state');\r\n    var cityList = new ej.dropdowns.ComboBox({\r\n        // set the city data to dataSource property\r\n        dataSource: window.ddCities,\r\n        // set the height of the popup element\r\n        popupHeight: 'auto',\r\n        // map the appropriate columns to fields property\r\n        fields: { text: 'CityName', value: 'CityId' },\r\n        // set disable state by default to prevent user interact.\r\n        enabled: false,\r\n        // set false for disable the behavior of custom value rendering\r\n        allowCustom: false,\r\n        // set the placeholder to ComboBox input element\r\n        placeholder: 'Select a city'\r\n    });\r\n    cityList.appendTo('#city');\r\n"}