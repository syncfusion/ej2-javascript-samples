{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/combo-box/cascading/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\">\n    <div class=\"control-wrapper\">\n        <div class=\"padding-top\">\n            <input type=\"text\" id=\"country\">\n        </div>\n        <div class=\"padding-top\">\n            <input type=\"text\" id=\"state\">\n        </div>\n        <div class=\"padding-top\">\n            <input type=\"text\" id=\"city\">\n        </div>\n    </div>\n</div>\n\n\n\n\n","index.js":"{{ripple}}\n\n    var countryList = new ej.dropdowns.ComboBox({\n        // set the country data to dataSource property\n        dataSource: window.ddCountry,\n        // set the height of the popup element\n        popupHeight: 'auto',\n        // map the appropriate columns to fields property\n        fields: { value: 'CountryId', text: 'CountryName' },\n        // set false for disable the behavior of custom value rendering\n        allowCustom: false,\n        // bind change event\n        change: function () {\n            if (countryList.value === null) {\n                stateList.enabled = false;\n                cityList.enabled = false;\n                // clear the selection\n                stateList.value = null;\n                // clear the selection\n                cityList.value = null;\n            }\n            else {\n                stateList.enabled = true;\n                // frame the query based on selected value in country ComboBox.\n                var tempQuery = new ej.data.Query().where('CountryId', 'equal', countryList.value);\n                stateList.query = tempQuery;\n                // clear the selection\n                stateList.value = null;\n                // clear the selection\n                cityList.value = null;\n                cityList.enabled = false;\n            }\n            // bind the property change to state ComboBox\n            stateList.dataBind();\n            // bind the property change to city ComboBox\n            cityList.dataBind();\n        },\n        // set the placeholder to ComboBox input element\n        placeholder: 'Select a country'\n    });\n    countryList.appendTo('#country');\n    var stateList = new ej.dropdowns.ComboBox({\n        // set the state data to dataSource property\n        dataSource: window.ddState,\n        // set the height of the popup element\n        popupHeight: 'auto',\n        // map the appropriate columns to fields property\n        fields: { value: 'StateId', text: 'StateName' },\n        // set disable state by default to prevent user interact.\n        enabled: false,\n        // set false for disable the behavior of custom value rendering\n        allowCustom: false,\n        // bind change event\n        change: function () {\n            if (stateList.value === null) {\n                cityList.enabled = false;\n                // clear the selection\n                cityList.value = null;\n            }\n            else {\n                cityList.enabled = true;\n                // frame the query based on selected value in state ComboBox.\n                var tempQuery = new ej.data.Query().where('StateId', 'equal', stateList.value);\n                // set the framed query based on selected value in state ComboBox.\n                cityList.query = tempQuery;\n                // clear the selection\n                cityList.value = null;\n            }\n            // bind the property change to city ComboBox\n            cityList.dataBind();\n        },\n        placeholder: 'Select a state'\n    });\n    stateList.appendTo('#state');\n    var cityList = new ej.dropdowns.ComboBox({\n        // set the city data to dataSource property\n        dataSource: window.ddCities,\n        // set the height of the popup element\n        popupHeight: 'auto',\n        // map the appropriate columns to fields property\n        fields: { text: 'CityName', value: 'CityId' },\n        // set disable state by default to prevent user interact.\n        enabled: false,\n        // set false for disable the behavior of custom value rendering\n        allowCustom: false,\n        // set the placeholder to ComboBox input element\n        placeholder: 'Select a city'\n    });\n    cityList.appendTo('#city');\n"}