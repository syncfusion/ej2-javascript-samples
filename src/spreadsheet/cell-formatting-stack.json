{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/spreadsheet/cell-formatting/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"control-wrapper\">\n        <div id=\"spreadsheet\"></div>\n    </div>\n</div>\n\n\n","index.js":"{{ripple}}/**\r\n * Default Spreadsheet sample.\r\n */\r\n\r\n\r\n    var columns = [{ width: 80 }, { width: 140 }, { width: 100 }, { width: 232 }, { width: 120 }, { width: 100 },\r\n    { width: 100 }, { width: 120 }, { width: 80 }];\r\n    var rows = [{\r\n        height: 36,\r\n        // Applying cell formatting through cell binding\r\n        cells: [{ style: { textAlign: 'right' } }, { style: { textIndent: '2pt' } }, { style: { textAlign: 'right' } },\r\n        { style: { textIndent: '2pt' } }, { index: 5, style: { textAlign: 'right' } },\r\n        { index: 7, style: { textAlign: 'center' } }, { index: 8, style: { textAlign: 'right' } }]\r\n    }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] },\r\n    { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] }, { height: 42, cells: [] },\r\n    { height: 42, cells: [] }, { height: 42, cells: [] }];\r\n\r\n    var sheet = [{\r\n        name: 'Order Details',\r\n        rangeSettings: [{ dataSource: orderDetails }],\r\n        columns: columns,\r\n        rows: rows,\r\n        showGridLines: false\r\n    }];\r\n    //Initialize Spreadsheet component.\r\n    var spreadsheet = new ej.spreadsheet.Spreadsheet({\r\n        sheets: sheet,\r\n        showFormulaBar: false,\r\n        showRibbon: false,\r\n        dataBound: dataBound,\r\n        beforeCellRender: beforeCellRender\r\n    });\r\n\r\n    //Render initialized Spreadsheet component.\r\n    spreadsheet.appendTo('#spreadsheet');\r\n    function dataBound() {\r\n        if (!spreadsheet.isOpen && spreadsheet.activeSheetTab === 1) {\r\n            // Skip setting cell formatting for other sheets\r\n            if (spreadsheet.sheets[spreadsheet.activeSheetTab - 1].name !== 'Order Details') { return; }\r\n            // Applying cell formatting dynamically using cellFormat method\r\n            spreadsheet.cellFormat({ fontWeight: 'bold', backgroundColor: '#4b5366', color: '#ffffff', fontSize: '12pt' }, 'A1:I1');\r\n            spreadsheet.cellFormat({ fontWeight: 'bold', textIndent: '2pt' }, 'B2:B16');\r\n            spreadsheet.cellFormat({ fontStyle: 'italic', textIndent: '2pt' }, 'D2:D16');\r\n            spreadsheet.cellFormat({ textIndent: '2pt' }, 'E1:E16');\r\n            spreadsheet.cellFormat({ textIndent: '2pt' }, 'G1:G16');\r\n            spreadsheet.cellFormat({ textAlign: 'center', fontWeight: 'bold' }, 'H2:H16');\r\n            spreadsheet.cellFormat({ fontFamily: 'Helvetica New', verticalAlign: 'middle' }, 'A1:I16');\r\n        }\r\n    }\r\n    function beforeCellRender(args) {\r\n        if (!spreadsheet.isOpen && spreadsheet.activeSheetTab === 1) {\r\n            if (args.cell && args.cell.value) {\r\n                // Applying cell formatting before rendering the particular cell\r\n                switch (args.cell.value) {\r\n                    case 'Delivered':\r\n                        spreadsheet.cellFormat({ color: '#10c469', textDecoration: 'line-through' }, args.address);\r\n                        break;\r\n                    case 'Shipped':\r\n                        spreadsheet.cellFormat({ color: '#62c9e8' }, args.address);\r\n                        break;\r\n                    case 'Pending':\r\n                        spreadsheet.cellFormat({ color: '#FFC107', textDecoration: 'underline' }, args.address);\r\n                        break;\r\n                    case 'Cancelled':\r\n                        spreadsheet.cellFormat({ color: '#ff5b5b' }, args.address);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n"}