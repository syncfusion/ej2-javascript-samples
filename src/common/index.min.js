(function(e, a) { for(var i in a) e[i] = a[i]; }(this, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/common/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/common/index.js":
/*!*****************************!*\
  !*** ./src/common/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var cBlock = ['sb-src-code.hljs.javascript', 'sb-src-code.hljs.xml'];\r\nvar switcherPopup;\r\nvar themeSwitherPopup;\r\nvar openedPopup;\r\nvar searchPopup;\r\nvar settingsPopup;\r\nvar sidebar;\r\nvar settingsidebar;\r\nvar preventToggle;\r\nvar prevAction;\r\nvar searchInstance;\r\nvar headerThemeSwitch = document.getElementById('header-theme-switcher');\r\nvar settingElement = ej.base.select('.sb-setting-btn');\r\nvar themeList = document.getElementById('themelist');\r\nvar themeCollection = ['material', 'fabric', 'bootstrap', 'bootstrap4', 'highcontrast'];\r\nvar themeDropDown;\r\nvar contentTab;\r\nvar sourceTab;\r\nvar isExternalNavigation = true;\r\nvar defaultTree = false;\r\nvar intialLoadCompleted = false;\r\nvar resizeManualTrigger = false;\r\nvar leftToggle = ej.base.select('#sb-toggle-left');\r\nvar sbRightPane = ej.base.select('.sb-right-pane');\r\nvar sbContentOverlay = ej.base.select('.sb-content-overlay');\r\nvar sbBodyOverlay = ej.base.select('.sb-body-overlay');\r\nvar sbHeader = ej.base.select('#sample-header');\r\nvar resetSearch = ej.base.select('.sb-reset-icon');\r\nvar urlRegex = /(npmci\\.syncfusion\\.com|ej2\\.syncfusion\\.com)(\\/)(development|production)*/;\r\nvar sampleRegex = /#\\/(([^\\/]+\\/)+[^\\/\\.]+)/;\r\n// Regex for removing hidden codes\r\nvar reg = /.*custom code start([\\S\\s]*?)custom code end.*/g;\r\nvar sbArray = ['angular', 'react', 'typescript', 'aspnetcore', 'aspnetmvc', 'vue', 'blazor'];\r\nvar sbObj = {\r\n    'angular': 'angular',\r\n    'typescript': '',\r\n    'react': 'react',\r\n    'vue': 'vue',\r\n    'blazor': 'blazor'\r\n};\r\nvar searchEle = ej.base.select('#search-popup');\r\nvar inputele = ej.base.select('#search-input');\r\nvar searchOverlay = ej.base.select('.e-search-overlay');\r\nvar searchButton = document.getElementById('sb-trigger-search');\r\nvar setResponsiveElement = ej.base.select('.setting-responsive');\r\nvar isMobile = window.matchMedia('(max-width:550px)').matches;\r\nvar isTablet = window.matchMedia('(min-width:600px) and (max-width: 850px)').matches;\r\nvar isPc = window.matchMedia('(min-width:850px)').matches;\r\nvar selectedTheme = location.hash.split('/')[1] || 'material';\r\nvar toggleAnim = new ej.base.Animation({ duration: 500, timingFunction: 'ease' });\r\nvar controlSampleData = {};\r\nvar samplesList = getSampleList();\r\nvar samplesTreeList = [];\r\nvar execFunction = {};\r\nvar searchListView;\r\nvar sourceTabItems = [];\r\n//window.apiList = window.apiList;\r\nvar sampleNameElement = document.querySelector('#component-name>.sb-sample-text');\r\nvar breadCrumbComponent = document.querySelector('.sb-bread-crumb-text>.category-text');\r\nvar breadCrumSeperator = ej.base.select('.category-seperator');\r\nvar breadCrumbSubCategory = document.querySelector('.sb-bread-crumb-text>.component');\r\nvar breadCrumbSample = document.querySelector('.sb-bread-crumb-text>.crumb-sample');\r\nvar hsplitter = '<div class=\"sb-toolbar-splitter sb-custom-item\"></div>';\r\nvar openNewTemplate = \"<div class=\\\"sb-custom-item sb-open-new-wrapper\\\"><a id=\\\"openNew\\\" target=\\\"_blank\\\">\\n<div class=\\\"sb-icons sb-icon-Popout\\\"></div></a></div>\";\r\nvar sampleNavigation = \"<div class=\\\"sb-custom-item sample-navigation\\\"><button id='prev-sample' class=\\\"sb-navigation-prev\\\" \\n    aria-label=\\\"previous sample\\\">\\n<span class='sb-icons sb-icon-Previous'></span>\\n</button>\\n<button  id='next-sample' class=\\\"sb-navigation-next\\\" aria-label=\\\"next sample\\\">\\n<span class='sb-icons sb-icon-Next'></span>\\n</button>\\n</div>\";\r\nvar plnrTemplate = '<span class=\"sb-icons sb-icons-plnkr\"></span><span class=\"sb-plnkr-text\">Edit in StackBlitz</span>';\r\nvar contentToolbarTemplate = '<div class=\"sb-desktop-setting\"><button id=\"open-plnkr\" class=\"sb-custom-item sb-plnr-section\">' +\r\n    plnrTemplate + '</button>' + hsplitter + openNewTemplate + hsplitter +\r\n    '</div>' + sampleNavigation + '<div class=\"sb-icons sb-mobile-setting\"></div>';\r\nvar tabContentToolbar = ej.base.createElement('div', { className: 'sb-content-toolbar', innerHTML: contentToolbarTemplate });\r\nvar apiGrid;\r\nwindow.navigateSample = (window.navigateSample !== undefined) ? window.navigateSample : function () { return; };\r\nvar isInitRedirected;\r\nvar samplePath = [];\r\nvar defaultSamples = [];\r\nvar samplesAr = [];\r\nvar currentControlID;\r\nvar currentSampleID;\r\nvar currentControl;\r\nvar currencyDropDown;\r\nvar cultureDropDown;\r\nvar demoSection = ej.base.select('.sb-demo-section');\r\nvar matchedCurrency = {\r\n    'en': 'USD',\r\n    'de': 'EUR',\r\n    'ar': 'AED',\r\n    'zh': 'CNY',\r\n    'fr-CH': 'CHF'\r\n};\r\nsettingsidebar = new ej.navigations.Sidebar({\r\n    position: 'Right', width: '282', zIndex: '1003', showBackdrop: true, type: 'Over', enableGestures: false,\r\n    closeOnDocumentClick: true\r\n});\r\nfunction changeCulture(cul) {\r\n    if (cul === 'ar') {\r\n        changeRtl(true);\r\n    }\r\n    else {\r\n        changeRtl(false);\r\n    }\r\n    if (currencyDropDown) {\r\n        currencyDropDown.value = matchedCurrency[cul];\r\n    } else {\r\n        ej.base.setCurrencyCode(matchedCurrency[cul]);\r\n    }\r\n    ej.base.setCulture(cul);\r\n}\r\nfunction changeRtl(bool) {\r\n    var elementlist = ej.base.selectAll('.e-control', document.getElementById('control-content'));\r\n    for (var i = 0; i < elementlist.length; i++) {\r\n        var control = elementlist[i];\r\n        if (control.ej2_instances) {\r\n            for (var a = 0; a < control.ej2_instances.length; a++) {\r\n                var instance = control.ej2_instances[a];\r\n                instance.enableRtl = bool;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction loadCulture(cul) {\r\n    var ajax = new ej.base.Ajax('./src/common/cldr-data/main/' + cul + '/all.json', 'GET', true);\r\n    if (ej.base.getValue('main.' + cul, ej.base.cldrData)) {\r\n        changeCulture(cul);\r\n    } else {\r\n        ajax.send().then(function (result) {\r\n            ej.base.loadCldr(JSON.parse(result));\r\n            changeCulture(cul);\r\n        });\r\n    }\r\n}\r\n\r\nloadCulture('en');\r\nej.base.L10n.load(window.Locale);\r\nisMobile = window.matchMedia('(max-width:550px)').matches;\r\nif (ej.base.Browser.isDevice || isMobile) {\r\n    if (sidebar) {\r\n        sidebar.destroy();\r\n    }\r\n    sidebar = new ej.navigations.Sidebar({ width: '280px', showBackdrop: true, closeOnDocumentClick: true, enableGestures: false,change:resizeFunction });\r\n    sidebar.appendTo('#left-sidebar');\r\n} else {\r\n    sidebar = new ej.navigations.Sidebar({\r\n        width: '282px', target: document.querySelector('.sb-content '),\r\n        showBackdrop: false,\r\n        closeOnDocumentClick: false,\r\n        enableGestures: false,\r\n        change:resizeFunction\r\n    });\r\n    sidebar.appendTo('#left-sidebar');\r\n}\r\n\r\nfunction resizeFunction() {\r\n    if (!isMobile && !isTablet) {\r\n        resizeManualTrigger = true;\r\n        setTimeout(cusResize(), 400);\r\n    }\r\n}\r\n\r\nfunction preventTabSwipe(e) {\r\n    if (e.isSwiped) {\r\n        e.cancel = true;\r\n    }\r\n}\r\nfunction dynamicTab(e) {\r\n    var blockEle = this.element.querySelector('#e-content' + this.tabId + '_' + e.selectedIndex).children[0];\r\n    blockEle.innerHTML = this.items[e.selectedIndex].data;\r\n    blockEle.innerHTML = blockEle.innerHTML.replace(reg,'');\r\n    blockEle.classList.add('sb-src-code');\r\n    if (blockEle) {\r\n        hljs.highlightBlock(blockEle);\r\n    }\r\n}\r\n\r\nfunction renderSbPopups() {\r\n    switcherPopup = new ej.popups.Popup(document.getElementById('sb-switcher-popup'), {\r\n        relateTo: document.querySelector('.sb-header-text-right'),\r\n        position: { X: 'left' },\r\n        collision: { X: 'flip', Y: 'flip' },\r\n        offsetX: 0,\r\n        offsetY: -15,\r\n    });\r\n    themeSwitherPopup = new ej.popups.Popup(document.getElementById('theme-switcher-popup'), {\r\n        offsetY: 2,\r\n        relateTo: document.querySelector('.theme-wrapper'),\r\n        position: { X: 'left', Y: 'bottom' },\r\n        collision: { X: 'flip', Y: 'flip' }\r\n    });\r\n    searchPopup = new ej.popups.Popup(searchEle, {\r\n        offsetY: -80,\r\n        relateTo: inputele,\r\n        position: { X: 'left', Y: 'bottom' },\r\n        collision: { X: 'flip', Y: 'flip' }\r\n    });\r\n    settingsPopup = new ej.popups.Popup(document.getElementById('settings-popup'), {\r\n        offsetY: 5,\r\n        zIndex: 1001,\r\n        relateTo: settingElement,\r\n        position: { X: 'right', Y: 'bottom' },\r\n        collision: { X: 'flip', Y: 'flip' }\r\n    });\r\n    settingsidebar.appendTo('#right-sidebar');\r\n    if (!isMobile) {\r\n        settingsidebar.hide();\r\n        settingsPopup.hide();\r\n    } else {\r\n        ej.base.select('.sb-mobile-preference').appendChild(ej.base.select('#settings-popup'));\r\n    }\r\n    searchPopup.hide();\r\n    switcherPopup.hide();\r\n    themeSwitherPopup.hide();\r\n    themeDropDown = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        change: function (e) { switchTheme(e.value); }\r\n    });\r\n    themeDropDown.appendTo('#sb-setting-theme');\r\n    cultureDropDown = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        change: function (e) {\r\n            var value = e.value;\r\n            loadCulture(value);\r\n        }\r\n\r\n    });\r\n    currencyDropDown = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        change: function (e) { ej.base.setCurrencyCode(e.value); }\r\n    });\r\n    cultureDropDown.appendTo('#sb-setting-culture');\r\n    currencyDropDown.appendTo('#sb-setting-currency');\r\n    contentTab = new ej.navigations.Tab({\r\n        selected: changeTab,\r\n        selecting: preventTabSwipe\r\n    }, '#sb-content');\r\n    sourceTab = new ej.navigations.Tab({\r\n        items: [],\r\n        headerPlacement: 'Bottom',\r\n        cssClass: 'sb-source-code-section',\r\n        selecting: preventTabSwipe,\r\n        created: dynamicTabCreation,\r\n        selected: dynamicTab,\r\n    }, '#sb-source-tab');\r\n    apiGrid = new ej.grids.Grid({\r\n        width: '100%',\r\n        dataSource: [],\r\n        allowTextWrap: true,\r\n        columns: [\r\n            { field: 'name', headerText: 'Name', template: '#template', width: 180, textAlign: 'center' },\r\n            { field: 'type', headerText: 'Type', width: 180 },\r\n            { field: 'description', headerText: 'Description', template: '#template-description', width: 200 },\r\n        ],\r\n        dataBound: dataBound\r\n    });\r\n    apiGrid.appendTo('#api-grid');\r\n    var prevbutton = new ej.buttons.Button({ iconCss: 'sb-icons sb-icon-Previous', cssClass: 'e-flat' }, '#mobile-prev-sample');\r\n    var nextbutton = new ej.buttons.Button({ iconCss: 'sb-icons sb-icon-Next', cssClass: 'e-flat', iconPosition: 'Right' }, '#mobile-next-sample');\r\n    var tabHeader = document.getElementById('sb-content-header');\r\n    tabHeader.appendChild(tabContentToolbar);\r\n    var openNew = new ej.popups.Tooltip({\r\n        content: 'Open in New Window'\r\n    });\r\n\r\n    openNew.appendTo('.sb-open-new-wrapper');\r\n\r\n    var previous = new ej.popups.Tooltip({\r\n        content: 'Previous Sample'\r\n    });\r\n    previous.appendTo('#prev-sample');\r\n\r\n    var next = new ej.popups.Tooltip({\r\n        content: 'Next Sample'\r\n    });\r\n\r\n    ej.base.select('#right-pane').addEventListener('scroll', function (event) {\r\n        next.close();\r\n        openNew.close();\r\n        previous.close();\r\n    });\r\n\r\n    next.appendTo('#next-sample');\r\n\r\n}\r\n\r\nfunction checkApiTableDataSource() {\r\n    var hash = location.hash.split('/');\r\n    var data = window.apiList[hash[2] + '/' + hash[3].replace('.html', '')] || [];\r\n    if (!data.length) {\r\n        contentTab.hideTab(2);\r\n    } else {\r\n        contentTab.hideTab(2, false);\r\n    }\r\n}\r\n\r\nfunction changeTab(args) {\r\n    if (args.selectedIndex === 2) {\r\n        var hash = location.hash.split('/');\r\n        var data = window.apiList[hash[2] + '/' + hash[3].replace('.html', '')] || [];\r\n        if (data.length) {\r\n            apiGrid.dataSource = data;\r\n        } else {\r\n            apiGrid.dataSource = [];\r\n        }\r\n    }\r\n    if (args.selectedIndex === 1) {\r\n        sourceTab.items = sourceTabItems;\r\n        sourceTab.refresh();\r\n        rendercopycode();\r\n        dynamicTabCreation(sourceTab);\r\n    }\r\n}\r\n\r\nfunction dynamicTabCreation(obj) {\r\n    var tabObj;\r\n    if (obj) {\r\n        tabObj = obj;\r\n    } else { tabObj = this; }\r\n    var contentEle = tabObj.element.querySelector('#e-content' + tabObj.tabId + '_' + tabObj.selectedItem);\r\n    if (!contentEle) {\r\n        return;\r\n    }\r\n    var blockEle = tabObj.element.querySelector('#e-content' + tabObj.tabId + '_' + tabObj.selectedItem).children[0];\r\n    blockEle.innerHTML = tabObj.items[tabObj.selectedItem].data;\r\n    blockEle.innerHTML = blockEle.innerHTML.replace(reg,'');\r\n    blockEle.classList.add('sb-src-code');\r\n    if (blockEle) {\r\n        hljs.highlightBlock(blockEle);\r\n    }\r\n}\r\n\r\nfunction dataBound(args) {\r\n    if (!this.getRows()) {\r\n        return;\r\n    }\r\n    var gridtrs = this.getRows().length;\r\n    var trs = this.getRows();\r\n    for (var count = 0; count < gridtrs; count++) {\r\n        var tr1 = trs[count];\r\n        if (tr1.getBoundingClientRect().height > 100) {\r\n            var desDiv = tr1.querySelector('.sb-sample-description');\r\n            var tag = ej.base.createElement('a', { id: 'showtag', innerHTML: ' show more...' });\r\n            tag.addEventListener('click', tagShowmore.bind(this, desDiv));\r\n            desDiv.classList.add('e-custDesription');\r\n            desDiv.appendChild(tag);\r\n        }\r\n    }\r\n}\r\n\r\nfunction tagShowmore(target) {\r\n    target.classList.remove('e-custDesription');\r\n    target.querySelector('#showtag').classList.add('e-display');\r\n    var hideEle = target.querySelector('#hidetag');\r\n    if (!hideEle) {\r\n        var tag = ej.base.createElement('a', { id: 'hidetag', attrs: {}, innerHTML: 'show less..' });\r\n        target.appendChild(tag);\r\n        tag.addEventListener('click', taghideless.bind(this, target));\r\n    } else {\r\n        hideEle.classList.remove('e-display');\r\n    }\r\n}\r\n\r\nfunction taghideless(target) {\r\n    target.querySelector('#hidetag').classList.add('e-display');\r\n    target.querySelector('#showtag').classList.remove('e-display');\r\n    target.classList.add('e-custDesription');\r\n}\r\nfunction setPressedAttribute(ele) {\r\n    var status = ele.classList.contains('active');\r\n    ele.setAttribute('aria-pressed', status ? 'true' : 'false');\r\n}\r\nsearchOverlay.addEventListener('click', searchOverlayClick);\r\nfunction searchOverlayClick() {\r\n    toggleSearchOverlay();\r\n}\r\nfunction sbHeaderClick(action, preventSearch) {\r\n    if (openedPopup) {\r\n        openedPopup.hide(new ej.base.Animation({ name: 'FadeOut', duration: 300, delay: 0 }));\r\n    }\r\n    if (preventSearch !== true && !searchOverlay.classList.contains('sb-hide')) {\r\n        searchOverlay.classList.add('sb-hide');\r\n        searchButton.classList.remove('active');\r\n        setPressedAttribute(searchButton);\r\n    }\r\n    var curPopup;\r\n    switch (action) {\r\n        case 'changeSampleBrowser':\r\n            curPopup = switcherPopup;\r\n            break;\r\n        case 'changeTheme':\r\n            headerThemeSwitch.classList.toggle('active');\r\n            setPressedAttribute(headerThemeSwitch);\r\n            curPopup = themeSwitherPopup;\r\n            break;\r\n        case 'toggleSettings':\r\n            settingElement.classList.toggle('active');\r\n            setPressedAttribute(settingElement);\r\n            themeDropDown.index = themeCollection.indexOf(selectedTheme);\r\n            curPopup = settingsPopup;\r\n            break;\r\n    }\r\n    if (action === 'closePopup') {\r\n        headerThemeSwitch.classList.remove('active');\r\n        settingElement.classList.remove('active');\r\n        setPressedAttribute(headerThemeSwitch);\r\n        setPressedAttribute(settingElement);\r\n    }\r\n    if (curPopup && curPopup !== openedPopup) {\r\n        curPopup.show(new ej.base.Animation({ name: 'FadeIn', duration: 400, delay: 0 }));\r\n        openedPopup = curPopup;\r\n    } else {\r\n        openedPopup = null;\r\n    }\r\n    prevAction = action;\r\n}\r\n\r\nfunction toggleSearchOverlay() {\r\n    sbHeaderClick('closePopup', true);\r\n    inputele.value = '';\r\n    searchPopup.hide();\r\n    searchButton.classList.toggle('active');\r\n    setPressedAttribute(searchButton);\r\n    searchOverlay.classList.toggle('sb-hide');\r\n    if (!searchOverlay.classList.contains('sb-hide')) {\r\n        inputele.focus();\r\n    }\r\n}\r\n\r\nfunction changeTheme(e) {\r\n    var target = e.target;\r\n    target = ej.base.closest(target, 'li');\r\n    var themeName = target.id;\r\n    switchTheme(themeName);\r\n}\r\n\r\nfunction switchTheme(str) {\r\n    var hash = location.hash.split('/');\r\n    if (hash[1] !== str) {\r\n        hash[1] = str;\r\n        localStorage.setItem('ej2-switch', ej.base.select('.sb-responsive-section .active').id);\r\n        location.hash = hash.join('/');\r\n    }\r\n}\r\n\r\nfunction onsearchInputChange(e) {\r\n    if (e.keyCode === 27) {\r\n        toggleSearchOverlay();\r\n    }\r\n    var searchString = e.target.value;\r\n    if (searchString.length <= 2) {\r\n        searchPopup.hide();\r\n        return;\r\n    }\r\n    var val = [];\r\n    val = searchInstance.search(searchString, {\r\n        fields: {\r\n            component: { boost: 1 },\r\n            name: { boost: 2 }\r\n        },\r\n        expand: true,\r\n        boolean: 'AND'\r\n    });\r\n    var value = [];\r\n    if (ej.base.Browser.isDevice) {\r\n        for (var j = 0; j < val.length; j++) {\r\n            if (val[j].doc.hideOnDevice !== true) {\r\n                value = value.concat(val);\r\n            }\r\n        }\r\n    }\r\n    var searchVal = ej.base.Browser.isDevice ? value : val;\r\n    if (searchVal.length) {\r\n        var data = new ej.data.DataManager(searchVal);\r\n        var controls = data.executeLocal(new ej.data.Query().take(10).select('doc'));\r\n        var controlsAccess = [];\r\n        for (var x = 0; x < controls.length; x++) {\r\n            controlsAccess.push(controls[x].doc);\r\n        }\r\n        controls = controlsAccess;\r\n        var count = 1;\r\n        var controlCollection = {};\r\n        controlCollection[controls[0].component] = count;\r\n        controls[0].sortId = count;\r\n        for (var i = 1; i < controls.length; i++) {\r\n            var curComponent = controls[i].component;\r\n            var previd = controlCollection[curComponent];\r\n            if (previd) {\r\n                controls[i].sortId = previd;\r\n            } else {\r\n                ++count;\r\n                controlCollection[curComponent] = count;\r\n                controls[i].sortId = count;\r\n            }\r\n        }\r\n        if (!searchListView) {\r\n            searchListView = new ej.lists.ListView({\r\n                dataSource: controls,\r\n                fields: { id: 'uid', text: 'name', groupBy: 'sortId' },\r\n                select: controlSelect,\r\n                template: '<div class=\"e-text-content e-icon-wrapper\" data=\"${dir}/${url}\" uid=\"${uid}\" pid=\"${parentId}\">' +\r\n                    '<span class=\"e-list-text\" role=\"list-item\">' +\r\n                    '${name}</span></div>',\r\n                groupTemplate: '${if(items[0][\"component\"])}<div class=\"e-text-content\"><span class=\"e-search-group\">${items[0].component}</span>' +\r\n                    '</div>${/if}',\r\n                actionComplete: function () {\r\n                    var searchValue = ej.base.select('#search-input').value;\r\n                    highlight(searchValue, this.element);\r\n                }\r\n            }, searchPopup.element);\r\n        } else {\r\n            searchListView.dataSource = controls;\r\n        }\r\n        searchPopup.show();\r\n    } else {\r\n        searchPopup.element.innerHTML = '<div class=\"search-no-record\">We’re sorry. We cannot find any matches for your search term.</div>';\r\n        searchPopup.show();\r\n    }\r\n}\r\n\r\nfunction highlight(searchString, listElement) {\r\n    var regex = new RegExp(searchString.split(' ').join('|'), 'gi');\r\n    var contentElements = ej.base.selectAll('.e-list-item .e-text-content .e-list-text', listElement);\r\n    for (var i = 0; i < contentElements.length; i++) {\r\n        var spanText = ej.base.select('.sb-highlight', contentElements[i]);\r\n        if (spanText) {\r\n            contentElements[i].innerHTML = contentElements[i].text;\r\n        }\r\n        contentElements[i].innerHTML = contentElements[i].innerHTML.replace(regex, function (matched) {\r\n            return '<span class=\"sb-highlight\">' + matched + '</span>';\r\n        });\r\n    }\r\n}\r\n\r\nfunction setMouseOrTouch(e) {\r\n    var ele = ej.base.closest(e.target, '.sb-responsive-items');\r\n    var switchType = ele.id;\r\n    changeMouseOrTouch(switchType);\r\n    sbHeaderClick('closePopup');\r\n    localStorage.setItem('ej2-switch', switchType);\r\n    location.reload();\r\n}\r\n\r\nfunction onNextButtonClick(arg) {\r\n    sampleOverlay();\r\n    var curSampleUrl = location.hash;\r\n    var inx = samplesAr.indexOf(curSampleUrl);\r\n    if (inx !== -1) {\r\n        var prevhref = samplesAr[inx];\r\n        var curhref = samplesAr[inx + 1];\r\n        location.href = curhref;\r\n    }\r\n    window.hashString = location.hash;\r\n    setSelectList();\r\n}\r\n\r\nfunction onPrevButtonClick(arg) {\r\n    sampleOverlay();\r\n    var curSampleUrl = location.hash;\r\n    var inx = samplesAr.indexOf(curSampleUrl);\r\n    if (inx !== -1) {\r\n        var prevhref = samplesAr[inx];\r\n        var curhref = samplesAr[inx - 1];\r\n        location.href = curhref;\r\n    }\r\n    window.hashString = location.hash;\r\n    setSelectList();\r\n}\r\n\r\n\r\nfunction processResize(e) {\r\n    var toggle = sidebar.isOpen;\r\n\r\n    isMobile = window.matchMedia('(max-width:550px)').matches;\r\n    isTablet = window.matchMedia('(min-width:550px) and (max-width: 850px)').matches;\r\n    if (isTablet) {\r\n        resizeManualTrigger = false;\r\n    }\r\n\r\n    if (resizeManualTrigger || (isMobile && ej.base.select('#right-sidebar').classList.contains('sb-hide'))) {\r\n        return;\r\n    }\r\n    isTablet = window.matchMedia('(min-width:550px) and (max-width: 850px)').matches;\r\n    isPc = window.matchMedia('(min-width:850px)').matches;\r\n    processDeviceDependables();\r\n    setLeftPaneHeight();\r\n    var leftPane = ej.base.select('.sb-left-pane');\r\n    var rightPane = ej.base.select('.sb-right-pane');\r\n    var footer = ej.base.select('.sb-footer-left');\r\n    var pref = ej.base.select('#settings-popup');\r\n    if (isTablet || isMobile) {\r\n        contentTab.hideTab(1);\r\n    } else {\r\n        contentTab.hideTab(1, false);\r\n    }\r\n    if (toggle && !isPc) {\r\n        toggleLeftPane();\r\n    }\r\n    if (isMobile || isTablet) {\r\n        sidebar.target = null;\r\n        sidebar.showBackdrop = true;\r\n        sidebar.closeOnDocumentClick = true;\r\n        ej.base.select('.sb-left-footer-links').appendChild(footer);\r\n\r\n        if (isVisible('.sb-mobile-overlay')) {\r\n            removeMobileOverlay();\r\n        }\r\n\r\n        if (!pref.parentElement.classList.contains('sb-mobile-preference')) {\r\n            ej.base.select('.sb-mobile-preference').appendChild(pref);\r\n            settingsPopup.show();\r\n        }\r\n        var propPanel = ej.base.select('#control-content .property-section');\r\n        if (propPanel) {\r\n            ej.base.select('.sb-mobile-prop-pane').appendChild(propPanel);\r\n            ej.base.select('.sb-mobile-setting').classList.remove('sb-hide');\r\n        }\r\n        if (isVisible('.sb-mobile-overlay')) {\r\n            removeMobileOverlay();\r\n        }\r\n    }\r\n    if (isPc) {\r\n        sidebar.target = document.querySelector('.sb-content ');\r\n        sidebar.showBackdrop = false;\r\n        sidebar.closeOnDocumentClick = false;\r\n        ej.base.select('.sb-footer').appendChild(footer);\r\n        if (isVisible('.sb-mobile-overlay')) {\r\n            removeMobileOverlay();\r\n        }\r\n\r\n        if (isPc && !ej.base.Browser.isDevice && isVisible('.sb-left-pane')) {\r\n            rightPane.classList.remove('control-fullview');\r\n        }\r\n        if (pref.parentElement.classList.contains('sb-mobile-preference')) {\r\n            ej.base.select('#sb-popup-section').appendChild(pref);\r\n            settingsidebar.hide();\r\n            settingsPopup.hide();\r\n        }\r\n        var mobilePropPane = ej.base.select('.sb-mobile-prop-pane .property-section');\r\n        if (mobilePropPane) {\r\n            ej.base.select('#control-content').appendChild(mobilePropPane);\r\n        }\r\n        if (!ej.base.select('.sb-mobile-right-pane').classList.contains('sb-hide')) {\r\n            toggleRightPane();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction resetInput(arg) {\r\n    arg.preventDefault();\r\n    arg.stopPropagation();\r\n    document.getElementById('search-input').value = '';\r\n    document.getElementById('search-input-wrapper').setAttribute('data-value', '');\r\n    searchPopup.hide();\r\n}\r\nfunction bindEvents() {\r\n    document.getElementById('sb-switcher').addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        sbHeaderClick('changeSampleBrowser');\r\n    });\r\n    ej.base.select('.sb-header-text-right').addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        sbHeaderClick('changeSampleBrowser');\r\n    });\r\n    headerThemeSwitch.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        sbHeaderClick('changeTheme');\r\n    });\r\n    themeList.addEventListener('click', changeTheme);\r\n    document.addEventListener('click', sbHeaderClick.bind(this, 'closePopup'));\r\n    settingElement.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        sbHeaderClick('toggleSettings');\r\n    });\r\n    searchButton.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        toggleSearchOverlay();\r\n    });\r\n    document.getElementById('settings-popup').addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    });\r\n    inputele.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    });\r\n    inputele.addEventListener('keyup', onsearchInputChange);\r\n    setResponsiveElement.addEventListener('click', setMouseOrTouch);\r\n    ej.base.select('#sb-left-back').addEventListener('click', showHideControlTree);\r\n    leftToggle.addEventListener('click', toggleLeftPane);\r\n    ej.base.select('.sb-mobile-overlay').addEventListener('click', toggleMobileOverlay);\r\n    ej.base.select('.sb-header-settings').addEventListener('click', viewMobilePrefPane);\r\n    ej.base.select('.sb-mobile-setting').addEventListener('click', viewMobilePropPane);\r\n    resetSearch.addEventListener('click', resetInput);\r\n    document.getElementById('open-plnkr').addEventListener('click', function () {\r\n        var plnkrForm = ej.base.select('#stack-form');\r\n        if (plnkrForm) {\r\n            plnkrForm.submit();\r\n        }\r\n    });\r\n    document.getElementById('switch-sb').addEventListener('click', function (e) {\r\n        var target = ej.base.closest(e.target, 'li');\r\n        if (target) {\r\n            var anchor = target.querySelector('a');\r\n            if (anchor) {\r\n                anchor.click();\r\n            }\r\n        }\r\n    });\r\n    ej.base.select('#next-sample').addEventListener('click', onNextButtonClick);\r\n    ej.base.select('#mobile-next-sample').addEventListener('click', onNextButtonClick);\r\n    ej.base.select('#prev-sample').addEventListener('click', onPrevButtonClick);\r\n    ej.base.select('#mobile-prev-sample').addEventListener('click', onPrevButtonClick);\r\n    window.addEventListener('resize', processResize);\r\n    ej.base.select('.sb-right-pane').addEventListener('click', function () {\r\n        if (isTablet && isLeftPaneOpen()) {\r\n            toggleLeftPane();\r\n        }\r\n    });\r\n    // ej.base.select('.copycode').addEventListener('click', copyCode);\r\n    searchEle.addEventListener('click', function (e) {\r\n        var curEle = ej.base.closest(e.target, 'li');\r\n        if (curEle && curEle.classList.contains('e-list-item')) {\r\n            var tcontent = curEle.querySelector('.e-text-content');\r\n            var hashval = '#/' + selectedTheme + '/' + tcontent.getAttribute('data') + '.html';\r\n            inputele.value = '';\r\n            searchPopup.hide();\r\n            searchOverlay.classList.add('e-search-hidden');\r\n            if (location.hash !== hashval) {\r\n                sampleOverlay();\r\n                location.hash = hashval;\r\n                setSelectList();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction copyCode() {\r\n    var copyElem = ej.base.select('#' + cBlock[sourceTab.selectedItem]);\r\n    var textArea = ej.base.createElement('textArea');\r\n    textArea.textContent = copyElem.textContent.trim();\r\n    document.body.appendChild(textArea);\r\n    textArea.select();\r\n    document.execCommand('copy');\r\n    ej.base.detach(textArea);\r\n    ej.base.select('.copy-tooltip').ej2_instances[0].close();\r\n}\r\nfunction rendercopycode() {\r\n    var ele = ej.base.createElement('div', { className: 'copy-tooltip', innerHTML: '<div class=\"e-icons copycode\"></div>' });\r\n    document.getElementById('sb-source-tab').appendChild(ele);\r\n    ej.base.select('.copycode').addEventListener('click', copyCode);\r\n    var copiedTooltip = new ej.popups.Tooltip({ content: 'Copied to clipboard ', position: 'BottomCenter', opensOn: 'Click', closeDelay: 500 }, '.copy-tooltip');\r\n}\r\n\r\n\r\nfunction setSbLink() {\r\n    var href = location.href;\r\n    var link = href.match(urlRegex);\r\n    var sample = href.match(sampleRegex);\r\n    for (var i = 0, len = sbArray.length; i < len; i++) {\r\n        var sb = sbArray[i];\r\n        var ele = ej.base.select('#' + sb);\r\n        if (sb === 'aspnetcore' || sb === 'aspnetmvc') {\r\n            ele.href = sb === 'aspnetcore' ? 'https://ej2.syncfusion.com/aspnetcore/' : 'https://ej2.syncfusion.com/aspnetmvc/';\r\n\r\n        } else if (sb === 'blazor') {\r\n            ele.href = 'https://blazor.syncfusion.com/demos/';\r\n        } else {\r\n            ele.href = ((link) ? ('http://' + link[1] + '/' + (link[3] ? (link[3] + '/') : '')) :\r\n                ('https://ej2.syncfusion.com/')) + (sbObj[sb] ? (sb + '/') : '') +\r\n                'demos/#/' + (sample ? (sample[1] + (sb !== 'typescript' ? '' : '.html')) : '');\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction changeMouseOrTouch(str) {\r\n    var activeEle = setResponsiveElement.querySelector('.active');\r\n    if (activeEle) {\r\n        activeEle.classList.remove('active');\r\n    }\r\n    if (str === 'mouse') {\r\n        document.body.classList.remove('e-bigger');\r\n    } else {\r\n        document.body.classList.add('e-bigger');\r\n    }\r\n    setResponsiveElement.querySelector('#' + str).classList.add('active');\r\n}\r\n\r\nfunction loadTheme(theme) {\r\n    var body = document.body;\r\n    if (body.classList.length > 0) {\r\n        for (var themeItem in themeCollection) {\r\n            body.classList.remove(themeCollection[themeItem]);\r\n        }\r\n    }\r\n    body.classList.add(theme);\r\n    themeList.querySelector('.active').classList.remove('active');\r\n    themeList.querySelector('#' + theme).classList.add('active');\r\n    var ajax = new ej.base.Ajax('./dist/' + theme + '.css', 'GET', true);\r\n    ajax.send().then(function (result) {\r\n        var doc = document.getElementById('themelink');\r\n        doc.innerHTML = result;\r\n        selectedTheme = theme;\r\n        renderLeftPaneComponents();\r\n        renderSbPopups();\r\n        bindEvents();\r\n        if (isTablet || isMobile) {\r\n            contentTab.hideTab(1);\r\n        }\r\n        processDeviceDependables();\r\n        addRoutes(samplesList);\r\n        if (isTablet && isLeftPaneOpen()) {\r\n            toggleLeftPane();\r\n        }\r\n        elasticlunr.clearStopWords();\r\n        searchInstance = elasticlunr.Index.load(window.searchIndex);\r\n        hasher.initialized.add(parseHash);\r\n        hasher.changed.add(parseHash);\r\n        hasher.init();\r\n    });\r\n}\r\n\r\nfunction toggleMobileOverlay() {\r\n\r\n    if (!ej.base.select('.sb-mobile-right-pane').classList.contains('sb-hide')) {\r\n        toggleRightPane();\r\n    }\r\n}\r\n\r\nfunction removeMobileOverlay() {\r\n    ej.base.select('.sb-mobile-overlay').classList.add('sb-hide');\r\n}\r\n\r\nfunction isLeftPaneOpen() {\r\n    return sidebar.isOpen;\r\n}\r\n\r\nfunction isVisible(elem) {\r\n    return !ej.base.select(elem).classList.contains('sb-hide');\r\n}\r\n\r\nfunction setLeftPaneHeight() {\r\n    var leftPane = ej.base.select('.sb-left-pane');\r\n    leftPane.style.height = isMobile ? (document.body.offsetHeight + 'px') : '';\r\n}\r\n\r\nfunction toggleLeftPane() {\r\n    var reverse = sidebar.isOpen;\r\n    ej.base.select('#left-sidebar').classList.remove('sb-hide');\r\n    if (!reverse) {\r\n        leftToggle.classList.add('toggle-active');\r\n    } else {\r\n        leftToggle.classList.remove('toggle-active');\r\n    }\r\n\r\n    if (sidebar) {\r\n        reverse = sidebar.isOpen;\r\n        if (reverse) {\r\n            sidebar.hide();\r\n        } else {\r\n            sidebar.show();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction cusResize() {\r\n    var event;\r\n    if (typeof (Event) === 'function') {\r\n        event = new Event('resize');\r\n    } else {\r\n        event = document.createEvent('Event');\r\n        event.initEvent('resize', true, true);\r\n    }\r\n    window.dispatchEvent(event);\r\n}\r\n\r\nfunction toggleRightPane() {\r\n    themeDropDown.index = themeCollection.indexOf(selectedTheme);\r\n    ej.base.select('#right-sidebar').classList.remove('sb-hide');\r\n    if (isMobile) {\r\n        settingsidebar.toggle();\r\n    }\r\n}\r\n\r\n\r\nfunction viewMobilePrefPane() {\r\n    ej.base.select('.sb-mobile-prop-pane').classList.add('sb-hide');\r\n    ej.base.select('.sb-mobile-preference').classList.remove('sb-hide');\r\n    toggleRightPane();\r\n}\r\n\r\nfunction viewMobilePropPane() {\r\n    ej.base.select('.sb-mobile-preference').classList.add('sb-hide');\r\n    ej.base.select('.sb-mobile-prop-pane').classList.remove('sb-hide');\r\n    toggleRightPane();\r\n}\r\n\r\nfunction getSampleList() {\r\n    if (ej.base.Browser.isDevice) {\r\n        var tempList = ej.base.extend([], window.samplesList);\r\n        var sampleList = [];\r\n        for (var i = 0; i < tempList.length; i++) {\r\n            var temp = tempList[i];\r\n            if (temp.hideOnDevice == true) {\r\n                continue;\r\n            }\r\n            var data = new ej.data.DataManager(temp.samples);\r\n            temp.samples = data.executeLocal(new ej.data.Query().where('hideOnDevice', 'notEqual', true));\r\n            sampleList = sampleList.concat(temp);\r\n        }\r\n        return sampleList;\r\n    }\r\n    return window.samplesList;\r\n}\r\n\r\nfunction renderLeftPaneComponents() {\r\n    samplesTreeList = getTreeviewList(samplesList);\r\n    var sampleTreeView = new ej.navigations.TreeView({\r\n        fields: {\r\n            dataSource: samplesTreeList,\r\n            id: 'id',\r\n            parentID: 'pid',\r\n            text: 'name',\r\n            hasChildren: 'hasChild',\r\n            htmlAttributes: 'url'\r\n        },\r\n        nodeClicked: controlSelect,\r\n        nodeTemplate: '<div><span class=\"tree-text\">${name}</span>' +\r\n            '${if(type === \"update\")}<span class=\"e-badge sb-badge e-samplestatus ${type} tree tree-badge\">Updated</span>' +\r\n            '${else}${if(type)}<span class=\"e-badge sb-badge e-samplestatus ${type} tree tree-badge\">${type}</span>${/if}${/if}</div>'\r\n    }, '#controlTree');\r\n    var controlList = new ej.lists.ListView({\r\n        dataSource: controlSampleData[location.hash.split('/')[2]] || controlSampleData.grid,\r\n        fields: { id: 'uid', text: 'name', groupBy: 'order', htmlAttributes: 'data' },\r\n        select: controlSelect,\r\n        template: '<div class=\"e-text-content ${if(type)}e-icon-wrapper${/if}\"> <span class=\"e-list-text\" role=\"listitem\">${name}' +\r\n            '</span>${if(type === \"update\")}<span class=\"e-badge sb-badge e-samplestatus ${type}\">Updated</span>' +\r\n            '${else}${if(type)}<span class=\"e-badge sb-badge e-samplestatus ${type}\">${type}</span>${/if}${/if}' +\r\n            '${if(directory)}<div class=\"e-icons e-icon-collapsible\"></div>${/if}</div>',\r\n        groupTemplate: '${if(items[0][\"category\"])}<div class=\"e-text-content\">' +\r\n            '<span class=\"e-list-text\">${items[0].category}</span>' +\r\n            '</div>${/if}',\r\n        actionComplete: setSelectList\r\n    }, '#controlList');\r\n}\r\n\r\nfunction getTreeviewList(list) {\r\n    var id;\r\n    var pid;\r\n    var tempList = [];\r\n    var category = '';\r\n    for (var i = 0; i < list.length; i++) {\r\n        if (category !== list[i].category) {\r\n            category = list[i].category;\r\n            tempList = tempList.concat({ id: i + 1, name: list[i].category, hasChild: true, expanded: true });\r\n            pid = i + 1;\r\n            id = pid;\r\n        }\r\n        id += 1;\r\n        tempList = tempList.concat({\r\n            id: id,\r\n            pid: pid,\r\n            name: list[i].name,\r\n            type: list[i].type,\r\n            url: {\r\n                'data-path': '/' + list[i].directory + '/' + list[i].samples[0].url + '.html',\r\n                'control-name': list[i].directory,\r\n            }\r\n        });\r\n        controlSampleData[list[i].directory] = getSamples(list[i].samples);\r\n    }\r\n    return tempList;\r\n}\r\n\r\nfunction getSamples(samples) {\r\n    var tempSamples = [];\r\n    for (var i = 0; i < samples.length; i++) {\r\n        tempSamples[i] = samples[i];\r\n        tempSamples[i].data = { 'sample-name': samples[i].url, 'data-path': '/' + samples[i].dir + '/' + samples[i].url + '.html' };\r\n    }\r\n    return tempSamples;\r\n}\r\n\r\nfunction controlSelect(arg) {\r\n    var path = (arg.node || arg.item).getAttribute('data-path');\r\n    var curHashCollection = '/' + location.hash.split('/').slice(2).join('/');\r\n    if (path) {\r\n        controlListRefresh(arg.node || arg.item);\r\n        if (path !== curHashCollection) {\r\n            sampleOverlay();\r\n            var theme = location.hash.split('/')[1] || 'material';\r\n            if (arg.item && ((isMobile && !ej.base.select('#left-sidebar').classList.contains('sb-hide')) ||\r\n                ((isTablet || (ej.base.Browser.isDevice && isPc)) && isLeftPaneOpen()))) {\r\n                toggleLeftPane();\r\n            }\r\n            window.hashString = '#/' + theme + path;\r\n            setTimeout(function () { location.hash = '#/' + theme + path; }, 600);\r\n        }\r\n    }\r\n}\r\n\r\nfunction controlListRefresh(ele) {\r\n    var samples = controlSampleData[ele.getAttribute('control-name')];\r\n    if (samples) {\r\n        var listView = ej.base.select('#controlList').ej2_instances[0];\r\n        listView.dataSource = samples;\r\n        showHideControlTree();\r\n    }\r\n}\r\n\r\nfunction showHideControlTree() {\r\n    var controlTree = ej.base.select('#controlTree');\r\n    var controlList = ej.base.select('#controlSamples');\r\n    var reverse = ej.base.select('#controlTree').style.display === 'none';\r\n    if (reverse) {\r\n        viewSwitch(controlList, controlTree, reverse);\r\n\r\n    } else {\r\n        viewSwitch(controlTree, controlList, reverse);\r\n    }\r\n}\r\n\r\nfunction viewSwitch(from, to, reverse) {\r\n    var anim = new ej.base.Animation({ duration: 500, timingFunction: 'ease' });\r\n    var controlTree = ej.base.select('#controlTree');\r\n    var controlList = ej.base.select('#controlList');\r\n    controlTree.style.overflowY = 'hidden';\r\n    controlList.classList.remove('e-view');\r\n    controlList.classList.remove('sb-control-list-top');\r\n    controlList.classList.add('sb-adjust-juggle');\r\n    to.style.display = '';\r\n    anim.animate(from, {\r\n        name: reverse ? 'SlideRightOut' : 'SlideLeftOut',\r\n        end: function () {\r\n            controlTree.style.overflowY = 'auto';\r\n            from.style.display = 'none';\r\n            controlList.classList.add('e-view');\r\n            controlList.classList.add('sb-control-list-top');\r\n            controlList.classList.remove('sb-adjust-juggle');\r\n        }\r\n    });\r\n    anim.animate(to, { name: reverse ? 'SlideLeftIn' : 'SlideRightIn' });\r\n}\r\n\r\nfunction setSelectList() {\r\n    var hString = window.hashString || location.hash;\r\n    var hash = hString.split('/');\r\n    var list = ej.base.select('#controlList').ej2_instances[0];\r\n    var control = ej.base.select('[control-name=\"' + hash[2] + '\"]');\r\n    if (control) {\r\n        var data = list.dataSource;\r\n        var samples = controlSampleData[control.getAttribute('control-name')];\r\n        if (JSON.stringify(data) !== JSON.stringify(samples)) {\r\n            list.dataSource = samples;\r\n            list.dataBind();\r\n        }\r\n        var selectSample = ej.base.select('[sample-name=\"' + hash.slice(-1)[0].split('.html')[0] + '\"]');\r\n        if (selectSample) {\r\n            if (ej.base.select('#controlTree').style.display !== 'none') {\r\n                showHideControlTree();\r\n            }\r\n            list.selectItem(selectSample);\r\n        }\r\n    } else {\r\n        showHideControlTree();\r\n        list.selectItem(ej.base.select('[sample-name=\"grid-overview\"]'));\r\n    }\r\n}\r\n\r\nfunction toggleButtonState(id, state) {\r\n    var ele = document.getElementById(id);\r\n    var mobileEle = document.getElementById('mobile-' + id);\r\n    ele.disabled = state;\r\n    mobileEle.disabled = state;\r\n    if (state) {\r\n        mobileEle.classList.add('e-disabled');\r\n        ele.classList.add('e-disabled');\r\n    } else {\r\n        mobileEle.classList.remove('e-disabled');\r\n        ele.classList.remove('e-disabled');\r\n    }\r\n}\r\n\r\nfunction setPropertySectionHeight() {\r\n    if (!isTablet && !isMobile) {\r\n        var propertypane = ej.base.select('.property-section');\r\n        var ele = document.querySelector('.control-section');\r\n        if (ele && propertypane) {\r\n            ele.classList.add('sb-property-border');\r\n        } else {\r\n            ele.classList.remove('sb-property-border');\r\n        }\r\n    }\r\n}\r\n\r\nfunction routeDefault() {\r\n    crossroads.addRoute('', function () {\r\n        window.location.href = '#/' + selectedTheme + '/grid/gridoverview.html';\r\n        isInitRedirected = true;\r\n    });\r\n    crossroads.bypassed.add(function (request) {\r\n        var hash = request.split('.html')[0].split('/');\r\n        if (samplePath.indexOf(hash.slice(1).join('/')) === -1) {\r\n            location.hash = '#/' + hash[0] + '/' + (defaultSamples[hash[1]] || 'grid/gridoverview.html');\r\n            isInitRedirected = true;\r\n        }\r\n    });\r\n}\r\n\r\nfunction destroyControls() {\r\n    var elementlist = ej.base.selectAll('.e-control', document.getElementById('control-content'));\r\n    for (var i = 0; i < elementlist.length; i++) {\r\n        var control = elementlist[i];\r\n        if (control.ej2_instances) {\r\n            for (var a = 0; a < control.ej2_instances.length; a++) {\r\n                var instance = control.ej2_instances[a];\r\n                instance.destroy();\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction loadScriptfile(path) {\r\n    var scriptEle = document.querySelector('script[src=\"' + path + '\"]');\r\n    var doFun;\r\n    var p2 = new Promise(function (resolve, reject) {\r\n        doFun = resolve;\r\n    });\r\n    if (!scriptEle) {\r\n        scriptEle = document.createElement('script');\r\n        scriptEle.setAttribute('type', 'text/javascript');\r\n        scriptEle.setAttribute('src', path);\r\n        scriptEle.onload = doFun;\r\n        if (typeof scriptEle !== 'undefined') {\r\n            document.getElementsByTagName('head')[0].appendChild(scriptEle);\r\n        }\r\n    } else {\r\n        doFun();\r\n    }\r\n    return p2;\r\n}\r\n\r\nfunction getExecFunction(sample) {\r\n    if (execFunction.hasOwnProperty(sample)) {\r\n        return execFunction[sample];\r\n    } else {\r\n        execFunction[sample] = window.default;\r\n        return execFunction[sample];\r\n    }\r\n}\r\n\r\nfunction errorHandler(error) {\r\n    document.getElementById('control-content').innerHTML = error ? error : 'Not Available';\r\n    ej.base.select('#control-content').classList.add('error-content');\r\n    removeOverlay();\r\n}\r\n\r\nfunction plunker(results) {\r\n    var plnkr = JSON.parse(results);\r\n    var prevForm = ej.base.select('#stack-form');\r\n    if (prevForm) {\r\n        ej.base.detach(prevForm);\r\n    }\r\n    var form = ej.base.createElement('form');\r\n    var res = ((location.href).indexOf('ej2.syncfusion.com') !== -1 ? 'https:' : 'http:') + '//stackblitz.com/run';\r\n    form.setAttribute('action', res);\r\n    form.setAttribute('method', 'post');\r\n    form.setAttribute('target', '_blank');\r\n    form.id = 'stack-form';\r\n    form.style.display = 'none';\r\n    document.body.appendChild(form);\r\n    var plunks = Object.keys(plnkr);\r\n    for (var x = 0; x < plunks.length; x++) {\r\n        createStackInput('project[files][' + plunks[x] + ']', plnkr[plunks[x]], form);\r\n    }\r\n    createStackInput('project[template]', 'javascript', form);\r\n    createStackInput('project[description]', 'Essential JS 2 Sample', form);\r\n    createStackInput('project[settings]', '{\"compile\":{\"clearConsole\":true}}', form);\r\n}\r\nfunction createStackInput(name, value, form) {\r\n    var input = ej.base.createElement('input');\r\n    input.setAttribute('type', 'hidden');\r\n    input.setAttribute('name', name);\r\n    input.setAttribute('value', value.replace(/{{theme}}/g, selectedTheme).replace(/{{ripple}}/,\r\n        (selectedTheme === 'material') ? 'ej.base.enableRipple(true);\\n' : ''));\r\n    form.appendChild(input);\r\n}\r\n\r\nfunction addRoutes(samplesList) {\r\n    var loop1 = function (node) {\r\n        defaultSamples[node.directory] = node.directory + '/' + node.samples[0].url + '.html';\r\n        var dataManager = new ej.data.DataManager(node.samples);\r\n        var samples = dataManager.executeLocal(new ej.data.Query().sortBy('order', 'ascending'));\r\n        var loop2 = function (subNode) {\r\n            var control = node.directory;\r\n            var sample = subNode.url;\r\n            samplePath = samplePath.concat(control + '/' + sample);\r\n            var sampleName = node.name + ' / ' + ((node.name !== subNode.category) ?\r\n                (subNode.category + ' / ') : '') + subNode.name;\r\n            var selectedTheme = location.hash.split('/')[1] ? location.hash.split('/')[1] : 'material';\r\n            var urlString = '/' + selectedTheme + '/' + control + '/' + sample + '.html';\r\n            samplesAr.push('#' + urlString);\r\n            crossroads.addRoute(urlString, function () {\r\n                var dataSourceLoad = document.getElementById(node.dataSourcePath);\r\n                if (node.dataSourcePath && !dataSourceLoad) {\r\n                    var dataAjax = new ej.base.Ajax(node.dataSourcePath, 'GET', true);\r\n                    dataAjax.send().then(function (result) {\r\n                        var ele = ej.base.createElement('script', { id: node.dataSourcePath, innerHTML: result });\r\n                        document.getElementsByTagName('head')[0].appendChild(ele);\r\n                        onDataSourceLoad(node, subNode, control, sample, sampleName);\r\n                    });\r\n                } else {\r\n                    onDataSourceLoad(node, subNode, control, sample, sampleName);\r\n                }\r\n\r\n\r\n            });\r\n        };\r\n        for (var i = 0; i < samples.length; i++) {\r\n            var subNode = samples[i];\r\n            loop2(subNode);\r\n        }\r\n    };\r\n    for (var i = 0; i < samplesList.length; i++) {\r\n        var node = samplesList[i];\r\n        loop1(node);\r\n    }\r\n    if (ej.base.Browser.isDevice) {\r\n        if (location.hash && samplesAr.indexOf(location.hash) == -1) {\r\n            var toastObj = new ej.notifications.Toast({\r\n                position: {\r\n                    X: 'Right'\r\n                }\r\n            });\r\n            toastObj.appendTo('#sb-home');\r\n            setTimeout(function () {\r\n                toastObj.show({\r\n                    content: location.hash.split('/')[2] + 'component not supported in mobile device'\r\n                });\r\n            }, 200);\r\n        }\r\n    }\r\n}\r\n\r\nfunction onDataSourceLoad(node, subNode, control, sample, sampleName) {\r\n    var controlID = node.uid;\r\n    var sampleID = subNode.uid;\r\n    document.getElementById('open-plnkr').disabled = true;\r\n    var openNew = ej.base.select('#openNew');\r\n    if (openNew) {\r\n        openNew.href = location.href.split('#')[0] +  node.directory + '/' + subNode.url + '/';\r\n    }\r\n    setSbLink();\r\n    var ajaxFile = [];\r\n    var nameFile = [];\r\n    var tabObj = [];\r\n    var jsFile = new ej.base.Ajax('src/' + control + '/' + sample + '.js', 'GET', false);\r\n    var jsname = sample + '.js';\r\n\r\n    var htmlFile = new ej.base.Ajax('src/' + control + '/' + sample + '.html', 'GET', false);\r\n    var htmlFileNme = sample + '.html';\r\n\r\n    ajaxFile = [jsFile, htmlFile];\r\n    nameFile = [jsname, htmlFileNme];\r\n    if (subNode.sourceFiles) {\r\n        ajaxFile.splice(0);\r\n        nameFile.splice(0);\r\n        var sourcefiles = subNode.sourceFiles;\r\n        for (var i = 0; i < sourcefiles.length; i++) {\r\n            ajaxFile.push(new ej.base.Ajax(sourcefiles[i].path, 'GET', false));\r\n            nameFile.push(sourcefiles[i].displayName);\r\n\r\n        }\r\n    }\r\n    var subfile = 0;\r\n    var content;\r\n    for (var file = 0; file < ajaxFile.length; file++) {\r\n\r\n        ajaxFile[file].send().then(function (value) {  // jshint ignore:line\r\n            var fileName = nameFile[subfile];\r\n            if (fileName && fileName.indexOf('.html') > 0) {\r\n                content = getStringWithOutDescription(value.toString(), /(\\'|\\\")description/g);\r\n                content = getStringWithOutDescription(content.toString(), /(\\'|\\\")action-description/g);\r\n            }\r\n            content = value.indexOf('.html') > 0 ? content.replace(/@section (ActionDescription|Description){[^}]*}/g, '').replace(/&/g, '&amp;')\r\n                .replace(/\"/g, '&quot;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;') : value.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n\r\n            tabObj.push({\r\n                header: { text: nameFile[subfile] },\r\n                data: content,\r\n                content: nameFile[subfile]\r\n            });\r\n            subfile++;\r\n        });\r\n\r\n    }\r\n    sourceTabItems = tabObj;\r\n    var ajaxHTML = new ej.base.Ajax('src/' + control + '/' + sample + '.html', 'GET', true);\r\n    var p1 = ajaxHTML.send();\r\n    var p2 = loadScriptfile('src/' + control + '/' + sample + '.js');\r\n    var ajaxJs = new ej.base.Ajax('src/' + control + '/' + sample + '.js', 'GET', true);\r\n    sampleNameElement.innerHTML = node.name;\r\n    contentTab.selectedItem = 0;\r\n    breadCrumbComponent.innerHTML = node.name;\r\n    if (node.name !== subNode.category) {\r\n        breadCrumbSubCategory.innerHTML = subNode.category;\r\n        breadCrumbSubCategory.style.display = '';\r\n        breadCrumSeperator.style.display = '';\r\n    } else {\r\n        breadCrumbSubCategory.style.display = 'none';\r\n        breadCrumSeperator.style.display = 'none';\r\n    }\r\n    breadCrumbSample.innerHTML = subNode.name;\r\n    // for (var k = 0; k < 2; k++) {\r\n    //     var header = getSourceTabHeader(k);\r\n    //     if (header) {\r\n    //         header.innerHTML = sample + (k ? '.html' : '.js');\r\n    //     }\r\n    // }\r\n    var title = document.querySelector('title');\r\n    title.innerHTML = node.name + ' · ' + subNode.name + ' · Syncfusion JavaScript (ES5) UI Controls ';\r\n    // ajaxJs.send().then(function (value) {\r\n    //     document.querySelector('.js-source-content').innerHTML = value.toString().replace(/</g, '&lt;').replace(/\\>/g, '&gt;');\r\n    //     hljs.highlightBlock(document.querySelector('.js-source-content'));\r\n    // });\r\n    var plunk = new ej.base.Ajax('src/' + control + '/' + sample + '-stack.json', 'GET', true);\r\n    var p3 = plunk.send();\r\n    p3.then(function (result) {\r\n        document.getElementById('open-plnkr').disabled = false;\r\n        plunker(result);\r\n    });\r\n    Promise.all([\r\n        p1,\r\n        p2\r\n    ]).then(function (results) {\r\n        var htmlString = results[0].toString();\r\n        destroyControls();\r\n        currentControlID = controlID;\r\n        currentSampleID = sampleID;\r\n        currentControl = node.directory;\r\n        var curIndex = samplesAr.indexOf(location.hash);\r\n        var samLength = samplesAr.length - 1;\r\n        if (curIndex === samLength) {\r\n            toggleButtonState('next-sample', true);\r\n        } else {\r\n            toggleButtonState('next-sample', false);\r\n        }\r\n        if (curIndex === 0) {\r\n            toggleButtonState('prev-sample', true);\r\n        } else {\r\n            toggleButtonState('prev-sample', false);\r\n        }\r\n        ej.base.select('#control-content').classList.remove('error-content');\r\n        document.getElementById('control-content').innerHTML = htmlString;\r\n        var controlEle = document.querySelector('.control-section');\r\n        var controlString = controlEle.innerHTML;\r\n        controlEle.innerHTML = '';\r\n        controlEle.appendChild(ej.base.createElement('div', { className: 'control-wrapper', innerHTML: controlString }));\r\n        renderPropertyPane('#property');\r\n        renderDescription();\r\n        renderActionDescription();\r\n        var htmlCode = ej.base.createElement('div', { innerHTML: htmlString });\r\n        var description = htmlCode.querySelector('#description');\r\n        if (description) {\r\n            ej.base.detach(description);\r\n        }\r\n        var actionDesc = htmlCode.querySelector('#action-description');\r\n        if (actionDesc) {\r\n            ej.base.detach(actionDesc);\r\n        }\r\n        // var htmlCodeSnippet = htmlCode.innerHTML.replace(/&/g, '&amp;')\r\n        //     .replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        // document.querySelector('.html-source-content').innerHTML = htmlCodeSnippet;\r\n        // hljs.highlightBlock(document.querySelector('.html-source-content'));\r\n        getExecFunction(control + sample)();\r\n        window.navigateSample();\r\n        isExternalNavigation = defaultTree = false;\r\n        checkApiTableDataSource();\r\n        setPropertySectionHeight();\r\n        removeOverlay();\r\n        var mobilePropPane = ej.base.select('.sb-mobile-prop-pane .property-section');\r\n        if (mobilePropPane) {\r\n            ej.base.detach(mobilePropPane);\r\n        }\r\n        var propPanel = ej.base.select('#control-content .property-section');\r\n        if (isMobile) {\r\n            if (propPanel) {\r\n                ej.base.select('.sb-mobile-setting').classList.remove('sb-hide');\r\n                ej.base.select('.sb-mobile-prop-pane').appendChild(propPanel);\r\n            } else {\r\n                ej.base.select('.sb-mobile-setting').classList.add('sb-hide');\r\n            }\r\n        }\r\n    }).catch(function (reason) {\r\n        errorHandler(reason.message);\r\n    });\r\n}\r\n\r\nfunction removeOverlay() {\r\n    document.body.setAttribute('aria-busy', 'false');\r\n    sbContentOverlay.classList.add('sb-hide');\r\n    sbRightPane.classList.remove('sb-right-pane-overlay');\r\n    sbHeader.classList.remove('sb-right-pane-overlay');\r\n    mobNavOverlay(false);\r\n    if (!sbBodyOverlay.classList.contains('sb-hide')) {\r\n        sbBodyOverlay.classList.add('sb-hide');\r\n    }\r\n    if (!isMobile) {\r\n        sbRightPane.scrollTop = 0;\r\n    } else {\r\n        sbRightPane.scrollTop = 74;\r\n    }\r\n    if (cultureDropDown.value == \"ar\") {\r\n        changeRtl(true);\r\n    }\r\n\r\n}\r\n\r\nfunction sampleOverlay() {\r\n    document.body.setAttribute('aria-busy', 'true');\r\n    sbHeader.classList.add('sb-right-pane-overlay');\r\n    sbRightPane.classList.add('sb-right-pane-overlay');\r\n    mobNavOverlay(true);\r\n    sbContentOverlay.classList.remove('sb-hide');\r\n}\r\n\r\nfunction overlay() {\r\n    sbHeader.classList.add('sb-right-pane-overlay');\r\n    sbBodyOverlay.classList.remove('sb-hide');\r\n}\r\n\r\nfunction mobNavOverlay(isOverlay) {\r\n    if (ej.base.isDevice) {\r\n        var mobileFoorter = ej.base.select('.sb-mobilefooter');\r\n        if (isOverlay) {\r\n            mobileFoorter.classList.add('sb-right-pane-overlay');\r\n        } else {\r\n            mobileFoorter.classList.remove('sb-right-pane-overlay');\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkSampleLength(directory) {\r\n    var data = new ej.data.DataManager(samplesList);\r\n    var controls = data.executeLocal(new ej.data.Query().where('directory', 'equal', directory));\r\n    return controls[0].samples.length > 1;\r\n}\r\n\r\nfunction parseHash(newHash, oldHash) {\r\n    var newTheme = newHash.split('/')[0];\r\n    var control = newHash.split('/')[1];\r\n    if (newTheme !== selectedTheme && themeCollection.indexOf(newTheme) !== -1) {\r\n        location.reload();\r\n        crossroads.parse(newHash);\r\n    }\r\n    /* if (newHash.length && !ej.base.select('#' + control + '-common') && checkSampleLength(control)) {\r\n         var scriptElement = document.createElement('script');\r\n         scriptElement.src = 'src/' + control + '/common.js';\r\n         scriptElement.id = control + '-common';\r\n         scriptElement.type = 'text/javascript';\r\n         scriptElement.onload = function () {\r\n             crossroads.parse(newHash);\r\n         };\r\n         document.getElementsByTagName('head')[0].appendChild(scriptElement);\r\n     }*/\r\n\r\n    crossroads.parse(newHash);\r\n}\r\n\r\n// function getSourceTabHeader(index) {\r\n//     return document.querySelectorAll('.sb-source-code-section>.e-tab-header .e-tab-text')[index];\r\n// }\r\n\r\nfunction processDeviceDependables() {\r\n    if (ej.base.Browser.isDevice) {\r\n        ej.base.select('.sb-desktop-setting').classList.add('sb-hide');\r\n    } else {\r\n        ej.base.select('.sb-desktop-setting').classList.remove('sb-hide');\r\n    }\r\n}\r\n\r\nfunction checkTabHideStatus() {\r\n    if (!intialLoadCompleted) {\r\n        content.hideTab(1);\r\n        intialLoadCompleted = true;\r\n    }\r\n}\r\n\r\nfunction renderPropertyPane(ele) {\r\n    var contentEle = ej.base.select('#control-content');\r\n    var elem = contentEle.querySelector(ele);\r\n    var title;\r\n    if (!elem) {\r\n        return;\r\n    }\r\n    title = elem.getAttribute('title');\r\n    var parentEle = elem.parentElement;\r\n    elem = ej.base.detach(elem);\r\n    elem.classList.add('property-panel-table');\r\n    var parentPane = ej.base.createElement('div', {\r\n        className: 'property-panel-section',\r\n        innerHTML: \"<div class=\\\"property-panel-header\\\">\" + title + \"</div><div class=\\\"property-panel-content\\\"></div>\"\r\n    });\r\n    parentPane.children[1].appendChild(elem);\r\n    parentEle.appendChild(parentPane);\r\n}\r\n\r\nfunction renderDescription() {\r\n    var header;\r\n    var description = ej.base.select('#description', ej.base.select('#control-content'));\r\n    var descElement = ej.base.select('.description-section');\r\n    var iDescription = ej.base.select('#description', descElement);\r\n    if (iDescription) {\r\n        ej.base.detach(iDescription);\r\n    }\r\n    if (description) {\r\n        descElement.appendChild(description);\r\n    }\r\n}\r\n\r\nfunction renderActionDescription() {\r\n    var aDescription = ej.base.select('#action-description', ej.base.select('#control-content'));\r\n    var aDescElem = ej.base.select('.sb-action-description');\r\n    if (aDescription) {\r\n        aDescElem.innerHTML = '';\r\n        aDescElem.appendChild(aDescription);\r\n        aDescElem.style.display = '';\r\n    } else if (aDescElem) {\r\n        aDescElem.style.display = 'none';\r\n    }\r\n    var loadEle = document.getElementById('sb-content');\r\n     if (loadEle.ej2_instances[0])\r\n        loadEle.ej2_instances[0].tbObj.refreshOverflow();\r\n}\r\nfunction getStringWithOutDescription(code, descRegex) {\r\n    var lines = code.split('\\n');\r\n    var desStartLine = null;\r\n    var desEndLine = null;\r\n    var desInsideDivCnt = 0;\r\n    for (var i = 0; i < lines.length; i++) {\r\n        var curLine = lines[i];\r\n        if (desStartLine) {\r\n            if (/<div/g.test(curLine)) {\r\n                desInsideDivCnt = desInsideDivCnt + 1;\r\n            }\r\n            if (desInsideDivCnt && /<\\/div>/g.test(curLine)) {\r\n                desInsideDivCnt = desInsideDivCnt - 1;\r\n            } else if (!desEndLine && /<\\/div>/g.test(curLine)) {\r\n                desEndLine = i + 1;\r\n            }\r\n        }\r\n        if (descRegex.test(curLine)) {\r\n            desStartLine = i;\r\n        }\r\n    }\r\n    if (desEndLine && desStartLine) {\r\n        lines.splice(desStartLine, desEndLine - desStartLine);\r\n    }\r\n    return lines.join('\\n');\r\n}\r\n\r\nfunction loadJSON() {\r\n    var switchText = localStorage.getItem('ej2-switch') || 'mouse';\r\n    if (ej.base.Browser.isDevice || window.screen.width <= 850) {\r\n        switchText = 'touch';\r\n    }\r\n    setLeftPaneHeight();\r\n    if (isMobile) {\r\n        ej.base.select('#left-sidebar').classList.add('sb-hide');\r\n        ej.base.select('.sb-left-footer-links').appendChild(ej.base.select('.sb-footer-left'));\r\n        leftToggle.classList.remove('toggle-active');\r\n    }\r\n    /**\r\n     * Tab View\r\n     */\r\n    if (isTablet || (ej.base.Browser.isDevice && isPc)) {\r\n        leftToggle.classList.remove('toggle-active');\r\n        ej.base.select('.sb-right-pane').classList.add('control-fullview');\r\n    }\r\n\r\n    if (isTablet || ej.base.Browser.isDevice) {\r\n        ej.base.select('.sb-responsive-section').classList.add('sb-hide');\r\n    }\r\n\r\n    overlay();\r\n    changeMouseOrTouch(switchText);\r\n    localStorage.removeItem('ej2-switch');\r\n    ej.base.enableRipple(selectedTheme === 'material' || !selectedTheme);\r\n    loadTheme(selectedTheme);\r\n}\r\nloadJSON();\n\n//# sourceURL=webpack:///./src/common/index.js?");

/***/ })

/******/ })));