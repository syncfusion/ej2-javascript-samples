{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/grid/frozen-rows-columns/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\">\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody><tr>\n            <td>\n                <div>Frozen Rows </div>\n            </td>\n            <td>\n                <div>\n                    <input id=\"rows\" type=\"text\">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div>Frozen Columns </div>\n            </td>\n            <td>\n                <div>\n                    <input id=\"columns\" type=\"text\">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td></td>\n            <td>\n                <div>\n                    <button id=\"buttonSet\">Set</button>\n                </div>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Grid frozen rows and columns sample\r\n */\r\n\r\n    var data = new ej.data.DataManager(window.data).executeLocal(new ej.data.Query().take(50));\r\n    var grid = new ej.grids.Grid({\r\n        dataSource: data,\r\n        height: 410,\r\n        allowSelection: false,\r\n        enableHover: false,\r\n        allowSorting: true,\r\n        allowMultiSorting: false,\r\n        allowResizing: true,\r\n        frozenColumns: 1,\r\n        frozenRows: 2,\r\n        columns: [\r\n            { field: 'OrderID', headerText: 'Order ID', width: 120, textAlign: 'Right' },\r\n            { field: 'Freight', width: 125, format: 'C2' },\r\n            { field: 'CustomerID', headerText: 'Customer ID', width: 130 },\r\n            { field: 'CustomerName', headerText: 'Customer Name', width: 180 },\r\n            { field: 'OrderDate', headerText: 'Order Date', width: 150, format: 'yMd', textAlign: 'Right' },\r\n            { field: 'ShippedDate', headerText: 'Shipped Date', width: 180, format: 'yMd', textAlign: 'Right' },\r\n            { field: 'ShipName', headerText: 'Ship Name', width: 300 },\r\n            { field: 'ShipAddress', headerText: 'Ship Address', width: 270 },\r\n            { field: 'ShipCity', headerText: 'Ship City', width: 250 },\r\n            { field: 'ShipCountry', headerText: 'Ship Country', width: 250 }\r\n        ]\r\n    });\r\n    grid.appendTo('#Grid');\r\n    //Render NumericTextbox component with specific range for frozen rows.\r\n    var rows = new ej.inputs.NumericTextBox({\r\n        min: 0,\r\n        max: 5,\r\n        value: 2\r\n    });\r\n    rows.appendTo('#rows');\r\n    //Render NumericTextbox component with specific range for frozen columns.\r\n    var columns = new ej.inputs.NumericTextBox({\r\n        min: 1,\r\n        max: 2,\r\n        value: 1\r\n    });\r\n    columns.appendTo('#columns');\r\n    //Render Button component in properties panel.\r\n    var buttonSet = new ej.buttons.Button();\r\n    buttonSet.appendTo('#buttonSet');\r\n    if (ej.base.Browser.isDevice) {\r\n        columns.max = 1;\r\n        rows.max = 5;\r\n    }\r\n    //After clicking 'Set' button, the `frozenRows` and `frozenColumns` values will be updated in Grid.\r\n    document.getElementById('buttonSet').onclick = function () {\r\n        grid.frozenColumns = columns.value;\r\n        grid.frozenRows = rows.value;\r\n    };\r\n"}