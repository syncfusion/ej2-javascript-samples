{
    "name": "Rich Text Editor",
    "type": "update",
    "directory": "rich-text-editor",
    "category": "Editors",
    "ftName": "wysiwyg-rich-text-editor",
    "samples": [{
            "url": "tools",
            "name": "Overview",
            "type": "update",
            "description": "This demo describes basic and advanced features of the JS(ECMAScript 5) rich text editor control (WYSIWYG HTML Editor) with all its tools and functionalities.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "showCharCount", "actionBegin", "actionComplete", "maxLength", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "rich-text-editor",
            "name": "Default Functionalities",
            "description": "This demo shows how to render JavaScript (ECMAScript 5) rich text editor (WYSIWYG HTML editor) control with a minimum configuration setting.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "appendTo"] }
        },
        {
            "url": "image",
            "name": "Image",
            "description": "This demo explains how to insert images with a blob or base64 format, link to the images, image upload, rotate left/right, and more in JS (ECMAScript 5) Editor.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "quickToolbarSettings", "toolbarClick", "appendTo", "getRange"], "QuickToolbarSettings": ["image"] }
        },
        {
            "url": "inline",
            "name": "Inline",
            "description": "This demo shows inline HTML editor that is displayed when selecting the content or simply focusing on the content inside the JS (ECMAScript 5) Rich Text Editor.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "inlineMode", "toolbarSettings", "format", "fontFamily", "appendTo", "dataBind"], "InlineMode": ["enable", "onSelection"], "ToolbarSettings": ["items"], "Format": ["width"], "FontFamily": ["width"] }
        },
        {
            "url": "paste-cleanup",
            "name": "Paste from MS Word",
            "description": "This demo explains how to clean up HTML when pasting a content from Microsoft Word, Visual Studio, or a web page in JS (ECMAScript 5) HTML Editor.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "pasteCleanupSettings"], "pasteCleanupSettings": ["prompt", "plainText", "keepFormat", "deniedTags", "deniedAttrs", "allowedStyleProps"] }
        },
        {
            "url": "iframe",
            "name": "IFrame",
            "description": "This demo shows how to render a  JS (ECMAScript 5) rich text editor (iframe) that was designed by using the iframe element covering all tool functionalities.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "height", "iframeSettings", "toolbarSettings", "actionBegin", "actionComplete", "appendTo"], "IFrameSettings": ["enable"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "print",
            "name": "Print",
            "description": "This demo sample shows how to print the content of the JS(ECMAScript 5) rich text editor (HTML editor) with styles and formatting using the print module.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "print", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "ajax-load",
            "name": "Ajax Content",
            "description": "This demo shows how to load the content to the editor from external sources like external pages and files using the AJAX library in JS (ECMAScript 5) Editor.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "value", "appendTo"] }
        },
        {
            "url": "form-validation",
            "name": "Form Validation",
            "description": "This demo shows how to validate the content of the JS (ECMAScript 5) WYSIWYG editor using obtrusive validation  with the Form validation library.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "showCharCount", "maxLength", "placeholder", "appendTo"] }
        },
        {
            "url": "resize-editor",
            "name": "Resizable Editor",
            "description": "This demo explains how to render a resizable JS(ECMAScript 5) Editor that allows resizing an editor and viewing its content with an enlarging or shrunk scale.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "enableResize", "appendTo"] }
        },
        {
            "url": "api",
            "name": "API",
            "description": "This demo covers important APIs of the JS(ECMAScript 5) rich text editor such as HTML encoding, read-only, retrieve the selected content, and more.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "showCharCount", "maxLength", "appendTo", "readonly", "enabled", "enableHtmlEncode", "value", "getSelection", "selectAll"] }
        },
        {
            "url": "client-side-events",
            "name": "Events",
            "description": "This demo explains client-side events of JavaScript (ECMAScript 5) HTML Text Editor that is triggered on editing and formatting operations with an event tracer.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "created", "actionBegin", "actionComplete", "focus", "blur", "change", "toolbarClick", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "blog-posting",
            "name": "Use Case",
            "description": "The Rich Text Editor is used in most real-time applications. The Javascript (ECMAScript 5) rich text editor example shows how to design a forum application.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "placeholder", "value", "dataBind", "refresh", "appendTo"] }
        },
        {
            "url": "auto-save",
            "name": "Auto Save",
            "description": "This demo shows how to autosave the content of the editor with customized time intervals and retrieve the saved content in JS (ECMAScript 5) Rich Text Editor.",
            "category": "Rich Text Editor",
            "api": { "RichTextEditor": ["Inject", "placeholder", "saveInterval", "enablePersistence", "toolbarSettings", "appendTo"] }
        },
        {
            "url": "types",
            "name": "Type",
            "description": "This demo demonstrates different types and behaviors of a toolbar used in the JS (ECMAScript 5) HTML Editor such as expand/collapse, multirow, and floating.",
            "category": "Toolbar",
            "api": { "RichTextEditor": ["Inject", "floatingToolbarOffset", "toolbarSettings", "actionBegin", "actionComplete", "dataBind", "appendTo"], "ToolbarSettings": ["items", "type", "enableFloating"] }
        },
        {
            "url": "insert-emoticons",
            "name": "Insert Emoticons",
            "description": "This demo demonstrates how to insert emoticons into the rich content in JS (ECMAScript 5) WYSIWYG HTML Editor using a custom tool in the editor toolbar.",
            "category": "Custom Tool",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "value", "created", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "insert-special-characters",
            "name": "Insert Special Characters",
            "description": "The demo demonstrates how to add special characters or symbols into the rich content in JS (ECMAScript 5) Rich Text Editor using a custom toolbar command.",
            "category": "Custom Tool",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "value", "created", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "markdown-editor",
            "name": "Overview",
            "description": "This demo for Syncfusion JavaScript (ECMAScript 5) rich text editor control shows the markdown editing in the rich text editor with complete features.",
            "category": "Markdown",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "height", "created", "disableToolbarItem", "enableToolbarItem", "editorMode", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "markdown-editor-preview",
            "name": "Preview",
            "description": "This demo covers all supported features and functionalities of the JS (ECMAScript 5) Markdown editor, which  is another mode of the JavaScript Rich Text Editor.",
            "category": "Markdown",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "height", "created", "disableToolbarItem", "enableToolbarItem", "editorMode", "actionBegin", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "markdown-editor-custom-format",
            "name": "Custom Format",
            "description": "This demo shows how to convert markdown content (with the custom format) to valid HTML markup using Markdown-to-HTML of the markdown parser in JS(ECMAScript 5).",
            "category": "Markdown",
            "api": { "RichTextEditor": ["Inject", "toolbarSettings", "height", "created", "disableToolbarItem", "enableToolbarItem", "editorMode", "formatter", "appendTo"], "ToolbarSettings": ["items"] }
        },
        {
            "url": "tribute",
            "name": "Tribute JS",
            "description": "This demo shows how to integrate Mention library like Tribute JS  within the JS(ECMAScript 5) HTML editor to get the autocomplete popup with a suggestion list.",
            "category": "Third-parties Integration",
            "api": { "RichTextEditor": ["placeholder", "appendTo"] }
        }
    ]
}