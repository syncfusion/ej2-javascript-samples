{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"sliderwrap\">\n            <label class=\"userselect\">Currency Slider</label>\n            <div id=\"currency\"></div>\n        </div>\n        <div class=\"sliderwrap\">\n            <label class=\"userselect\">Kilometer Slider</label>\n            <div id=\"kilometer\"></div>\n        </div>\n        <div class=\"sliderwrap\">\n            <label class=\"userselect\">Time Slider</label>\n            <div id=\"time\"></div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .content-wrapper {\n        width: 40%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n    .sliderwrap {\n        margin-top: 40px;\n    }\n\n    .e-bigger .content-wrapper {\n        width: 80%;\n    }\n\n    .sliderwrap label {\n        padding-bottom: 26px;\n        font-size: 13px;\n        font-weight: 500;\n        margin-top: 15px;\n        text-align: left;\n        width: 100%;\n    }\n\n    .userselect {\n        -webkit-user-select: none;\n        /* Safari 3.1+ */\n        -moz-user-select: none;\n        /* Firefox 2+ */\n        -ms-user-select: none;\n        /* IE 10+ */\n        user-select: none;\n        /* Standard syntax */\n    }\n</style></div></body></html>","index.js":"{{ripple}}\n    // Initialize Slider component\n    var currencyObj = new ej.inputs.Slider({\n        // Set the initial range values for slider\n        value: [20, 80],\n        // Set slider minimum and maximum values\n        min: 0, max: 100,\n        // Initialize tooltip with placement and format\n        tooltip: {\n            placement: 'Before', isVisible: true,\n            // Formatting tooltip value in currency with 2-decimal specifier.\n            format: 'c2'\n        },\n        // Initialize ticks with placement, largestep, smallstep and format\n        ticks: {\n            placement: 'After', largeStep: 25, smallStep: 5, showSmallTicks: true,\n            // Formatting ticks value in currency with 3-decimal specifier.\n            format: 'c1'\n        },\n        // Set the type to render range slider\n        type: 'Range'\n    });\n    currencyObj.appendTo('#currency');\n\n    // Initialize Slider component\n    var kilometerObj = new ej.inputs.Slider({\n        // Set the initial range values for slider\n        value: [1100, 1850],\n        // Set slider minimum and maximum values\n        min: 900, max: 2100,\n        // Initialize tooltip with placement and format\n        tooltip: {\n            isVisible: true,\n            placement: 'Before',\n            /**\n             * Formatting tooltip value in numeric with 2-decimal specifier if the any decimal values occurred.\n             * Zeros will be filled if the values are not in 4-digits in the fractional part.\n             */\n            format: '00##.## km'\n        },\n        // Initialize ticks with placement, largestep, smallstep and format\n        ticks: {\n            placement: 'After',\n            largeStep: 400,\n            smallStep: 100,\n            showSmallTicks: true,\n            /**\n             * Formatting ticks value in numeric with 2-decimal specifier if the any decimal values occurred.\n             * Zeros will be filled if the values are not in 4-digits in the fractional part.\n             */\n            format: '00##.## km'\n        },\n        // Set the type to render range slider\n        type: 'Range'\n    });\n    kilometerObj.appendTo('#kilometer');\n\n    // Initialize Slider component\n    var timeObj = new ej.inputs.Slider({\n        // Set slider minimum and maximum values\n        // new Date(Year, Month, day, hours, minutes, seconds, millseconds)\n        min: new Date(2013, 6, 13, 11).getTime(), max: new Date(2013, 6, 13, 23).getTime(),\n        // 3600000 milliseconds = 1 Hour, 3600000 / 6 milliseconds = 10 Minutes\n        step: 3600000 / 6,\n        // Set the initial range values for slider\n        value: [new Date(2013, 6, 13, 12).getTime(), new Date(2013, 6, 13, 18).getTime()],\n        // Bind Tooltip change event for custom formatting\n        tooltipChange: tooltipChangeHandler,\n        // Initialize tooltip with placement\n        tooltip: {\n            placement: 'Before', isVisible: true\n        },\n        // Bind ticks event for custom formatting\n        renderingTicks: renderingTicksHandler,\n        // Initialize ticks with placement, largestep, smallstep\n        ticks: {\n            placement: 'After',\n            // 3 * 3600000 milliseconds = 3 Hour\n            largeStep: 3 * 3600000,\n            smallStep: 3600000, showSmallTicks: true\n        },\n        // Set the type to render range slider\n        type: 'Range'\n    });\n    timeObj.appendTo('#time');\n\n    function tooltipChangeHandler(args) {\n        // Splitting the range values from the tooltip using space into an array.\n        var totalMiliSeconds = args.text.split(' ');\n        // First part is the first handle value\n        var firstPart = totalMiliSeconds[0];\n        // Second part is the second handle value\n        var secondPart = totalMiliSeconds[2];\n        /**\n         * toLocaleTimeString is predefined javascript date function, which is used to\n         * customize the date in different format\n         */\n        var custom = { hour: '2-digit', minute: '2-digit' };\n        firstPart = new Date(Number(firstPart)).toLocaleTimeString('en-us', custom);\n        secondPart = new Date(Number(secondPart)).toLocaleTimeString('en-us', custom);\n        // Assigning our custom text to the tooltip value.\n        args.text = firstPart + ' - ' + secondPart;\n    }\n\n    function renderingTicksHandler(args) {\n        var totalMiliSeconds = Number(args.value);\n        /**\n         * toLocaleTimeString is predefined javascript date function, which is used to\n         * customize the date in different format\n         */\n        var custom = { hour: '2-digit', minute: '2-digit' };\n        // Assigning our custom text to the tick value.\n        args.text = new Date(totalMiliSeconds).toLocaleTimeString('en-us', custom);\n    }\n\n    if (document.getElementById('right-pane')) {\n        document.getElementById('right-pane').addEventListener('scroll', onScroll);\n    }\n\n    // Handler used to reposition the tooltip on page scroll\n    function onScroll() {\n        var slider = [currencyObj, kilometerObj, timeObj];\n        slider.forEach(function (slider) {\n            // Refreshing each slider tooltip object position\n            slider.refreshTooltip(slider.tooltipTarget);\n        });\n    }\n\n\n"}