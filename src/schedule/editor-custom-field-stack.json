{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/schedule/editor-custom-field/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Schedule\">\n        </div>\n    </div>\n</div>\n<style>\n    .custom-field-row {\n        margin-bottom: 20px;\n    }\n</style>\n\n\n</div></body></html>","index.js":"{{ripple}}\r\n    var data = new ej.base.extend([], window.eventsData, null, true);\r\n    var scheduleObj = new ej.schedule.Schedule({\r\n        width: '100%',\r\n        height: '650px',\r\n        selectedDate: new Date(2018, 1, 15),\r\n        eventSettings: {\r\n            dataSource: data\r\n        },\r\n        eventRendered: function (args) {\r\n            window.applyCategoryColor(args, scheduleObj.currentView);\r\n        },\r\n        popupOpen: function (args) {\r\n            if (args.type === 'Editor') {\r\n                // Create required custom elements in initial time\r\n                if (!args.element.querySelector('.custom-field-row')) {\r\n                    var row = new ej.base.createElement('div', { className: 'custom-field-row' });\r\n                    var formElement = args.element.querySelector('.e-schedule-form');\r\n                    formElement.firstChild.insertBefore(row, args.element.querySelector('.e-title-location-row'));\r\n                    var container = new ej.base.createElement('div', { className: 'custom-field-container' });\r\n                    var inputEle = new ej.base.createElement('input', {\r\n                        className: 'e-field', attrs: { name: 'EventType' }\r\n                    });\r\n                    container.appendChild(inputEle);\r\n                    row.appendChild(container);\r\n                    var drowDownList = new ej.dropdowns.DropDownList({\r\n                        dataSource: [\r\n                            { text: 'Public Event', value: 'public-event' },\r\n                            { text: 'Maintenance', value: 'maintenance' },\r\n                            { text: 'Commercial Event', value: 'commercial-event' },\r\n                            { text: 'Family Event', value: 'family-event' }\r\n                        ],\r\n                        fields: { text: 'text', value: 'value' },\r\n                        value: args.EventType,\r\n                        floatLabelType: 'Always', placeholder: 'Event Type'\r\n                    });\r\n                    drowDownList.appendTo(inputEle);\r\n                    inputEle.setAttribute('name', 'EventType');\r\n                }\r\n            }\r\n        }\r\n    });\r\n    scheduleObj.appendTo('#Schedule');\r\n"}