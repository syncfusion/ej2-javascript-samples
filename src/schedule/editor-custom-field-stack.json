{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/schedule/editor-custom-field/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Schedule\">\n        </div>\n    </div>\n</div>\n<style>\n    .custom-field-row {\n        margin-bottom: 20px;\n    }\n</style>\n\n\n</div></body></html>","index.js":"{{ripple}}\n    var data = new ej.base.extend([], window.eventsData, null, true);\n    var scheduleObj = new ej.schedule.Schedule({\n        width: '100%',\n        height: '650px',\n        selectedDate: new Date(2018, 1, 15),\n        eventSettings: {\n            dataSource: data\n        },\n        eventRendered: function (args) {\n            window.applyCategoryColor(args, scheduleObj.currentView);\n        },\n        popupOpen: function (args) {\n            if (args.type === 'Editor') {\n                // Create required custom elements in initial time\n                if (!args.element.querySelector('.custom-field-row')) {\n                    var row = new ej.base.createElement('div', { className: 'custom-field-row' });\n                    var formElement = args.element.querySelector('.e-schedule-form');\n                    formElement.firstChild.insertBefore(row, args.element.querySelector('.e-title-location-row'));\n                    var container = new ej.base.createElement('div', { className: 'custom-field-container' });\n                    var inputEle = new ej.base.createElement('input', {\n                        className: 'e-field', attrs: { name: 'EventType' }\n                    });\n                    container.appendChild(inputEle);\n                    row.appendChild(container);\n                    var drowDownList = new ej.dropdowns.DropDownList({\n                        dataSource: [\n                            { text: 'Public Event', value: 'public-event' },\n                            { text: 'Maintenance', value: 'maintenance' },\n                            { text: 'Commercial Event', value: 'commercial-event' },\n                            { text: 'Family Event', value: 'family-event' }\n                        ],\n                        fields: { text: 'text', value: 'value' },\n                        value: args.EventType,\n                        floatLabelType: 'Always', placeholder: 'Event Type'\n                    });\n                    drowDownList.appendTo(inputEle);\n                    inputEle.setAttribute('name', 'EventType');\n                }\n            }\n        }\n    });\n    scheduleObj.appendTo('#Schedule');\n"}