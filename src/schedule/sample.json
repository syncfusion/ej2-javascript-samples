{
    "name": "Scheduler",
    "directory": "schedule",
    "category": "Calendars",
    "type": "update",
    "dataSourcePath": "src/schedule/datasource.js",
    "ftName": "scheduler",
    "samples": [
        {
            "url": "default",
            "name": "Default Functionalities",
            "category": "Scheduler",
            "description": "This example for Essential JS2 Scheduler control shows how the flat Scheduler looks like with its default set of minimal configurations.",
            "api": {
                "Schedule": [
                    "height",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "local-data",
            "name": "Local Data",
            "category": "Data Binding",
            "description": "This example for Essential JS2 Scheduler control shows the way of binding an array of JavaScript objects (local JSON datasource).",
            "api": {
                "Schedule": [
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "remote-data",
            "name": "Remote Data",
            "category": "Data Binding",
            "description": "This example for Essential JS2 Scheduler control shows the way of binding remote services by using the DataManager.",
            "api": {
                "Schedule": [
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "calendar-integration",
            "name": "Sync Google Calendar",
            "category": "Data Binding",
            "description": "This example illustrates how to integrate the Google Calendar events into HTML5 JavaScript Scheduler.",
            "api": {
                "Schedule": [
                    "eventSettings",
                    "dataBinding",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "recurrence-events",
            "name": "Recurring Events",
            "category": "Appointments",
            "description": "This example for Essential JS2 Scheduler control shows the scheduler with recurring meetings handled on a regular pattern.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "currentView",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "block-events",
            "name": "Blocking Dates and Time",
            "category": "Appointments",
            "description": "This example demonstrates how to block specific days or time intervals on HTML5 JavaScript Scheduler.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "currentView",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "search-events",
            "name": "Search Events",
            "category": "Appointments",
            "type": "new",
            "description": "This example showcases how to search the events of HTML5 JavaScript Scheduler based on specific field criteria.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "currentView",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "timezone",
            "name": "Timezone",
            "category": "Appointments",
            "description": "This example for Essential JS2 Scheduler control shows how the events are displayed in different timings as per the selected timezone.",
            "api": {
                "Schedule": [
                    "timezone",
                    "selectedDate",
                    "eventSettings",
                    "eventRendered"
                ]
            }
        },
        {
            "url": "external-drag-drop",
            "name": "External Drag and Drop",
            "category": "Appointments",
            "description": "This example shows how to drag and drop the events from an external source into HTML5 JavaScript scheduler.",
            "api": {
                "Schedule": [
                    "currentView",
                    "eventSettings",
                    "resourceHeaderTemplate",
                    "cssClass",
                    "workHours",
                    "views",
                    "group",
                    "resources",
                    "actionBegin",
                    "drag"
                ]
            }
        },
        {
            "url": "virtual-scrolling",
            "name": "Virtual Scrolling ",
            "category": "Scrolling",
            "hideOnDevice": true,
            "description": "This example illustrates how to enable the virtual loading of resources and its events in JavaScript Scheduler.",
            "api": {
                "Schedule": [
                    "views",
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "views",
            "name": "Basic Views",
            "category": "Views",
            "description": "This example for Essential JS2 Scheduler control shows the usage of basic views such as Day, Week, Work Week and Month.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "timeline",
            "name": "Timeline Views",
            "category": "Views",
            "description": "This example for Essential JS2 Scheduler control shows how the timeline scheduler looks like with its default set of configurations.",
            "api": {
                "Schedule": [
                    "height",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "agenda",
            "name": "Agenda View",
            "category": "Views",
            "description": "This example for Essential JS2 Scheduler control shows the agenda view and the configurations available in it.",
            "api": {
                "Schedule": [
                    "agendaDaysCount",
                    "hideEmptyAgendaDays",
                    "currentView",
                    "views",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "month-agenda",
            "name": "Month Agenda View",
            "category": "Views",
            "description": "This example for Essential JS2 Scheduler control shows the layout of Month Agenda view and how it works.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "views-configuration",
            "name": "Individual View Settings",
            "category": "Views",
            "description": "This example for Essential JS2 Scheduler control shows how to customize each of the view with specific configurations.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "extended-views",
            "name": "View Intervals",
            "category": "Views",
            "description": "This example for Essential JS2 Scheduler control shows how to display n number of days, weeks and months on a single view.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "timeline-resources",
            "name": "Room Scheduler",
            "category": "Multiple Resources",
            "description": "This example for Essential JS2 Scheduler control shows how to design the room scheduling calendar and manage the events booked on a particular time interval.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "resourceHeaderTemplate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "resources",
            "name": "Fare Calendar",
            "category": "Multiple Resources",
            "description": "This example for Essential JS2 Scheduler control shows how to customize the scheduler to showcase it as an Airfare calendar.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "resource",
            "name": "Resources",
            "category": "Multiple Resources",
            "type": "new",
            "description": "This example depicts how to show or hide the resource events on JavaScript Scheduler based on the resource selection.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "group-editing",
            "name": "Shared Events",
            "category": "Multiple Resources",
            "description": "This example for Essential JS2 Scheduler control shows the usage of single event that are shared by multiple resources.",
            "api": {
                "Schedule": [
                    "resourceHeaderTemplate",
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "group-custom-work-days",
            "name": "Different Work Days",
            "category": "Multiple Resources",
            "description": "This example for Essential JS2 Scheduler control shows how to set different working days for each of the resources.",
            "api": {
                "Schedule": [
                    "resourceHeaderTemplate",
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "add-remove-resources",
            "name": "Show/Hide Resources",
            "category": "Multiple Resources",
            "description": "This example for Essential JS2 Scheduler control shows how to dynamically add or remove the resources to and from the scheduler layout.",
            "api": {
                "Schedule": [
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "adaptive-rows",
            "name": "Adaptive Rows",
            "category": "Multiple Resources",
            "type": "new",
            "description": "This example showcases how the work cells of Essential JS2 Scheduler auto adjusts its height based on the exceeding appointment count.",
            "api": {
                "Schedule": [
                    "enableAdaptiveRows",
                    "currentView",
                    "views",
                    "selectedDate",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "resource-grouping",
            "name": "Horizontal Grouping",
            "category": "Resource Grouping",
            "description": "This example for Essential JS2 Scheduler control shows how the calendars of multiple resources are grouped in default view layouts.",
            "api": {
                "Schedule": [
                    "resourceHeaderTemplate",
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "timeline-resource-grouping",
            "name": "Timeline Grouping",
            "category": "Resource Grouping",
            "description": "This example for Essential JS2 Scheduler control shows how the calendars of multiple resources are grouped in timeline view layouts.",
            "api": {
                "Schedule": [
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "group-by-date",
            "name": "Date-wise Grouping",
            "category": "Resource Grouping",
            "description": "This example demonstrates how the resources of Essential JS2 Scheduler control are grouped based on dates.",
            "api": {
                "Schedule": [
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "group-by-child",
            "name": "Hierarchical Grouping",
            "category": "Resource Grouping",
            "description": "This example for Essential JS2 Scheduler control shows how to group the child level resources against each of the parent level resources.",
            "api": {
                "Schedule": [
                    "startHour",
                    "endHour",
                    "group",
                    "resources",
                    "eventSettings"
                ]
            }
        },
        {
            "url": "cell-template",
            "name": "Cell",
            "category": "Templates",
            "description": "This example for Essential JS2 Scheduler control shows how to customize the background of the specific cells using cell template option.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "cellTemplate",
                    "views",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "date-header-template",
            "name": "Date Header",
            "category": "Templates",
            "description": "This example for Essential JS2 Scheduler control shows how to customize the date header cells using the template option.",
            "api": {
                "Schedule": [
                    "cssClass",
                    "dateHeaderTemplate",
                    "eventSettings",
                    "eventRendered",
                    "renderCell"
                ]
            }
        },
        {
            "url": "event-template",
            "name": "Events",
            "category": "Templates",
            "description": "This example for Essential JS2 Scheduler control shows how to customize the appearance of events using event template option.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "cellTemplate",
                    "views",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "tooltip",
            "name": "Tooltip",
            "category": "Templates",
            "description": "This example for Essential JS2 Scheduler control shows how to display tooltip over events as well as the way to customize it using template option.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "editor-validation",
            "name": "Field Validation",
            "category": "Editor Window",
            "description": "This example for Essential JS2 Scheduler control shows the way of adding default and custom validation rules to the editor fields of scheduler.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "editor-custom-field",
            "name": "Additional Fields",
            "category": "Editor Window",
            "description": "This example for Essential JS2 Scheduler control shows how to add additional fields to the default editor window.",
            "api": {
                "Schedule": [
                    "selectedDate",
                    "eventSettings",
                    "popupOpen"
                ]
            }
        },
        {
            "url": "editor-template",
            "name": "Editor Template",
            "category": "Editor Window",
            "description": "This example for Essential JS2 Scheduler control shows the way of customizing the default editor window with custom template design.",
            "api": {
                "Schedule": [
                    "editorTemplate",
                    "showQuickInfo",
                    "eventRendered",
                    "popupOpen",
                    "actionBegin"
                ]
            }
        },
        {
            "url": "header-rows",
            "name": "Header Rows",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control shows how to display the additional header rows on timeline view.",
            "api": {
                "Schedule": [
                    "height",
                    "eventSettings",
                    "selectedDate",
                    "headerRows"
                ]
            }
        },
        {
            "url": "time-scale",
            "name": "Timescale",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control shows how to customize the grid lines of scheduler with different duration and count",
            "api": {
                "Schedule": [
                    "height",
                    "width",
                    "views",
                    "timeScale"
                ]
            }
        },
        {
            "url": "context-menu",
            "name": "Context Menu",
            "category": "Customization",
            "description": "This example shows how to enable the context menu on HTML5 JavaScript Scheduler and perform the related actions using menu options.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "header-bar",
            "name": "Header Bar",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control shows the way of adding custom items onto the scheduler header bar.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "workHours",
                    "views",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "scroll-to",
            "name": "Scroll Time",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control shows the way of manually scrolling to specific time on scheduler.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "eventSettings",
                    "eventRendered",
                    "scrollTo"
                ]
            }
        },
        {
            "url": "work-days",
            "name": "Work Days",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control showcases how to set customized working days as well as first day of a week on scheduler.",
            "api": {
                "Schedule": [
                    "workDays",
                    "views",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "hide-weekend",
            "name": "Hide Non-Working Days",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control depicts the way to show or hide the non working days of a week.",
            "api": {
                "Schedule": [
                    "showWeekend"
                ]
            }
        },
        {
            "url": "work-hour",
            "name": "Work Hours",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control showcases how to set the work hour range on scheduler.",
            "api": {
                "Schedule": [
                    "workHours",
                    "views",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "start-end-hour",
            "name": "Day Hour Limit",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control depicts how to restrict the start and end hours on scheduler.",
            "api": {
                "Schedule": [
                    "startHour",
                    "endHour",
                    "workHours",
                    "eventRendered"
                ]
            }
        },
        {
            "url": "cell-dimension",
            "name": "Cell Dimension",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control shows how to set the width and height of the cells by overriding the default CSS classes.",
            "api": {
                "Schedule": [
                    "cssClass",
                    "showTimeIndicator",
                    "eventRendered",
                    "created",
                    "actionComplete"
                ]
            }
        },
        {
            "url": "read-only-events",
            "name": "Read-only Events",
            "category": "Customization",
            "description": "This example for Essential JS2 Scheduler control shows how to make specific events on the scheduler to be displayed in a read-only mode.",
            "api": {
                "Schedule": [
                    "eventSettings",
                    "eventRendered",
                    "eventClick",
                    "popupOpen",
                    "eventRendered"
                ]
            }
        },
        {
            "url": "excel-export",
            "name": "Excel Exporting",
            "category": "Exporting",
            "type": "new",
            "hideOnDevice": false,
            "description": "This example demonstrates how to export the Essential JS2 Scheduler events to the excel file format at client-side.",
            "api": {
                "Schedule": [
                    "height",
                    "eventSettings",
                    "selectedDate"
                ]
            }
        },
        {
            "url": "calendar-export-import",
            "name": "Export and Import ICS",
            "category": "Exporting",
            "type": "new",
            "description": "This example shows how to export the Scheduler events to a calendar file, and also how to import events from an .ics file into our Essential JS2 Scheduler.",
            "api": {
                "Schedule": [
                    "importICalendar",
                    "exportToICalendar"
                ]
            }
        },
        {
            "url": "recurrence-editor-generate-rule",
            "name": "Rule Generator",
            "category": "Recurrence Editor",
            "description": "This example for Essential JS2 Scheduler control showcases the recurrence rule generation based on the options selected from the recurrence editor."
        },
        {
            "url": "recurrence-editor-populate-rule",
            "name": "Populate Rule",
            "category": "Recurrence Editor",
            "description": "This example for Essential JS2 Scheduler control shows how to fill the recurrence editor fields with values based on the provided recurrence rule string."
        },
        {
            "url": "keyboard-interaction",
            "name": "Keyboard Interaction",
            "category": "Miscellaneous",
            "hideOnDevice": true,
            "description": "This example for Essential JS2 Scheduler control showcases the keyboard shortcuts available on scheduler.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "eventSettings",
                    "selectedDate",
                    "allowKeyboardInteraction"
                ]
            }
        },
        {
            "url": "events",
            "name": "Events",
            "category": "Miscellaneous",
            "description": "This example for Essential JS2 Scheduler control shows the client-side events that triggers on respective scheduler actions.",
            "api": {
                "Schedule": [
                    "width",
                    "height",
                    "eventSettings",
                    "eventRendered",
                    "created",
                    "actionBegin",
                    "actionComplete",
                    "actionFailure",
                    "cellClick",
                    "cellDoubleClick",
                    "destroyed",
                    "navigating",
                    "eventClick",
                    "popupOpen"
                ]
            }
        }
    ]
}