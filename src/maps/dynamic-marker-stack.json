{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/maps/dynamic-marker/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div id=\"container\"></div>\n    <div align=\"center\">\n            <p>\n                <i>\n                    </i></p><div align=\"center\"><i>\n                        <p id=\"content\" style=\"font-size: 16px;color:grey\">Click on the maps to add marker/navigation line</p>\n                    </i></div><i>\n                </i>\n            <p></p>\n        </div>\n</div>\n\n    \n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;display:inline-block\">Marker</div>\n                </td>\n                <td style=\"width: 50%;\">\n                    <div>\n                        <input type=\"checkbox\" id=\"marker\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;\">Line</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <div>\n                        <input type=\"checkbox\" name=\"high\" id=\"line\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px; \">Connecting line</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <div>\n                        <input type=\"checkbox\" id=\"connect\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 10px\"></tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\" class=\"property-text\">\n                    Marker type\n                </td>\n                <td style=\"width: 10%; margin-left:20px\">\n                    <select id=\"type\" style=\"width: 50px; height: 20px\">\n                        <option value=\"Image\">Image</option>\n                        <option value=\"Circle\">Circle</option>\n                        <option value=\"Diamond\">Diamond</option>\n                        <option value=\"Star\">Star</option>\n                        <option value=\"Triangle\">Triangle</option>\n                    </select>\n                </td>\n            </tr>\n            <tr style=\"height: 10px\"></tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;\">Width</div>\n                </td>\n                <td style=\"width: 10%\">\n                    <input type=\"text\" class=\"e-input\" value=\"1\" style=\"width:87px\" id=\"width\" disabled>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <div style=\"margin-left: 60%;\">\n                        <button id=\"togglebtn\" style=\"text-transform:none !important;width: 80px;margin-left: -55%;margin-top: -2px\">Clear</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<!-- custom code start-->\n<style>\n    .property-text {\n        font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\n        font-size: 13px;\n        font-weight: 400;\n    }\n    #width.e-input[disabled] {\n        border-bottom-color: inherit;\n        background-image: none;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\r\n * Dynamic marker\r\n */\r\n\r\nvar markerCheck = true;\r\nvar lineCheck;\r\nvar connectLineCheck;\r\nvar navigationLines = [];\r\nvar latitude = [];\r\nvar longitude = [];\r\n    var maps = new ej.maps.Maps({\r\n        zoomSettings: {\r\n            enable: true\r\n        },\r\n        layers: [\r\n            {\r\n                layerType: 'OSM'\r\n            },\r\n        ],\r\n\r\n        click: function (args) {\r\n            if (markerCheck) {\r\n                addMarker(args);\r\n            }\r\n            if (lineCheck && !connectLineCheck) {\r\n                addLine(args, widthCheck.value);\r\n            }\r\n            if (connectLineCheck) {\r\n                addLine(args, widthCheck.value, true);\r\n            }\r\n            if (markerCheck || lineCheck || connectLineCheck) {\r\n                maps.refresh();\r\n                if (togglebtn.disabled && (maps.layers[0].markerSettings.length ||\r\n                maps.layers[0].navigationLineSettings.length)) {\r\n                    togglebtn.disabled = false;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    maps.appendTo('#container');\r\n    var markerCheckBox= new ej.buttons.CheckBox(\r\n        {\r\n            change: function(e) {\r\n                markerCheck = e.checked;\r\n                markerShape.enabled = e.checked;\r\n            }, checked: true\r\n        },\r\n        '#marker');\r\n\r\n    var lineCheckBox = new ej.buttons.CheckBox(\r\n        {\r\n            change: function (e) {\r\n                lineCheck = e.checked;\r\n                if (e.checked) {\r\n                    connectlineCheckBox.disabled = false;\r\n                    connectlineCheckBox.checked = false;\r\n                    widthCheck.disabled = false;\r\n                } else {\r\n                    connectLineCheck = e.checked;\r\n                    emptySavedLinePositions();\r\n                    connectlineCheckBox.disabled = true;\r\n                    connectlineCheckBox.checked = false;\r\n                    widthCheck.disabled = true;\r\n                }\r\n            }\r\n        },\r\n        '#line');\r\n\r\n\r\n    var connectlineCheckBox = new ej.buttons.CheckBox(\r\n        {\r\n            disabled: true,\r\n            change: function (e) {\r\n                connectLineCheck = e.checked;\r\n                if (!e.checked) {\r\n                    emptySavedLinePositions();\r\n                }\r\n            }\r\n        },\r\n        '#connect');\r\n\r\n    var markerShape = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        placeholder: 'Select marker shape',\r\n        width: 87\r\n    });\r\n    markerShape.appendTo('#type');\r\n\r\n    var widthCheck= document.getElementById('width');\r\n\r\n    var togglebtn = new ej.buttons.Button({\r\n        cssClass: 'e-info',\r\n        isPrimary: true,\r\n        disabled: true\r\n    });\r\n    togglebtn.appendTo('#togglebtn');\r\n\r\n    document.getElementById('togglebtn').onclick = function () {\r\n        maps.layers[0].markerSettings = [];\r\n        maps.layers[0].navigationLineSettings = [];\r\n        navigationLines = [];\r\n        emptySavedLinePositions();\r\n        maps.refresh();\r\n        togglebtn.disabled = true;\r\n    };\r\n    var emptySavedLinePositions = function () {\r\n        latitude = [];\r\n        longitude = [];\r\n    };\r\n    var addMarker = function (args) {\r\n        if (args.latitude !== null && args.longitude !== null) {\r\n            var layerIndex = (args.target.indexOf('_LayerIndex_') !== -1) ?\r\n                parseFloat(args.target.split('_LayerIndex_')[1].split('_')[0]) : 0;\r\n            var marker;\r\n            var dynamicMarker = maps.layersCollection[layerIndex].markerSettings;\r\n            dynamicMarker.push(new ej.maps.MarkerSettings(maps, 'markerSettings', marker));\r\n            var markerIndex = dynamicMarker.length - 1;\r\n            dynamicMarker[markerIndex].visible = true;\r\n            dynamicMarker[markerIndex].dataSource = [\r\n                { latitude: args.latitude, longitude: args.longitude, name: 'dynamicmarker' }\r\n            ];\r\n            dynamicMarker[markerIndex].animationDuration = 0;\r\n            dynamicMarker[markerIndex].fill = '#DB4537';\r\n            dynamicMarker[markerIndex].shape = (markerShape.value !== 'Image') ? markerShape.value : 'Image';\r\n            dynamicMarker[markerIndex].height = (markerShape.value !== 'Image') ? 12 : 20;\r\n            dynamicMarker[markerIndex].width = (markerShape.value !== 'Image') ? 12 : 20;\r\n            dynamicMarker[markerIndex].imageUrl = (markerShape.value !== 'Image') ? '' : '//npmci.syncfusion.com/development/demos/src/maps/images/ballon.png';\r\n        }\r\n    };\r\n\r\n    var addLine = function (lineArgs, lineWidth, connectiveLine) {\r\n        if (lineArgs.latitude != null && lineArgs.longitude != null) {\r\n            latitude.push(lineArgs.latitude);\r\n            longitude.push(lineArgs.longitude);\r\n        }\r\n        if (latitude.length >= 2) {\r\n            navigationLines.push({\r\n                'visible': true,\r\n                'latitude': [latitude[(latitude.length - 2)], latitude[(latitude.length - 1)]],\r\n                'longitude': [longitude[(longitude.length - 2)], longitude[(longitude.length - 1)]],\r\n                'angle': 0,\r\n                'color': 'blue',\r\n                'width': (lineWidth > 5) ? 5 : (((5 >= lineWidth) && (lineWidth >= 1)) ? lineWidth : 1)\r\n            });\r\n            maps.layers[0].navigationLineSettings = navigationLines;\r\n            if (!connectiveLine) {\r\n                emptySavedLinePositions();\r\n            }\r\n        }\r\n    };\r\n"}