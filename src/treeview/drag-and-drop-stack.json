{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/treeview/drag-and-drop/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section custom-tree\">\n    <div class=\"col-lg-4 tree1-data\">\n        <h4>TreeView-1</h4>\n        <div class=\"content\">\n            <div id=\"tree1\"></div>\n        </div>\n    </div>\n    <div class=\"col-lg-4 tree2-data\">\n        <h4>TreeView-2</h4>\n        <div class=\"content\">\n            <div id=\"tree2\"></div>\n        </div>\n    </div>\n    <div class=\"col-lg-4 tree3-data\">\n        <h4>ListView</h4>\n        <div class=\"content\">\n            <div id=\"list\" class=\"e-droppable\"></div>\n        </div>\n    </div>\n    <div id=\"overlay\">\n    </div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}\r\n    // Render the first TreeView by mapping its fields property with data source properties\r\n    var tree1Obj = new ej.navigations.TreeView({\r\n        fields: { dataSource:  window.productTeam1, id: 'id', text: 'name', child: 'child' },\r\n        allowDragAndDrop: true,\r\n        nodeDragStop: onDragStop\r\n    });\r\n    // Render the second TreeView by mapping its fields property with data source properties\r\n    tree1Obj.appendTo('#tree1');\r\n    var tree2Obj =  new ej.navigations.TreeView({\r\n        fields: { dataSource:  window.productTeam2, id: 'id', text: 'name', child: 'child' },\r\n        allowDragAndDrop: true,\r\n        nodeDragStop: onDragStop\r\n    });\r\n    tree2Obj.appendTo('#tree2');\r\n    // Render the ListView with custom template\r\n    var listData = [];\r\n    var listObj = new ej.lists.ListView({\r\n        dataSource: [],\r\n        cssClass: 'custom-list',\r\n        template: '<div><span>${text}</span><span id=${iconId} class=${class}></span></div>',\r\n    });\r\n    listObj.appendTo('#list');\r\n    // Drop the dragged TreeView node into ListView\r\n    var id = 1;\r\n    function onDragStop(event) {\r\n        var targetEle = ej.base.closest(event.target, '.e-droppable');\r\n        targetEle = targetEle ? targetEle : event.target;\r\n        // Check the target as ListView or not\r\n            if (targetEle && targetEle.classList.contains('custom-list')) {\r\n                event.cancel = true;\r\n                var newData = [];\r\n                if (event.draggedNode.classList.contains('e-active')) {\r\n                    var selNodes = this.selectedNodes;\r\n                    for (var i = 0, len = selNodes.length; i < len; i++)    {\r\n                        var nodeEle = document.querySelector('[data-uid=\"' + selNodes[i] + '\"]').querySelector('.e-list-text');\r\n                        var nodeText = nodeEle.textContent;\r\n                        var newNode = { id: 'l' + id, text: nodeText, class: 'custom-delete', iconId: 'i' + id };\r\n                        id++;\r\n                        newData.push(newNode);\r\n                    }\r\n                }\r\n                else {\r\n                    var text = 'text';\r\n                    var nodeText1 = event.draggedNodeData[text];\r\n                    var newNode1 = { id: 'l' + id, text: nodeText1, class: 'custom-delete', iconId: 'i' + id };\r\n                    id++;\r\n                    newData.push(newNode1);\r\n                }\r\n                   // Add collection of node to ListView\r\n                listObj.addItem(newData, undefined);\r\n            }\r\n        }\r\n    // Add the custom action for delete icon in ListView\r\n    document.getElementById('list').addEventListener('mousedown', function (event) {\r\n        if (event.target.classList.contains('custom-delete')) {\r\n            var node = ej.base.closest(event.target, 'li');\r\n            listObj.removeItem(node);\r\n        }\r\n    });\r\n    document.getElementById('overlay').addEventListener('mousedown', function (event) {\r\n        document.getElementById('overlay').style.display = 'none';\r\n    });\r\n\r\n"}