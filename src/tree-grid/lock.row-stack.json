{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/development/demos/tree-grid/lock.row/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"TreeGrid\"></div>\n    </div>\n</div>\n\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody><tr style=\"height: 50px\">\n            <td>\n                <div>Disable Rows</div>\n            </td>\n            <td style=\"width: 30%;padding-right: 10px\">\n                <div id=\"columnddl\">\n                    <input type=\"text\" tabindex=\"1\" id=\"lockrows\">\n               </div>\n            </td>\n         </tr>\n    </tbody></table>\n</div>\n\n<style>\n    .material .disableRow .e-rowcell{\n        color: rgba(0, 0, 0, .38);\n    }\n</style>\n","index.js":"{{ripple}}\r\n    var treeGridObj = new ej.treegrid.TreeGrid({\r\n        dataSource: window.sampleData,\r\n        childMapping: 'subtasks',\r\n        treeColumnIndex: 1,\r\n        allowPaging: true,\r\n        pageSettings: { pageSize: 2, pageSizeMode: 'Root' },\r\n        editSettings: {\r\n            allowEditing: true,\r\n            mode: 'Row',\r\n            newRowPosition: 'Child'\r\n        },\r\n        toolbar: ['Edit', 'Update', 'Cancel'],\r\n        enableHover: false,\r\n        rowDataBound: function (args) {\r\n            var key = 'taskID';\r\n            if (dropDownColumns.value.indexOf(args.data[key]) !== -1) {\r\n                ej.base.addClass([args.row], 'disableRow');\r\n            }\r\n            else {\r\n                ej.base.removeClass([args.row], 'disableRow');\r\n            }\r\n        },\r\n        beginEdit: function (args) {\r\n            var key = 'taskID';\r\n            if (dropDownColumns.value.indexOf(args.rowData[key]) !== -1) {\r\n                args.cancel = true;\r\n            }\r\n        },\r\n        columns: [\r\n            {\r\n                field: 'taskID', headerText: 'Task ID', isPrimaryKey: true, textAlign: 'Right',\r\n                validationRules: { required: true, number: true }, width: 100\r\n            },\r\n            { field: 'taskName', headerText: 'Task Name', editType: 'stringedit', width: 220, validationRules: {required: true}   },\r\n            { field: 'startDate', headerText: 'Start Date', textAlign: 'Right', width: 130, editType: 'datepickeredit',\r\n              format: 'yMd', validationRules: { date: true }  },\r\n            {\r\n                field: 'duration', headerText: 'Duration', textAlign: 'Right', width: 100, editType: 'numericedit',\r\n                validationRules: { number: true, min: 0}, edit: { params: {  format: 'n'}}\r\n            }\r\n        ]\r\n    });\r\n    treeGridObj.appendTo('#TreeGrid');\r\n    ej.dropdowns.MultiSelect.Inject(ej.dropdowns.CheckBoxSelection);\r\n        var dropDownColumns = new ej.dropdowns.MultiSelect({\r\n            dataSource: window.lockRowDropDownData,\r\n            mode: 'CheckBox',\r\n            value: [2, 6],\r\n            width: '150px',\r\n            showDropDownIcon: true,\r\n            popupHeight: '350px',\r\n            select: function (e) {\r\n                treeGridObj.refresh();\r\n            },\r\n            removed: function (e) {\r\n                treeGridObj.refresh();\r\n            }\r\n        });\r\n        dropDownColumns.appendTo('#lockrows');\r\n"}