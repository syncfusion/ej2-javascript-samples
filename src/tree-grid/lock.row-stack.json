{"index.html":"<html><head><script src=\"//npmci.syncfusion.com/production/demos/tree-grid/lock.row/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"TreeGrid\"></div>\n    </div>\n</div>\n\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody><tr style=\"height: 50px\">\n            <td>\n                <div>Disable Rows</div>\n            </td>\n            <td style=\"width: 30%;padding-right: 10px\">\n                <div id=\"columnddl\">\n                    <input type=\"text\" tabindex=\"1\" id=\"lockrows\">\n               </div>\n            </td>\n         </tr>\n    </tbody></table>\n</div>\n\n<style>\n    .material .disableRow .e-rowcell{\n        color: rgba(0, 0, 0, .38);\n    }\n</style>\n","index.js":"{{ripple}}\n    var treeGridObj = new ej.treegrid.TreeGrid({\n        dataSource: window.sampleData,\n        childMapping: 'subtasks',\n        treeColumnIndex: 1,\n        allowPaging: true,\n        pageSettings: { pageSize: 2, pageSizeMode: 'Root' },\n        editSettings: {\n            allowEditing: true,\n            mode: 'Row',\n            newRowPosition: 'Child'\n        },\n        toolbar: ['Edit', 'Update', 'Cancel'],\n        enableHover: false,\n        rowDataBound: function (args) {\n            var key = 'taskID';\n            if (dropDownColumns.value.indexOf(args.data[key]) !== -1) {\n                ej.base.addClass([args.row], 'disableRow');\n            }\n            else {\n                ej.base.removeClass([args.row], 'disableRow');\n            }\n        },\n        beginEdit: function (args) {\n            var key = 'taskID';\n            if (dropDownColumns.value.indexOf(args.rowData[key]) !== -1) {\n                args.cancel = true;\n            }\n        },\n        columns: [\n            {\n                field: 'taskID', headerText: 'Task ID', isPrimaryKey: true, textAlign: 'Right',\n                validationRules: { required: true, number: true }, width: 100\n            },\n            { field: 'taskName', headerText: 'Task Name', editType: 'stringedit', width: 220, validationRules: {required: true}   },\n            { field: 'startDate', headerText: 'Start Date', textAlign: 'Right', width: 130, editType: 'datepickeredit',\n              format: 'yMd', validationRules: { date: true }  },\n            {\n                field: 'duration', headerText: 'Duration', textAlign: 'Right', width: 100, editType: 'numericedit',\n                validationRules: { number: true, min: 0}, edit: { params: {  format: 'n'}}\n            }\n        ]\n    });\n    treeGridObj.appendTo('#TreeGrid');\n    ej.dropdowns.MultiSelect.Inject(ej.dropdowns.CheckBoxSelection);\n        var dropDownColumns = new ej.dropdowns.MultiSelect({\n            dataSource: window.lockRowDropDownData,\n            mode: 'CheckBox',\n            value: [2, 6],\n            width: '150px',\n            showDropDownIcon: true,\n            popupHeight: '350px',\n            select: function (e) {\n                treeGridObj.refresh();\n            },\n            removed: function (e) {\n                treeGridObj.refresh();\n            }\n        });\n        dropDownColumns.appendTo('#lockrows');\n"}