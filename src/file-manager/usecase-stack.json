{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"container\" class=\"fileupload\">\n        <input type=\"file\" id=\"fileupload\" name=\"UploadFiles\">\n        <button id=\"openBtn\" class=\"dlgbtn\" type=\"button\">File Browser</button>\n    </div>\n    <div id=\"target\" class=\"control-section\">\n        <div id=\"dialog\">\n            <div id=\"filemanager\"></div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .fileupload {\n        max-width: 500px;\n        margin: auto;\n    }\n    #openBtn {\n        position: absolute;\n        top: 34px;\n        left: 43%;\n    }\n    #target {\n        height: 550px;\n    }\n    #dialog {\n        top: 20px !important;\n        max-height: 500px !important;\n    }\n    .fileupload .e-file-drop, .fileupload .e-css.e-btn {\n        display: none;\n    }\n\n</style></div></body></html>","index.js":"{{ripple}}/**\r\n * File Manager real time use case sample\r\n */\r\n\r\n    \r\n    // Initialize the Uploader component\r\n    var uploadObject = new ej.inputs.Uploader({});\r\n    uploadObject.appendTo('#fileupload');\r\n\r\n    // Initialize the Button component\r\n    var btnObj = new ej.buttons.Button({});\r\n    btnObj.appendTo('#openBtn');\r\n\r\n    // Initialize the Dialog component\r\n    var dialogObj = new ej.popups.Dialog({\r\n        header: 'Select a file',\r\n        showCloseIcon: true,\r\n        closeOnEscape: false,\r\n        width: '850px',\r\n        visible: false,\r\n        target: document.getElementById('target'),\r\n        animationSettings: { effect: 'None' },\r\n        open: dialogOpen,\r\n        close: dialogClose\r\n    });\r\n    dialogObj.appendTo('#dialog');\r\n\r\n    var hostUrl = 'https://ej2-aspcore-service.azurewebsites.net/';\r\n    var contextmenuItems = ['Open', '|', 'Cut', 'Copy', 'Delete', 'Rename', '|', 'Details'];\r\n\r\n    // Initialize the FileManager component\r\n    var filemanagerInstance = new ej.filemanager.FileManager({\r\n        ajaxSettings: {\r\n            url: hostUrl + 'api/FileManager/FileOperations',\r\n            getImageUrl: hostUrl + 'api/FileManager/GetImage',\r\n            uploadUrl: hostUrl + 'api/FileManager/Upload',\r\n            downloadUrl: hostUrl + 'api/FileManager/Download'\r\n        },\r\n        allowMultiSelection: false,\r\n        toolbarSettings: {\r\n            items: ['NewFolder', 'Upload', 'Delete', 'Cut', 'Copy', 'Rename', 'SortBy', 'Refresh', 'Selection', 'View', 'Details']},\r\n        contextMenuSettings: {\r\n            file: contextmenuItems,\r\n            folder: contextmenuItems\r\n        },\r\n        fileOpen : onFileOpen\r\n    });\r\n    filemanagerInstance.appendTo('#filemanager');\r\n\r\n    document.getElementById('openBtn').onclick = function() {\r\n        dialogObj.show();\r\n        dialogOpen();\r\n        filemanagerInstance.path = '/';\r\n        filemanagerInstance.selectedItems = [];\r\n        filemanagerInstance.refresh();\r\n    };\r\n\r\n    // 'Uploader' will be shown, if Dialog is closed\r\n    function dialogClose() {\r\n        document.getElementById('container').style.display = 'block';\r\n    }\r\n\r\n    // 'Uploader' will be hidden, if Dialog is opened\r\n    function dialogOpen() {\r\n        document.getElementById('container').style.display = 'none';\r\n    }\r\n\r\n    // File Manager's fileOpen event function\r\n    function onFileOpen(args) {\r\n        var file = args.fileDetails;\r\n        if (file.isFile) {\r\n            args.cancel = true;\r\n            if (file.size <= 0 ) { file.size = 10000; }\r\n            uploadObject.files = [{name: file.name, size: file.size, type: file.type }];\r\n            dialogObj.hide();\r\n        }\r\n    }\r\n"}