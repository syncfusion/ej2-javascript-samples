{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"tooltipContainer\"></div>\n</div>\n\n\n","index.js":"{{ripple}}/**\n * Linear Gauge Tooltip Sample\n */\nvar gauge;\n\n    gauge = new ej.lineargauge.LinearGauge({\n        container: {\n            width: 140,\n            border: {\n                width: 2,\n                color: '#a6a6a6'\n            }\n        },\n        tooltip: {\n            enable: true,\n        },\n        orientation: 'Horizontal',\n        axes: [\n            {\n                minimum: 0,\n                maximum: 10,\n                line: {\n                    offset: 140\n                },\n                majorTicks: {\n                    interval: 1\n                },\n                minorTicks: {\n                    interval: 0.2\n                },\n                labelStyle: {\n                    font: {\n                        color: '#000000'\n                    }\n                },\n                pointers: [{\n                    type: 'Bar',\n                    value: 5.4,\n                    offset: 15,\n                    color: '#ff66b3'\n                }],\n            },\n            {\n                opposedPosition: true,\n                minimum: 0,\n                maximum: 25,\n                line: {\n                    offset: -140,\n                },\n                labelStyle: {\n                    font: {\n                        color: '#000000'\n                    }\n                },\n                majorTicks: {\n                    interval: 1\n                },\n                minorTicks: {\n                    interval: 0.2\n                },\n                pointers: [{\n                    type: 'Bar',\n                    offset: -15,\n                    value: 16.5,\n                    color: '#4d94ff'\n                }]\n            }\n        ],\n        annotations: [\n            {\n                content: '<div id=\"first\"><h1 style=\"font-size:15px\">Inches</h1></div>',\n                axisIndex: 0,\n                axisValue: 5.4,\n                x: 35,\n                y: -58,\n                zIndex: '1'\n            },\n            {\n                content: '<div id=\"second\"><h1 style=\"font-size:15px\">Centimeters</h1></div>',\n                axisIndex: 1,\n                axisValue: 16.5,\n                x: 50,\n                y: 52,\n                zIndex: '1'\n            }\n        ],\n        axisLabelRender: labelRender,\n        tooltipRender: renderTooltip,\n        load: gaugeLoad,\n        loaded: gaugeLoaded,\n        resized: gaugeResized,\n    });\n    gauge.appendTo('#tooltipContainer');\n\nfunction renderTooltip(args) {\n    args.content = (args.axis.visibleRange.max === 25) ? args.content + ' cm' : args.content + ' in';\n}\nfunction labelRender(args) {\n    if (args.axis.visibleRange.min === args.value || args.axis.visibleRange.max === args.value) {\n        args.text = '';\n    }\n}\nfunction gaugeMobileSize() {\n    gauge.axes[1].majorTicks.interval = 2;\n    gauge.axes[1].minorTicks.interval = 1;\n    gauge.orientation = 'Vertical';\n    gauge.annotations[0].x = -57;\n    gauge.annotations[0].y = -30;\n    gauge.annotations[1].x = 50;\n    gauge.annotations[1].y = -45;\n}\nfunction gaugeDesktopSize() {\n    gauge.axes[1].majorTicks.interval = 1;\n    gauge.axes[1].minorTicks.interval = 0.5;\n    gauge.orientation = 'Horizontal';\n    gauge.annotations[0].x = 35;\n    gauge.annotations[0].y = -58;\n    gauge.annotations[1].x = 50;\n    gauge.annotations[1].y = 52;\n}\nfunction gaugeResized(args) {\n    if (args.currentSize.width < 500) {\n        gaugeMobileSize();\n    }\n    else {\n        gaugeDesktopSize();\n    }\n}\nfunction gaugeLoad(args) {\n    var selectedTheme = location.hash.split('/')[1];\n    selectedTheme = selectedTheme ? selectedTheme : 'Material';\n    args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n    var width = parseInt(((this.width, this.element.offsetWidth) || this.element.offsetWidth || 600), 10);\n    if (width < 500) {\n        gaugeMobileSize();\n    }\n    else {\n        gaugeDesktopSize();\n    }\n}\nfunction gaugeLoaded(args) {\n    if (document.getElementById('tooltipContainer')) {\n        if (gauge.availableSize.width < 500) {\n            document.getElementById('tooltipContainer_Annotation_0').style.transform = 'rotate(270deg)';\n            document.getElementById('tooltipContainer_Annotation_1').style.transform = 'rotate(270deg)';\n        }\n        else {\n            document.getElementById('tooltipContainer_Annotation_0').style.transform = '';\n            document.getElementById('tooltipContainer_Annotation_1').style.transform = '';\n        }\n    }\n}"}