{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\">\n        <div id=\"container1\" style=\"height:300px;\">\n        </div>\n    </div>\n    <div class=\"row\">\n        <div id=\"container2\" style=\"height:250px;\">\n        </div>\n    </div>\n    <div class=\"row\">\n        <div id=\"container3\" style=\"height:250px;\">\n        </div>\n    </div>\n</div>\n\n\n","index.js":"{{ripple}}/**\n * Thermometer linear gauge\n */\n\n    var gauge1 = new ej.lineargauge.LinearGauge(firstGauge());\n    gauge1.appendTo('#container1');\n    var gauge3 = new ej.lineargauge.LinearGauge(thirdGauge());\n    gauge3.appendTo('#container3');\n    var gauge2 = new ej.lineargauge.LinearGauge(secondGauge());\n    gauge2.appendTo('#container2');\n\nfunction firstGauge() {\n    var gauge1 = new ej.lineargauge.LinearGauge({\n        container: {\n            width: 30,\n            backgroundColor: '#e0e0e0',\n            border: {\n                width: 0\n            },\n            offset: 30\n        },\n\n        orientation: 'Horizontal',       \n        axes: [{\n            line: {\n                offset: 30\n            },\n            labelStyle: {\n                offset: 50\n            },\n            pointers: [{\n                value: 10,\n                placement: 'Near',\n                offset: -60,\n                height: 10,\n                width: 10,\n                markerType: 'Triangle'\n            }],\n            ranges: [\n                {\n                    start: 0,\n                    end: 10,\n                    startWidth: 30,\n                    endWidth: 30,\n                    color: '#30b32d'\n                }\n            ]\n        }],\n        annotations: [\n            {\n                content:\n                '<div id=\"title\" style=\"width:300px;\"> <img style=\"float:left\" src' + '=\"src/linear-gauge/images/exercise-tracking.svg\"/><p style=\"font-size:18px;color:#4285F4;float:left;margin-left:12px;' + 'margin-top:4px\">Exercise Tracking </p></div>',\n                axisIndex: 0,\n                axisValue: 0,\n                x: 150,\n                y: -180, zIndex: '1'\n            },\n            {\n                content: '<div id=\"running\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"//npmci.syncfusion.com/production/demos/src/linear-gauge' +\n                '/images/Running.svg\" /></span><p style=\"float:left;margin-left:10px;\">Running</p></div>',\n                axisIndex: 0,\n                axisValue: 0,\n                x: 50,\n                y: -130, zIndex: '1'\n            },\n            {\n                content: '<div id=\"pointerText\" style=\"width:60px;\"><p style=\"font-size:15px;\">10 MPH</p></div>',\n                axisIndex: 0,\n                axisValue: 10,\n                y: -65, zIndex: '1'\n            }\n        ]\n    });\n    return gauge1;\n}\nfunction secondGauge() {\n    var gauge1 = new ej.lineargauge.LinearGauge({\n        axes: [{\n            line: {\n                offset: 30\n            },\n            labelStyle: {\n                offset: 50\n            },\n            pointers: [{\n                value: 28,\n                height: 10,\n                width: 10,\n                placement: 'Near',\n                offset: -60,\n                markerType: 'Triangle'\n            }],\n            ranges: [\n                {\n                    start: 0,\n                    end: 28,\n                    startWidth: 30,\n                    endWidth: 30,\n                    color: '#30b32d'\n                }\n            ]\n        }],\n\n        orientation: 'Horizontal',\n        container: {\n            width: 30,\n            backgroundColor: '#e0e0e0',\n            border: {\n                width: 0\n            },\n            offset: -50\n        },\n        annotations: [{\n            content:\n            '<div id=\"cycle\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"//npmci.syncfusion.com/production/demos/src/linear-gauge' + '/images/Cycling.svg\" /></span><p style=\"float:left;margin-left:10px;\">Cycling</p></div>',\n            axisIndex: 0,\n            axisValue: 0,\n            x: 50,\n            y: -110, zIndex: '1'\n        },\n        {\n            content: '<div id=\"pointerText\" style=\"width:60px;\"><p style=\"font-size:15px;\">28 MPH</p></div>',\n            axisIndex: 0,\n            axisValue: 28,\n            y: -70, zIndex: '1'\n        }]\n    });\n    return gauge1;\n}\nfunction thirdGauge() {\n    var gauge3 = new ej.lineargauge.LinearGauge({\n\n        annotations: [{\n            content: '<div id=\"walk\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"//npmci.syncfusion.com/production/demos/src/' +\n            'linear-gauge/images/Walking.svg\" /></span><p style=\"float:left;margin-left:10px;\">Walking</p></div>',\n            axisIndex: 0,\n            axisValue: 0,\n            x: 50,\n            y: -120, zIndex: '1'\n        },\n        {\n            content: '<div id=\"pointerText\" style=\"width:100px;\"><p style=\"font-size:15px;\">2000 Steps</p></div>',\n            axisIndex: 0,\n            axisValue: 2.2,\n            y: -65, zIndex: '1'\n        }],\n        orientation: 'Horizontal',\n        container: {\n            width: 30,\n            backgroundColor: '#e0e0e0',\n            border: {\n                width: 0\n            },\n            offset: -90\n        },\n        axes: [{\n            maximum: 10,\n            line: {\n                offset: 30\n            },\n            labelStyle: {\n                format: '{value}k',\n                offset: 50\n            },\n            pointers: [{\n                value: 2,\n                height: 10,\n                width: 10,\n                placement: 'Near',\n                offset: -60,\n                markerType: 'Triangle'\n            }],\n            ranges: [\n                {\n                    start: 0,\n                    end: 2,\n                    startWidth: 30,\n                    endWidth: 30,\n                    color: '#30b32d'\n                }\n            ]\n        }]        \n    });\n    return gauge3;\n}"}