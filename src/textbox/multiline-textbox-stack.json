{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-8 control-section multiline\">\n    <div class=\"content-wrapper\">\n        <div class=\"multiline-row\">\n            <textarea id=\"default\" rows=\"2\" required></textarea>\n        </div>\n    </div>\n</div>  \n\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\" class=\"multiline-property\">\n        <tbody><tr>\n            <td class=\"left-side\">Float label type</td>\n            <td>\n                <select id=\"select\">\n                    <option value=\"Auto\">Auto</option>\n                    <option value=\"Never\">Never</option>\n                    <option value=\"Always\">Always</option>\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left-side\">Disabled</td>\n            <td><input type=\"checkbox\" id=\"enabled\"></td>\n        </tr>\n        <tr>\n            <td class=\"left-side\">Read only</td>\n            <td><input type=\"checkbox\" id=\"readonly\"></td>\n        </tr>\n        <tr>    \n            <td class=\"left-side\"> Rows</td>\n            <td><input id=\"rows\" maxlength=\"2\"></td>\n        </tr>\n\n    </tbody></table>\n</div>\n    \n    \n","index.js":"{{ripple}}/**\r\n *  Multiline TextBox sample\r\n */\r\n\r\n    var textareaObj = new ej.inputs.TextBox({\r\n        placeholder: 'Enter your address',\r\n        floatLabelType: 'Auto'\r\n    });\r\n    textareaObj.appendTo('#default');\r\n\r\n     // initialize check box component\r\n     var enabledCheckBox = new ej.buttons.CheckBox({\r\n        checked: false,\r\n        cssClass: 'multiline',\r\n        change: function (args) {\r\n            textareaObj.enabled = !args.checked;\r\n        }\r\n    });\r\n    enabledCheckBox.appendTo('#enabled');\r\n    var readonlyCheckBox = new ej.buttons.CheckBox({\r\n        checked: false,\r\n        cssClass: 'multiline',\r\n        change: function (args) {\r\n            textareaObj.readonly = args.checked;\r\n        }\r\n    });\r\n    readonlyCheckBox.appendTo('#readonly');\r\n    //initialize numeric textbox \r\n    var numeric = new ej.inputs.NumericTextBox({\r\n        format: '##',\r\n        min: 1,\r\n        max: 20,\r\n        value: 2,\r\n        change: function (args) {\r\n            textareaObj.addAttributes({rows: args.value});\r\n        }\r\n    });\r\n    numeric.appendTo('#rows');\r\n    // initialize dropdown component\r\n    var floatLabel = new ej.dropdowns.DropDownList({\r\n        // set the height of the popup element\r\n        popupHeight: '200px',\r\n        // bind the change event\r\n            change: function(args) {\r\n            switch (args.value) {\r\n                case 'Auto':\r\n                    textareaObj.floatLabelType = 'Auto';\r\n                    break;\r\n                case 'Always':\r\n                    textareaObj.floatLabelType = 'Always';\r\n                    break;\r\n                case 'Never':\r\n                    textareaObj.floatLabelType = 'Never';\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    floatLabel.appendTo('#select');\r\n\r\n"}