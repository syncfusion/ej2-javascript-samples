{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n        <div id=\"gauge\"></div>\n    </div>\n    </div>\n    <!-- Property Panel -->\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td>\n                    <div id=\"rangeStart\">Start Angle <span> &#xA0;&#xA0;&#xA0;270&#xB0;</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"start\" value=\"270\" min=\"0\" max=\"360\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n    \n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"rangeEnd\">End Angle<span> &#xA0;&#xA0;&#xA0;90&#xB0;</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"end\" value=\"90\" min=\"0\" max=\"360\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"radius1\">Radius <span> &#xA0;&#xA0;&#xA0;80</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"radius\" value=\"80\" min=\"0\" max=\"100\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 40%\">\n                    <div class=\"property-text\"> Radius based on angle</div>\n                </td>       \n                <td style=\"width: 40%;\">\n                    <div>\n                        <input type=\"checkbox\" id=\"angle\" checked>\n                    </div>\n                </td>\n        </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"center1\">Center X <span> &#xA0;&#xA0;&#xA0;50%</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"centerX\" value=\"50\" min=\"0\" max=\"100\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"center2\">Center Y <span> &#xA0;&#xA0;&#xA0;50%</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"centerY\" value=\"50\" min=\"0\" max=\"100\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div id=\"enablehide\"> Hide intersecting labels </div>\n                </td>\n                <td>\n                    <div style=\"padding-top: 0px\">\n                        <input type=\"checkbox\" id=\"hidelabel\" checked>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n    </div>\n    \n    \n","index.js":"{{ripple}}/** \r\n * Semi circular gauge sample.\r\n*/\r\n\r\n    var circulargauge = new ej.circulargauge.CircularGauge({\r\n\r\n        moveToCenter: false,\r\n        axes: [{\r\n            hideIntersectingLabel: true,\r\n            startAngle: 270, endAngle: 90,\r\n            lineStyle: { width: 0, color: '#0450C2' },\r\n            labelStyle: {\r\n                position: 'Outside', autoAngle: true,\r\n                font: { fontWeight: 'normal' }\r\n            }, majorTicks: {\r\n                position: 'Inside', width: 2, height: 12, interval: 4\r\n            }, minorTicks: {\r\n                position: 'Inside', height: 5, width: 1, interval: 2\r\n            },\r\n            radius: '80%', minimum: 0, maximum: 100,\r\n            pointers: [{\r\n                animation: { enable: false },\r\n                value: 30,\r\n                radius: '75%',\r\n                color: '#FF9200',\r\n                pointerWidth: 7,\r\n                cap: { radius: 8, color: '#565656', border: { width: 0 } },\r\n                needleTail: { length: '13%', color: '#FF9200' }\r\n            }]\r\n        }]\r\n    });\r\n    circulargauge.appendTo('#gauge');\r\n    // code for Property Panel\r\n    var opacity;\r\n    var highlightCheckBox = new ej.buttons.CheckBox({\r\n        change: opacity, checked: false,\r\n    }, '#angle');\r\n    highlightCheckBox.change = opacity = function (e) {\r\n        var centerX = document.getElementById('centerX');\r\n        var centerY = document.getElementById('centerY');\r\n        if (e.checked) {\r\n            circulargauge.centerX = null;\r\n            circulargauge.centerY = null;\r\n            circulargauge.moveToCenter = true;\r\n            centerX.disabled = true;\r\n            centerY.disabled = true;\r\n        }\r\n        else {\r\n            circulargauge.centerX = centerX.value + '%';\r\n            circulargauge.centerY = centerY.value + '%';\r\n            centerX.disabled = false;\r\n            centerY.disabled = false;\r\n            circulargauge.moveToCenter = false;\r\n        }\r\n        circulargauge.refresh();\r\n    };\r\n    document.getElementById('start').onpointermove = document.getElementById('start').ontouchmove =\r\n        document.getElementById('start').onchange = function () {\r\n            var min = parseInt(document.getElementById('start').value, 10);\r\n            document.getElementById('rangeStart').innerHTML = 'Start Angle <span> &nbsp;&nbsp;&nbsp;' + min + '°';\r\n            circulargauge.axes[0].startAngle = min;\r\n            circulargauge.refresh();\r\n        };\r\n    document.getElementById('end').onpointermove = document.getElementById('end').ontouchmove =\r\n        document.getElementById('end').onchange = function () {\r\n            var max = parseInt(document.getElementById('end').value, 10);\r\n            document.getElementById('rangeEnd').innerHTML = 'End Angle <span> &nbsp;&nbsp;&nbsp;' + max + '°';\r\n            circulargauge.axes[0].endAngle = max;\r\n            circulargauge.refresh();\r\n        };\r\n    document.getElementById('radius').onpointermove = document.getElementById('radius').ontouchmove =\r\n        document.getElementById('radius').onchange = function () {\r\n            var max = parseInt(document.getElementById('radius').value, 10);\r\n            document.getElementById('radius1').innerHTML = 'Radius <span> &nbsp;&nbsp;&nbsp;' + max + '%';\r\n            circulargauge.axes[0].radius = '' + max + '%';\r\n            circulargauge.refresh();\r\n        };\r\n    document.getElementById('centerX').onpointermove = document.getElementById('centerX').ontouchmove =\r\n        document.getElementById('centerX').onchange = function () {\r\n            if (!highlightCheckBox.checked) {\r\n                var max = parseInt(document.getElementById('centerX').value, 10);\r\n                document.getElementById('center1').innerHTML = 'Center X <span> &nbsp;&nbsp;&nbsp;' + max + '%';\r\n                circulargauge.centerX = '' + max + '%';\r\n                circulargauge.refresh();\r\n            }\r\n        };\r\n    document.getElementById('centerY').onpointermove = document.getElementById('centerY').ontouchmove =\r\n        document.getElementById('centerY').onchange = function () {\r\n            if (!highlightCheckBox.checked) {\r\n                var max = parseInt(document.getElementById('centerY').value, 10);\r\n                document.getElementById('center2').innerHTML = 'Center Y <span> &nbsp;&nbsp;&nbsp;' + max + '%';\r\n                circulargauge.centerY = '' + max + '%';\r\n                circulargauge.refresh();\r\n            }\r\n        };\r\n        var intersectionChanage;\r\n        var labelIntersectionCheckBox = new ej.buttons.CheckBox({\r\n            change: intersectionChanage, checked: true,\r\n        }, '#hidelabel');\r\n        labelIntersectionCheckBox.change = opacity = function (e) {\r\n            circulargauge.axes[0].hideIntersectingLabel = e.checked;\r\n            circulargauge.refresh();\r\n        };\r\n\r\n"}