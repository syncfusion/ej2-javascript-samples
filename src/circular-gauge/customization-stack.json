{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"cutomization-container\" style=\"display: block\"></div>\n            <div id=\"cutomization-container1\" style=\"display: none\"></div>\n        </div>\n    </div>\n    <!-- Property Panel -->\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td>\n                    <img id=\"random\" src=\"//npmci.syncfusion.com/development/demos/src/circular-gauge/images/gauge-1.png\" alt=\"Customized gauge 1\" style=\"margin-left:25px;margin-top:10px;\">\n                    <div id=\"random_line\" style=\"display:block;left: 0px;background: #ff4081;padding-top: 0px;height: 2px !important;width: 85px;margin: 2px 2px 2px 17px;\"></div>\n                </td>\n                <td>\n                    <img id=\"usage\" src=\"//npmci.syncfusion.com/development/demos/src/circular-gauge/images/gauge-2.png\" alt=\"Customized gauge 2\" style=\"margin-left:25px;margin-top:10px;\">\n                    <div id=\"usage_line\" style=\"display:none;left: 0px;background: #ff4081;padding-top: 0px;height: 2px !important;width: 85px;margin: 2px 2px 2px 17px;\"></div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"currentPointerValue\">Current Value <span> &#xA0;&#xA0;&#xA0;1800</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"currentValue\" value=\"1800\" min=\"1000\" max=\"2000\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"rangebarColor\">RangeBar Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"barColor\" class=\"form-control\"> \n                            <option value=\"#FFDD00\" selected=\"true\">#FFDD00</option>\n                            <option value=\"#00bdae\">#00bdae</option>\n                            <option value=\"#FF2680\">#FF2680</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"range\">Range Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"rangeColor\" class=\"form-control\"> \n                            <option value=\"#E0E0E0\" selected=\"true\">#E0E0E0</option>\n                            <option value=\"#7bb4eb\">#7bb4eb</option>\n                            <option value=\"#ea7a57\">#ea7a57</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"pointColor\">Pointer Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"pointerColor\" class=\"form-control\"> \n                            <option value=\"#424242\" selected=\"true\">#424242</option>\n                            <option value=\"#6f6fe2\">#6f6fe2</option>\n                            <option value=\"#9e480e\">#9e480e</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Sample for customization of gauge\r\n */\r\nfunction customGauge1() {\r\n    var customGauge1 = new ej.circulargauge.CircularGauge({\r\n        centerY: '70%',\r\n\r\n        axes: [{\r\n            annotations: [{\r\n                content: '<div style=\"color:#666666;font-size:35px;\">1800</div>',\r\n                angle: 0,\r\n                radius: '110%', zIndex: 1\r\n            }],\r\n            lineStyle: { width: 0 },\r\n            startAngle: 300, endAngle: 60,\r\n            radius: '80%',\r\n            labelStyle: { font: { size: '0px' } },\r\n            majorTicks: { width: 0 },\r\n            minorTicks: { height: 0 },\r\n            minimum: 999, maximum: 2000,\r\n            ranges: [{\r\n                start: 1000, end: 2000,\r\n                radius: '90%',\r\n                startWidth: 30, endWidth: 30,\r\n                color: '#E0E0E0'\r\n            }],\r\n            pointers: [{\r\n                type: 'RangeBar',\r\n                value: 1800, radius: '90%',\r\n                color: '#FFDD00', animation: { duration: 0 },\r\n                pointerWidth: 30\r\n            }, {\r\n                radius: '90%', value: 1800,\r\n                color: '#424242',\r\n                animation: { duration: 0 },\r\n                pointerWidth: 9,\r\n                cap: { radius: 10, color: '#424242', border: { width: 0 } }\r\n            }]\r\n        }]\r\n    });\r\n    return customGauge1;\r\n}\r\nfunction customGauge2() {\r\n    var customGauge2 = new ej.circulargauge.CircularGauge({\r\n        axes: [{\r\n            annotations: [{\r\n                content: '<div style=\"color:#666666;font-size:35px;\">50.5GB</div>',\r\n                angle: 180, radius: '0%', zIndex: 1\r\n            }, {\r\n                content: '<div style=\"color:#757575;font-size:15px;\">Used</div>',\r\n                angle: 180, radius: '25%',\r\n                textStyle: {\r\n                    fontFamily: 'Roboto',\r\n                    color: '#9E9E9E',\r\n                    fontStyle: 'Bold',\r\n                    fontWeight: 'Regular',\r\n                    size: '14px'\r\n                }, zIndex: 1\r\n            }],\r\n            lineStyle: { width: 0 },\r\n            startAngle: 180, endAngle: 180,\r\n            radius: '80%',\r\n            labelStyle: { font: { size: '0px' } },\r\n            majorTicks: { width: 0 },\r\n            minorTicks: { height: 0 },\r\n            minimum: 0, maximum: 100,\r\n            ranges: [{\r\n                start: 0, end: 100,\r\n                radius: '80%', startWidth: 30,\r\n                endWidth: 30, color: '#E0E0E0'\r\n            }],\r\n            pointers: [{\r\n                type: 'RangeBar',\r\n                value: 50.5, radius: '80%',\r\n                color: '#FF2680', animation: { duration: 0 },\r\n                pointerWidth: 30\r\n            }]\r\n        }],\r\n\r\n    });\r\n    return customGauge2;\r\n}\r\n\r\n\r\n    var random = new ej.circulargauge.CircularGauge(customGauge1());\r\n    random.appendTo('#cutomization-container');\r\n    var usage = new ej.circulargauge.CircularGauge(customGauge2());\r\n    usage.appendTo('#cutomization-container1');\r\n    var gauge = random;\r\n    var isUsage = false;\r\n    var barColor;\r\n    var rangeColor;\r\n    var pointerColor;\r\n    barColor = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        width: 120,\r\n        change: function () {\r\n            gauge.axes[0].pointers[0].color = barColor.value.toString();\r\n            gauge.refresh();\r\n        }\r\n    });\r\n    barColor.appendTo('#barColor');\r\n    rangeColor = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        width: 120,\r\n        change: function () {\r\n            gauge.axes[0].ranges[0].color = rangeColor.value.toString();\r\n            gauge.refresh();\r\n        }\r\n    });\r\n    rangeColor.appendTo('#rangeColor');\r\n    pointerColor = new ej.dropdowns.DropDownList({\r\n        index: 0,\r\n        width: 120,\r\n        change: function () {\r\n            var color = pointerColor.value.toString();\r\n            if (!isUsage) {\r\n                gauge.axes[0].pointers[1].color = color;\r\n                gauge.axes[0].pointers[1].cap.border.color = color;\r\n                gauge.axes[0].pointers[1].cap.color = color;\r\n            }\r\n            gauge.refresh();\r\n        }\r\n    });\r\n    pointerColor.appendTo('#pointerColor');\r\n    // Code for Property panel\r\n    document.getElementById('usage').onclick = function () {\r\n         document.getElementById('cutomization-container').style.display = 'none';\r\n         document.getElementById('cutomization-container1').style.display = 'block';\r\n        gauge = usage;\r\n        isUsage = true;\r\n        var element = document.getElementById('currentValue');\r\n        element.min = '0.5';\r\n        element.max = '100';\r\n        element.value = usage.axes[0].pointers[0].value.toString();\r\n        document.getElementById('currentPointerValue').innerHTML =\r\n            'Current Value <span> &nbsp;&nbsp;&nbsp;' + usage.axes[0].pointers[0].value + '</span>';\r\n        barColor.value = usage.axes[0].pointers[0].color;\r\n        rangeColor.value = usage.axes[0].ranges[0].color;\r\n        pointerColor.enabled = false;\r\n        var pointElement = document.getElementById('pointColor');\r\n        pointElement.className = 'e-disabled';\r\n        var currentElement = document.getElementById('usage');\r\n        var existElement = document.getElementById('random');\r\n        var currentLine = document.getElementById('usage_line');\r\n        var exisLine = document.getElementById('random_line');\r\n        currentLine.style.display = 'block';\r\n        exisLine.style.display = 'none';\r\n    };\r\n    document.getElementById('random').onclick = function () {\r\n        if (usage.element) {\r\n             document.getElementById('cutomization-container1').style.display = 'none';\r\n             document.getElementById('cutomization-container').style.display = 'block';\r\n            gauge = random;\r\n            isUsage = false;\r\n            var currentElement = document.getElementById('random');\r\n            var existElement = document.getElementById('usage');\r\n            var exisLine = document.getElementById('usage_line');\r\n            var currentLine = document.getElementById('random_line');\r\n            currentLine.style.display = 'block';\r\n            exisLine.style.display = 'none';\r\n            var element = document.getElementById('currentValue');\r\n            var pointElement = document.getElementById('pointColor');\r\n            pointElement.className = 'e-enabled';\r\n            pointerColor.enabled = true;\r\n            element.min = '1000';\r\n            element.max = '2000';\r\n            element.value = random.axes[0].pointers[0].value.toString();\r\n            document.getElementById('currentPointerValue').innerHTML = 'Current Value <span> &nbsp;&nbsp;&nbsp;' +\r\n            random.axes[0].pointers[0].value + '</span>';\r\n            barColor.value = random.axes[0].pointers[0].color;\r\n            rangeColor.value = random.axes[0].ranges[0].color;\r\n            pointerColor.value = random.axes[0].pointers[1].color;\r\n        }\r\n        \r\n    };\r\n    document.getElementById('currentValue').onpointermove = document.getElementById('currentValue').ontouchmove =\r\n        document.getElementById('currentValue').onchange = function () {\r\n            var value = +document.getElementById('currentValue').value;\r\n            if (isUsage) {\r\n                gauge.setPointerValue(0, 0, value);\r\n            }\r\n            else {\r\n                gauge.setPointerValue(0, 0, value);\r\n                gauge.setPointerValue(0, 1, value);\r\n            }\r\n            gauge.setAnnotationValue(0, 0, '<div style=\"color:#666666;font-size:35px;\">' + value + (isUsage ? 'GB' : '') + '</div>');\r\n            document.getElementById('currentPointerValue').innerHTML = 'Current Value <span> &nbsp;&nbsp;&nbsp;' + value + '</span>';\r\n        };\r\n\r\n    var selectedTheme = location.hash.split('/')[1];\r\n    var color;\r\n    if (selectedTheme === 'bootstrap') {\r\n        color = '#a16ee5';\r\n    }\r\n    else if (selectedTheme === 'fabric') {\r\n        color = '#1783FF';\r\n    }\r\n    else {\r\n        color = '#ff4081';\r\n    }\r\n    var exisLine = document.getElementById('usage_line');\r\n    var currentLine = document.getElementById('random_line');\r\n    exisLine.style.background = color;\r\n    currentLine.style.background = color;\r\n"}