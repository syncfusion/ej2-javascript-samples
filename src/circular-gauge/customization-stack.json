{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"cutomization-container\"></div>\n        </div>\n    </div>\n    <!-- Property Panel -->\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td>\n                    <img id=\"random\" src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/gauge-1.png\" style=\"margin-left:25px;margin-top:10px;\">\n                    <div id=\"random_line\" style=\"display:block;left: 0px;background: #ff4081;padding-top: 0px;height: 2px !important;width: 85px;margin: 2px 2px 2px 17px;\"></div>\n                </td>\n                <td>\n                    <img id=\"usage\" src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/gauge-2.png\" style=\"margin-left:25px;margin-top:10px;\">\n                    <div id=\"usage_line\" style=\"display:none;left: 0px;background: #ff4081;padding-top: 0px;height: 2px !important;width: 85px;margin: 2px 2px 2px 17px;\"></div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"currentPointerValue\">Current Value <span> &#xA0;&#xA0;&#xA0;1800</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"currentValue\" value=\"1800\" min=\"1000\" max=\"2000\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"rangebarColor\">RangeBar Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"barColor\" class=\"form-control\"> \n                            <option value=\"#FFDD00\" selected=\"true\">#FFDD00</option>\n                            <option value=\"#00bdae\">#00bdae</option>\n                            <option value=\"#FF2680\">#FF2680</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"range\">Range Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"rangeColor\" class=\"form-control\"> \n                            <option value=\"#E0E0E0\" selected=\"true\">#E0E0E0</option>\n                            <option value=\"#7bb4eb\">#7bb4eb</option>\n                            <option value=\"#ea7a57\">#ea7a57</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"pointColor\">Pointer Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"pointerColor\" class=\"form-control\"> \n                            <option value=\"#424242\" selected=\"true\">#424242</option>\n                            <option value=\"#6f6fe2\">#6f6fe2</option>\n                            <option value=\"#9e480e\">#9e480e</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Sample for customization of gauge\n */\nfunction customGauge1() {\n    var customGauge1 = new ej.circulargauge.CircularGauge({\n        centerY: '70%',\n\n        axes: [{\n            annotations: [{\n                content: '<div style=\"color:#666666;font-size:35px;\">1800</div>',\n                angle: 0,\n                radius: '110%', zIndex: 1\n            }],\n            lineStyle: { width: 0 },\n            startAngle: 300, endAngle: 60,\n            radius: '80%',\n            labelStyle: { font: { size: '0px' } },\n            majorTicks: { width: 0 },\n            minorTicks: { height: 0 },\n            minimum: 999, maximum: 2000,\n            ranges: [{\n                start: 1000, end: 2000,\n                radius: '90%',\n                startWidth: 30, endWidth: 30,\n                color: '#E0E0E0'\n            }],\n            pointers: [{\n                type: 'RangeBar',\n                value: 1800, radius: '90%',\n                color: '#FFDD00', animation: { duration: 0 },\n                pointerWidth: 30\n            }, {\n                radius: '90%', value: 1800,\n                color: '#424242',\n                animation: { duration: 0 },\n                pointerWidth: 9,\n                cap: { radius: 10, color: '#424242', border: { width: 0 } }\n            }]\n        }]\n    });\n    return customGauge1;\n}\nfunction customGauge2() {\n    var customGauge2 = new ej.circulargauge.CircularGauge({\n        axes: [{\n            annotations: [{\n                content: '<div style=\"color:#666666;font-size:35px;\">50.5GB</div>',\n                angle: 180, radius: '0%', zIndex: 1\n            }, {\n                content: '<div style=\"color:#757575;font-size:15px;\">Used</div>',\n                angle: 180, radius: '25%',\n                textStyle: {\n                    fontFamily: 'Roboto',\n                    color: '#9E9E9E',\n                    fontStyle: 'Bold',\n                    fontWeight: 'Regular',\n                    size: '14px'\n                }, zIndex: 1\n            }],\n            lineStyle: { width: 0 },\n            startAngle: 180, endAngle: 180,\n            radius: '80%',\n            labelStyle: { font: { size: '0px' } },\n            majorTicks: { width: 0 },\n            minorTicks: { height: 0 },\n            minimum: 0, maximum: 100,\n            ranges: [{\n                start: 0, end: 100,\n                radius: '80%', startWidth: 30,\n                endWidth: 30, color: '#E0E0E0'\n            }],\n            pointers: [{\n                type: 'RangeBar',\n                value: 50.5, radius: '80%',\n                color: '#FF2680', animation: { duration: 0 },\n                pointerWidth: 30\n            }]\n        }],\n\n    });\n    return customGauge2;\n}\n\n\n    var random = new ej.circulargauge.CircularGauge(customGauge1());\n    random.appendTo('#cutomization-container');\n    var usage = new ej.circulargauge.CircularGauge(customGauge2());\n    var gauge = random;\n    var isUsage = false;\n    var barColor;\n    var rangeColor;\n    var pointerColor;\n    barColor = new ej.dropdowns.DropDownList({\n        index: 0,\n        width: 120,\n        change: function () {\n            gauge.axes[0].pointers[0].color = barColor.value.toString();\n            gauge.refresh();\n        }\n    });\n    barColor.appendTo('#barColor');\n    rangeColor = new ej.dropdowns.DropDownList({\n        index: 0,\n        width: 120,\n        change: function () {\n            gauge.axes[0].ranges[0].color = rangeColor.value.toString();\n            gauge.refresh();\n        }\n    });\n    rangeColor.appendTo('#rangeColor');\n    pointerColor = new ej.dropdowns.DropDownList({\n        index: 0,\n        width: 120,\n        change: function () {\n            var color = pointerColor.value.toString();\n            if (!isUsage) {\n                gauge.axes[0].pointers[1].color = color;\n                gauge.axes[0].pointers[1].cap.border.color = color;\n                gauge.axes[0].pointers[1].cap.color = color;\n            }\n            gauge.refresh();\n        }\n    });\n    pointerColor.appendTo('#pointerColor');\n    // Code for Property panel\n    document.getElementById('usage').onclick = function () {\n        random.destroy();\n        usage.appendTo('#cutomization-container');\n        gauge = usage;\n        isUsage = true;\n        var element = document.getElementById('currentValue');\n        element.min = '0.5';\n        element.max = '100';\n        element.value = usage.axes[0].pointers[0].value.toString();\n        document.getElementById('currentPointerValue').innerHTML =\n            'Current Value <span> &nbsp;&nbsp;&nbsp;' + usage.axes[0].pointers[0].value + '</span>';\n        barColor.value = usage.axes[0].pointers[0].color;\n        rangeColor.value = usage.axes[0].ranges[0].color;\n        pointerColor.enabled = false;\n        var pointElement = document.getElementById('pointColor');\n        pointElement.className = 'e-disabled';\n        var currentElement = document.getElementById('usage');\n        var existElement = document.getElementById('random');\n        var currentLine = document.getElementById('usage_line');\n        var exisLine = document.getElementById('random_line');\n        currentLine.style.display = 'block';\n        exisLine.style.display = 'none';\n    };\n    document.getElementById('random').onclick = function () {\n        if (usage.element) {\n            usage.destroy();\n            random.appendTo('#cutomization-container');\n            gauge = random;\n            isUsage = false;\n            var currentElement = document.getElementById('random');\n            var existElement = document.getElementById('usage');\n            var exisLine = document.getElementById('usage_line');\n            var currentLine = document.getElementById('random_line');\n            currentLine.style.display = 'block';\n            exisLine.style.display = 'none';\n            var element = document.getElementById('currentValue');\n            var pointElement = document.getElementById('pointColor');\n            pointElement.className = 'e-enabled';\n            pointerColor.enabled = true;\n            element.min = '1000';\n            element.max = '2000';\n            element.value = random.axes[0].pointers[0].value.toString();\n            document.getElementById('currentPointerValue').innerHTML = 'Current Value <span> &nbsp;&nbsp;&nbsp;' +\n            random.axes[0].pointers[0].value + '</span>';\n            barColor.value = random.axes[0].pointers[0].color;\n            rangeColor.value = random.axes[0].ranges[0].color;\n            pointerColor.value = random.axes[0].pointers[1].color;\n        }\n        \n    };\n    document.getElementById('currentValue').onpointermove = document.getElementById('currentValue').ontouchmove =\n        document.getElementById('currentValue').onchange = function () {\n            var value = +document.getElementById('currentValue').value;\n            if (isUsage) {\n                gauge.setPointerValue(0, 0, value);\n            }\n            else {\n                gauge.setPointerValue(0, 0, value);\n                gauge.setPointerValue(0, 1, value);\n            }\n            gauge.setAnnotationValue(0, 0, '<div style=\"color:#666666;font-size:35px;\">' + value + (isUsage ? 'GB' : '') + '</div>');\n            document.getElementById('currentPointerValue').innerHTML = 'Current Value <span> &nbsp;&nbsp;&nbsp;' + value + '</span>';\n        };\n\n    var selectedTheme = location.hash.split('/')[1];\n    var color;\n    if (selectedTheme === 'bootstrap') {\n        color = '#a16ee5';\n    }\n    else if (selectedTheme === 'fabric') {\n        color = '#1783FF';\n    }\n    else {\n        color = '#ff4081';\n    }\n    var exisLine = document.getElementById('usage_line');\n    var currentLine = document.getElementById('random_line');\n    exisLine.style.background = color;\n    currentLine.style.background = color;\n"}