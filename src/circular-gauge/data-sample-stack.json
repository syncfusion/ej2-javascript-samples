{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <div id=\"container1\" style=\"height:250px;\">\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <div id=\"container2\" style=\"height:250px;\">\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <div id=\"container3\" style=\"height:250px;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <div id=\"container5\">\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<script id=\"germany\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/positive.png\" />\n        <div class='des'>\n            <div style=\"color:#424242;font-size:20px;font-family:Roboto\">${pointers[0].value}%</div>\n        </div>\n    </div>\n</script>\n<script id=\"usa\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/positive.png\" />\n        <div class='des'>\n            <div style=\"color:#424242;font-size:20px;font-family:Roboto\">${pointers[0].value}%</div>\n        </div>\n    </div>\n</script>\n<script id=\"uk\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/negative.png\" />\n        <div class='des'>\n            <div style=\"color:#424242;font-size:20px;font-family:Roboto\">${pointers[0].value}%</div>\n        </div>\n    </div>\n</script>\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Sample for data sample\n */\n\n    var orderData = [\n        {\n            'Country': 'Germany',\n            'Sales': 500,\n            'Target': 400,\n            'vsTarget': 300\n        }, {\n            'Country': 'USA',\n            'Sales': 1000,\n            'Target': 600,\n            'vsTarget': 360\n        }, {\n            'Country': 'UK',\n            'Sales': 600,\n            'Target': 700,\n            'vsTarget': -100\n        }\n    ];\n    function dataSampleGauge1() {\n        var dataSampleGauge1 = new ej.circulargauge.CircularGauge({\n\n            axes: [{\n                startAngle: 230,\n                endAngle: 130,\n                majorTicks: { width: 0 },\n                lineStyle: { width: 0 },\n                minorTicks: { width: 0 },\n                labelStyle: { font: { size: '0' } },\n                annotations: [{\n                    content: '#germany',\n                    angle: 180, zIndex: 1,\n                    radius: '30%'\n                }, {\n                    content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">Germany</div>',\n                    angle: 180, zIndex: 1,\n                    radius: '65%'\n                }],\n                ranges: [{\n                    start: 0, end: 50,\n                    startWidth: 15, endWidth: 15,\n                    color: '#EC121C'\n                }, {\n                    start: 50, end: 100,\n                    startWidth: 15, endWidth: 15,\n                    color: '#45EA0C'\n                }],\n                pointers: [{\n                    value: 75, radius: '60%',\n                    animation: { enable: false },\n                    color: '#777777', pointerWidth: 5,\n                    cap: {\n                        radius: 6,\n                        border: { width: 0 },\n                        color: '#777777'\n                    },\n                    needleTail: {\n                        length: '25%',\n                        color: '#777777'\n                    }\n                }]\n            }]\n        });\n        return dataSampleGauge1;\n    }\n    function dataSampleGauge2() {\n        var dataSampleGauge2 = new ej.circulargauge.CircularGauge({\n\n            axes: [{\n                annotations: [{\n                    content: '#usa',\n                    angle: 180, zIndex: 1,\n                    radius: '30%'\n                }, {\n                    content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">USA</div>',\n                    angle: 180, zIndex: 1,\n                    radius: '65%'\n                }],\n                startAngle: 230,\n                endAngle: 130,\n                majorTicks: { width: 0 },\n                lineStyle: { width: 0 },\n                minorTicks: { width: 0 },\n                labelStyle: { font: { size: '0' } },\n                ranges: [{\n                    start: 0, end: 50,\n                    startWidth: 15, endWidth: 15,\n                    color: '#EC121C'\n                }, {\n                    start: 50, end: 100,\n                    startWidth: 15, endWidth: 15,\n                    color: '#45EA0C'\n                }],\n                pointers: [{\n                    value: 60, radius: '60%',\n                    animation: { enable: false },\n                    color: '#777777', pointerWidth: 5,\n                    cap: {\n                        radius: 6,\n                        border: { width: 0 },\n                        color: '#777777'\n                    },\n                    needleTail: {\n                        length: '25%',\n                        color: '#777777'\n                    }\n                }]\n            }]\n        });\n        return dataSampleGauge2;\n    }\n    function dataSampleGauge3() {\n        var dataSampleGauge3 = new ej.circulargauge.CircularGauge({\n\n            axes: [{\n                annotations: [{\n                    content: '#uk',\n                    angle: 180, zIndex: 1,\n                    radius: '30%'\n                }, {\n                    content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">UK</div>',\n                    angle: 180, zIndex: 1,\n                    radius: '65%'\n                }],\n                startAngle: 230,\n                minorTicks: { width: 0 },\n                labelStyle: { font: { size: '0' } },\n                endAngle: 130,\n                majorTicks: { width: 0 },\n                lineStyle: { width: 0 },\n                ranges: [{\n                    start: 0, end: 50,\n                    startWidth: 15, endWidth: 15,\n                    color: '#EC121C'\n                }, {\n                    start: 50, end: 100,\n                    startWidth: 15, endWidth: 15,\n                    color: '#45EA0C'\n                }],\n                pointers: [{\n                    value: 25, radius: '60%',\n                    animation: { enable: false },\n                    color: '#777777', pointerWidth: 5,\n                    cap: {\n                        radius: 6,\n                        border: { width: 0 },\n                        color: '#777777'\n                    },\n                    needleTail: {\n                        length: '25%',\n                        color: '#777777'\n                    }\n                }]\n            }]\n        });\n        return dataSampleGauge3;\n    }\n    var germany = new ej.circulargauge.CircularGauge(dataSampleGauge1(), '#container1');\n    var usa = new ej.circulargauge.CircularGauge(dataSampleGauge2(), '#container2');\n    var uk = new ej.circulargauge.CircularGauge(dataSampleGauge3(), '#container3');\n    var data = new ej.data.DataManager(orderData).executeLocal(new ej.data.Query().take(15));\n    var grid = new ej.grids.Grid({\n        dataSource: data,\n        columns: [\n            { field: 'Country', headerText: 'Country', width: 80 },\n            { field: 'Sales', headerText: 'Sales $', width: 80 },\n            { field: 'Target', headerText: 'Target $', width: 80 },\n            { field: 'vsTarget', headerText: 'vs Target', width: 80 }\n        ]\n    });\n    grid.appendTo('#container5');\n    this.toolTipInterval1 = setInterval(function () {\n        if (document.getElementById('container5')) {\n            var value1 = Math.round(Math.random() * (90 - 55) + 55);\n            var value2 = Math.round(Math.random() * (75 - 60) + 60);\n            var value3 = Math.round(Math.random() * (40 - 10) + 10);\n            var gridData1 = 4 * value1;\n            var gridData2 = 6 * value2;\n            var gridData3 = 7 * value3;\n            var orderData_1 = [\n                {\n                    'Country': 'Germany',\n                    'Sales': 500,\n                    'Target': 400,\n                    'vsTarget': gridData1\n                }, {\n                    'Country': 'USA',\n                    'Sales': 1000,\n                    'Target': 600,\n                    'vsTarget': gridData2\n                }, {\n                    'Country': 'UK',\n                    'Sales': 600,\n                    'Target': 700,\n                    'vsTarget': -gridData3\n                }\n            ];\n            var data_1 = new ej.data.DataManager(orderData_1).executeLocal(new ej.data.Query().take(3));\n            grid.dataSource = data_1;\n            grid.refresh();\n            germany.axes[0].pointers[0].animation.enable = true;\n            usa.axes[0].pointers[0].animation.enable = true;\n            uk.axes[0].pointers[0].animation.enable = true;\n            germany.setPointerValue(0, 0, value1);\n            usa.setPointerValue(0, 0, value2);\n            uk.setPointerValue(0, 0, value3);\n            germany.setAnnotationValue(0, 0, '#germany');\n            usa.setAnnotationValue(0, 0, '#usa');\n            uk.setAnnotationValue(0, 0, '#uk');\n        }\n        else {\n            clearInterval(this.toolTipInterval1);\n        }\n    }, 2000);\n"}