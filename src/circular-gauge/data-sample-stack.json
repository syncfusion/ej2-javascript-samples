{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <div id=\"container1\" style=\"height:250px;\">\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <div id=\"container2\" style=\"height:250px;\">\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <div id=\"container3\" style=\"height:250px;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <div id=\"container5\">\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<script id=\"germany\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/development/demos/src/circular-gauge/images/positive.png\" alt=\"Postive value for Germany\"/>\n        <div class='des'>\n            <div style=\"color:#424242;font-size:20px;font-family:Roboto\">${pointers[0].value}%</div>\n        </div>\n    </div>\n</script>\n<script id=\"usa\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/development/demos/src/circular-gauge/images/positive.png\" alt=\"Postive value for USA\"/>\n        <div class='des'>\n            <div style=\"color:#424242;font-size:20px;font-family:Roboto\">${pointers[0].value}%</div>\n        </div>\n    </div>\n</script>\n<script id=\"uk\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/development/demos/src/circular-gauge/images/negative.png\" alt=\"Negative value for UK\"/>\n        <div class='des'>\n            <div style=\"color:#424242;font-size:20px;font-family:Roboto\">${pointers[0].value}%</div>\n        </div>\n    </div>\n</script>\n\n</div></body></html>","index.js":"{{ripple}}/**\r\n * Sample for data sample\r\n */\r\n\r\n    var orderData = [\r\n        {\r\n            'Country': 'Germany',\r\n            'Sales': 500,\r\n            'Target': 400,\r\n            'vsTarget': 300\r\n        }, {\r\n            'Country': 'USA',\r\n            'Sales': 1000,\r\n            'Target': 600,\r\n            'vsTarget': 360\r\n        }, {\r\n            'Country': 'UK',\r\n            'Sales': 600,\r\n            'Target': 700,\r\n            'vsTarget': -100\r\n        }\r\n    ];\r\n    function dataSampleGauge1() {\r\n        var dataSampleGauge1 = new ej.circulargauge.CircularGauge({\r\n\r\n            axes: [{\r\n                startAngle: 230,\r\n                endAngle: 130,\r\n                majorTicks: { width: 0 },\r\n                lineStyle: { width: 0 },\r\n                minorTicks: { width: 0 },\r\n                labelStyle: { font: { size: '0' } },\r\n                annotations: [{\r\n                    content: '#germany',\r\n                    angle: 180, zIndex: 1,\r\n                    radius: '30%'\r\n                }, {\r\n                    content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">Germany</div>',\r\n                    angle: 180, zIndex: 1,\r\n                    radius: '65%'\r\n                }],\r\n                ranges: [{\r\n                    start: 0, end: 50,\r\n                    startWidth: 15, endWidth: 15,\r\n                    color: '#EC121C'\r\n                }, {\r\n                    start: 50, end: 100,\r\n                    startWidth: 15, endWidth: 15,\r\n                    color: '#45EA0C'\r\n                }],\r\n                pointers: [{\r\n                    value: 75, radius: '60%',\r\n                    animation: { enable: false },\r\n                    color: '#777777', pointerWidth: 5,\r\n                    cap: {\r\n                        radius: 6,\r\n                        border: { width: 0 },\r\n                        color: '#777777'\r\n                    },\r\n                    needleTail: {\r\n                        length: '25%',\r\n                        color: '#777777'\r\n                    }\r\n                }]\r\n            }]\r\n        });\r\n        return dataSampleGauge1;\r\n    }\r\n    function dataSampleGauge2() {\r\n        var dataSampleGauge2 = new ej.circulargauge.CircularGauge({\r\n\r\n            axes: [{\r\n                annotations: [{\r\n                    content: '#usa',\r\n                    angle: 180, zIndex: 1,\r\n                    radius: '30%'\r\n                }, {\r\n                    content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">USA</div>',\r\n                    angle: 180, zIndex: 1,\r\n                    radius: '65%'\r\n                }],\r\n                startAngle: 230,\r\n                endAngle: 130,\r\n                majorTicks: { width: 0 },\r\n                lineStyle: { width: 0 },\r\n                minorTicks: { width: 0 },\r\n                labelStyle: { font: { size: '0' } },\r\n                ranges: [{\r\n                    start: 0, end: 50,\r\n                    startWidth: 15, endWidth: 15,\r\n                    color: '#EC121C'\r\n                }, {\r\n                    start: 50, end: 100,\r\n                    startWidth: 15, endWidth: 15,\r\n                    color: '#45EA0C'\r\n                }],\r\n                pointers: [{\r\n                    value: 60, radius: '60%',\r\n                    animation: { enable: false },\r\n                    color: '#777777', pointerWidth: 5,\r\n                    cap: {\r\n                        radius: 6,\r\n                        border: { width: 0 },\r\n                        color: '#777777'\r\n                    },\r\n                    needleTail: {\r\n                        length: '25%',\r\n                        color: '#777777'\r\n                    }\r\n                }]\r\n            }]\r\n        });\r\n        return dataSampleGauge2;\r\n    }\r\n    function dataSampleGauge3() {\r\n        var dataSampleGauge3 = new ej.circulargauge.CircularGauge({\r\n\r\n            axes: [{\r\n                annotations: [{\r\n                    content: '#uk',\r\n                    angle: 180, zIndex: 1,\r\n                    radius: '30%'\r\n                }, {\r\n                    content: '<div style=\"color:#9E9E9E;font-size:16px;font-family:Roboto\">UK</div>',\r\n                    angle: 180, zIndex: 1,\r\n                    radius: '65%'\r\n                }],\r\n                startAngle: 230,\r\n                minorTicks: { width: 0 },\r\n                labelStyle: { font: { size: '0' } },\r\n                endAngle: 130,\r\n                majorTicks: { width: 0 },\r\n                lineStyle: { width: 0 },\r\n                ranges: [{\r\n                    start: 0, end: 50,\r\n                    startWidth: 15, endWidth: 15,\r\n                    color: '#EC121C'\r\n                }, {\r\n                    start: 50, end: 100,\r\n                    startWidth: 15, endWidth: 15,\r\n                    color: '#45EA0C'\r\n                }],\r\n                pointers: [{\r\n                    value: 25, radius: '60%',\r\n                    animation: { enable: false },\r\n                    color: '#777777', pointerWidth: 5,\r\n                    cap: {\r\n                        radius: 6,\r\n                        border: { width: 0 },\r\n                        color: '#777777'\r\n                    },\r\n                    needleTail: {\r\n                        length: '25%',\r\n                        color: '#777777'\r\n                    }\r\n                }]\r\n            }]\r\n        });\r\n        return dataSampleGauge3;\r\n    }\r\n    var germany = new ej.circulargauge.CircularGauge(dataSampleGauge1(), '#container1');\r\n    var usa = new ej.circulargauge.CircularGauge(dataSampleGauge2(), '#container2');\r\n    var uk = new ej.circulargauge.CircularGauge(dataSampleGauge3(), '#container3');\r\n    var data = new ej.data.DataManager(orderData).executeLocal(new ej.data.Query().take(15));\r\n    var grid = new ej.grids.Grid({\r\n        dataSource: data,\r\n        columns: [\r\n            { field: 'Country', headerText: 'Country', width: 80 },\r\n            { field: 'Sales', headerText: 'Sales $', width: 80 },\r\n            { field: 'Target', headerText: 'Target $', width: 80 },\r\n            { field: 'vsTarget', headerText: 'vs Target', width: 80 }\r\n        ]\r\n    });\r\n    grid.appendTo('#container5');\r\n    this.toolTipInterval1 = setInterval(function () {\r\n        if (document.getElementById('container5')) {\r\n            var value1 = Math.round(Math.random() * (90 - 55) + 55);\r\n            var value2 = Math.round(Math.random() * (75 - 60) + 60);\r\n            var value3 = Math.round(Math.random() * (40 - 10) + 10);\r\n            var gridData1 = 4 * value1;\r\n            var gridData2 = 6 * value2;\r\n            var gridData3 = 7 * value3;\r\n            var orderData_1 = [\r\n                {\r\n                    'Country': 'Germany',\r\n                    'Sales': 500,\r\n                    'Target': 400,\r\n                    'vsTarget': gridData1\r\n                }, {\r\n                    'Country': 'USA',\r\n                    'Sales': 1000,\r\n                    'Target': 600,\r\n                    'vsTarget': gridData2\r\n                }, {\r\n                    'Country': 'UK',\r\n                    'Sales': 600,\r\n                    'Target': 700,\r\n                    'vsTarget': -gridData3\r\n                }\r\n            ];\r\n            var data_1 = new ej.data.DataManager(orderData_1).executeLocal(new ej.data.Query().take(3));\r\n            grid.dataSource = data_1;\r\n            grid.refresh();\r\n            germany.axes[0].pointers[0].animation.enable = true;\r\n            usa.axes[0].pointers[0].animation.enable = true;\r\n            uk.axes[0].pointers[0].animation.enable = true;\r\n            germany.setPointerValue(0, 0, value1);\r\n            usa.setPointerValue(0, 0, value2);\r\n            uk.setPointerValue(0, 0, value3);\r\n            germany.setAnnotationValue(0, 0, '#germany');\r\n            usa.setAnnotationValue(0, 0, '#usa');\r\n            uk.setAnnotationValue(0, 0, '#uk');\r\n        }\r\n        else {\r\n            clearInterval(this.toolTipInterval1);\r\n        }\r\n    }, 2000);\r\n"}