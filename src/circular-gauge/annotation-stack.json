{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <div id=\"clockgauge\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}function gauge1() {\n    var gauge1 = new ej.circulargauge.CircularGauge({\n        centerY: '45%',\n        resized: function (args) {\n            location.reload();\n        },\n\n        titleStyle: { color: 'black', size: '16px' },\n        axes: [\n            {\n                startAngle: 0, endAngle: 0,\n                lineStyle: { width: 0 }, radius: ej.base.Browser.isDevice ? '90%' : '70%',\n                ranges: [\n                    {\n                        start: 0, end: 3,\n                        color: 'rgba(29,29,29,0.6)'\n                    }, {\n                        start: 3, end: 12,\n                        color: 'rgba(226, 226, 226, 0.6)'\n                    }\n                ],\n                annotations: [{\n                    angle: 270, radius: '50%', zIndex: '1',\n                    content: '<div id=\"minutes\" style=\"width:75px;height:75px;\"></div>'\n                }, {\n                    angle: 180, radius: '50%', zIndex: '1',\n                    content: '<div id=\"seconds\" style=\"width:75px;height:75px;\"></div>'\n                }, {\n                    angle: 90, zIndex: '1',\n                    radius: '40%',\n                    content: '<div id=\"hr\" style=\"background-color:rgba(29,29,29,0.6); color:white;font-size:12px;\">11:11 AM</div>'\n                }, {\n                    angle: 360, radius: '50%', zIndex: '1',\n                    content: '<div id=\"tm\" style=\"font-size:10px;\">21-06-17</div>'\n                }],\n                labelStyle: {\n                    hiddenLabel: 'First', font: { color: 'rgb(29,29,29)' }, autoAngle: false\n                }, majorTicks: {\n                    width: 2, height: 14, interval: 1, color: 'rgb(29,29,29)'\n                }, minorTicks: {\n                    height: 4, width: 1, interval: 0.2, color: 'rgb(29,29,29)'\n                },\n                minimum: 0, maximum: 12,\n                pointers: [{\n                    pointerWidth: 5, radius: '40%', color: 'rgba(29,29,29,0.8)',\n                    border: { width: 0, color: '#679EEF' },\n                    cap: { radius: 0, border: { width: 0, color: 'red' } },\n                    needleTail: { length: '0%' }, animation: { enable: false }\n                }, {\n                    radius: '60%', pointerWidth: 5, color: 'rgba(29,29,29,0.8)',\n                    border: {\n                        width: 0,\n                        color: 'rgba(29,29,29,0.8)'\n                    },\n                    cap: {\n                        color: 'rgba(29,29,29,0.8)',\n                        radius: 0,\n                        border: {\n                            width: 0,\n                            color: 'red'\n                        }\n                    },\n                    needleTail: {\n                        length: '0%'\n                    }, animation: {\n                        enable: false\n                    }\n                }, {\n                    radius: '70%',\n                    pointerWidth: 1,\n                    color: 'rgba(29,29,29,0.8)',\n                    cap: {\n                        color: 'white',\n                        radius: 4,\n                        border: {\n                            width: 2,\n                            color: 'rgba(29,29,29,0.8)'\n                        }\n                    },\n                    border: {\n                        width: 2,\n                        color: 'rgba(29,29,29,0.8)'\n                    },\n                    needleTail: {\n                        color: 'rgba(29,29,29,0.8)',\n                        length: '20%',\n                        border: {\n                            width: 2,\n                            color: 'rgba(29,29,29,0.8)'\n                        },\n                    }, animation: {\n                        enable: false,\n                        duration: 500\n                    }\n                }]\n            }\n        ]\n    });\n    return gauge1;\n}\nfunction gauge2() {\n    var gauge2 = new ej.circulargauge.CircularGauge({\n        titleStyle: { color: 'black' },\n\n        axes: [\n            {\n                startAngle: 0, endAngle: 0,\n                ranges: [\n                    {\n                        startWidth: 4, endWidth: 4,\n                        start: 0, end: 3,\n                        color: 'rgba(29,29,29,0.4)'\n                    }, {\n                        color: 'rgba(168,145,102,0.1)',\n                        start: 3, end: 12,\n                        startWidth: 4, endWidth: 4\n                    }\n                ],\n                lineStyle: { width: 0 },\n                annotations: [{\n                    angle: 270,\n                    radius: '40%',\n                    content: null\n                }, {\n                    angle: 180,\n                    radius: '40%',\n                    content: null\n                }, {\n                    angle: 90,\n                    radius: '50%',\n                    content: null\n                }, {\n                    radius: '35%',\n                    angle: 360, zIndex: '1',\n                    content: '<div id=\"tm\" style=\"font-size:10px;\">21-06-17</div>'\n                }], majorTicks: {\n                    width: 1,\n                    height: 5,\n                    interval: 1\n                },\n                labelStyle: {\n                    hiddenLabel: 'First',\n                    font: {\n                        color: '#8c8c8c',\n                        size: '0px'\n                    },\n                    autoAngle: false\n                }, minorTicks: {\n                    height: 3,\n                    width: 0.5,\n                    interval: 0.2\n                },\n                minimum: 0,\n                maximum: 12,\n                pointers: [{\n                    radius: '70%',\n                    pointerWidth: 2,\n                    color: 'rgba(29,29,29,1)',\n                    cap: {\n                        color: 'rgba(29,29,29,1)',\n                        radius: 2,\n                        border: {\n                            width: 0.2,\n                            color: 'rgba(168,145,102,1)'\n                        }\n                    },\n                    needleTail: {\n                        color: 'rgba(168,145,102,1)',\n                        length: '10%'\n                    }, animation: {\n                        enable: false,\n                        duration: 500\n                    }\n                }]\n            }\n        ]\n    });\n    return gauge2;\n}\n\nfunction calcTime(offset) {\n    var date = new Date();\n    var localTime = date.getTime();\n    var localOffset = date.getTimezoneOffset() * 60000;\n    var utc = localTime + localOffset;\n    var curretDate = new Date(utc + (3600000 * (+offset)));\n    return curretDate;\n}\n\n    var clockInterval;\n    var intervalExecute = true;\n    var indianTime = new ej.circulargauge.CircularGauge(gauge1());\n    var subGauge1;\n    var subGauge2;\n    indianTime.appendTo('#clockgauge');\n    updateSubGauge1.apply(this);\n    updateSubGauge2.apply(this);\n    function updateSubGauge1() {\n        subGauge1 = new ej.circulargauge.CircularGauge(gauge2());\n        subGauge1.appendTo('#minutes');\n    }\n    function updateSubGauge2() {\n        var _this = this;\n        subGauge2 = new ej.circulargauge.CircularGauge({\n\n            axes: [{\n                ranges: [{ start: 0, end: 3, startWidth: 4, endWidth: 4, color: 'rgba(29,29,29,0.4)' },\n                { start: 3, end: 12, startWidth: 4, endWidth: 4, color: 'rgba(168,145,102,0.1)' }],\n                annotations: [{ angle: 270, radius: '40%', content: null },\n                { angle: 180, radius: '40%', content: null },\n                { angle: 90, radius: '50%', content: null },\n                { angle: 360, radius: '35%', zIndex: '1', content: '<div id=\"tm\" style=\"font-size:10px;\">21-06-17</div>' }],\n                majorTicks: { width: 1, height: 5, interval: 1 },\n                labelStyle: { hiddenLabel: 'First', font: { color: '#8c8c8c', size: '0px' }, autoAngle: false },\n                pointers: [{\n                    cap: {\n                        color: 'rgba(29,29,29,1)', radius: 2, border: { width: 0.2, color: 'rgba(168,145,102,1)' }\n                    }, needleTail: { color: 'rgba(168,145,102,1)', length: '10%' }, animation: { enable: false, duration: 500 },\n                    radius: '70%', pointerWidth: 2, color: 'rgba(29,29,29,1)'\n                }], startAngle: 0, endAngle: 0, lineStyle: { width: 0 },\n                minorTicks: { height: 3, width: 0.5, interval: 0.2 }, minimum: 0, maximum: 12,\n            }],\n            loaded: intervalExecute ? (function (args) {\n                if (intervalExecute) {\n                    updateTime(false);\n                    _this.clockInterval = setInterval(function () {\n                        updateTime(true, _this.clearInterval);\n                    }, 1000);\n                    intervalExecute = false;\n                }\n            }) : null\n        });\n        subGauge2.appendTo('#seconds');\n    }\n    function updateTime(enable, interval) {\n        if (document.getElementById('clockgauge') && document.getElementsByClassName('e-circulargauge')) {\n            getTime('+5.5', indianTime, enable);\n            if (document.getElementById('minutes').childElementCount) {\n                getTime('+5.5', subGauge1, enable, true);\n            }\n            else {\n                updateSubGauge1();\n                getTime('+5.5', subGauge1, enable, true);\n            }\n            if (document.getElementById('seconds').childElementCount) {\n                getTime('+5.5', subGauge2, enable, true);\n            }\n            else {\n                updateSubGauge2();\n                getTime('+5.5', subGauge2, enable, true);\n            }\n        }\n        else {\n            clearInterval(interval);\n        }\n    }\n    function getTime(offset, gauge, enable, subGauge) {\n        var returnTime = calcTime(offset);\n        var seconds = returnTime.getSeconds() * 12 / 60;\n        seconds = seconds === 0 ? 12 : seconds;\n        if (!subGauge) {\n            gauge.axes[0].pointers[2].animation.enable = enable;\n            gauge.axes[0].pointers[2].currentValue = seconds === 0.2 ? 0 : gauge.axes[0].pointers[2].currentValue;\n        }\n        else {\n            gauge.axes[0].pointers[0].currentValue = seconds === 0.2 ? 0 : gauge.axes[0].pointers[0].currentValue;\n            gauge.axes[0].pointers[0].animation.enable = (gauge.element.id === 'seconds' && enable);\n        }\n        var hour = (returnTime.getHours() + returnTime.getMinutes() / 60) % 12;\n        var minutes = returnTime.getMinutes() * 12 / 60 + returnTime.getSeconds() * 12 / 3600;\n        var content;\n        var hourValue;\n        if (subGauge) {\n            if (gauge.element.id === 'minutes') {\n                content = '<div id=\"tm\" style=\"font-size:8px;\">' + Math.floor(returnTime.getMinutes()) + ' M</div>';\n                gauge.setPointerValue(0, 0, minutes);\n                gauge.setAnnotationValue(0, 3, content);\n            }\n            else {\n                gauge.setPointerValue(0, 0, seconds);\n                content = '<div id=\"tm\" style=\"font-size:8px;\">' + Math.floor(returnTime.getSeconds()) + ' S</div>';\n                gauge.setAnnotationValue(0, 3, content);\n            }\n        }\n        else {\n            gauge.setPointerValue(0, 0, hour);\n            gauge.setPointerValue(0, 1, minutes);\n            gauge.setPointerValue(0, 2, seconds);\n            hourValue = (Math.floor(returnTime.getHours()) % 12);\n            content = '<div id=\"hr\" style=\"background-color:rgba(226, 226, 226, 0.4);' +\n                'color:rgba(29,29,29,0.9);padding:4px;font-size:12px;\">' +\n                (hourValue === 0 ? 12 : hourValue) + ':' + Math.floor(returnTime.getMinutes()) +\n                (returnTime.getHours() >= 12 ? ' PM' : ' AM') + '</div>';\n            gauge.setAnnotationValue(0, 2, content);\n            var date = new Date();\n            content = '<div id=\"tm\" style=\"font-size:10px;\">' + date.getDate() + '-' +\n                (date.getMonth() + 1) + '-' + date.getFullYear() + '</div>';\n            gauge.setAnnotationValue(0, 3, content);\n        }\n    }\n"}