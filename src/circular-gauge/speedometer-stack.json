{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"container\" align=\"center\"></div>\n        </div>\n    </div>\n    </div>\n    <!-- Property Panel -->\n    <div class=\"col-lg-3 property-section\">\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n                <tbody>                       \n                        <tr>\n                                <td style=\"width: 40%\">\n                                    <div class=\"property-text\"> Show text labels</div>\n                                </td>\n                                <td style=\"width: 40%;\">\n                                    <div>\n                                        <input type=\"checkbox\" id=\"showText\" checked>\n                                    </div>\n                                </td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 40%\">\n                                <div class=\"property-text\"> Combine ranges</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div>\n                                    <input type=\"checkbox\" id=\"combineRange\" checked>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 40%\">\n                                <div class=\"property-text\"> Gap between ranges</div>\n                            </td>\n                            <td style=\"width: 40%;\">\n                                <div>\n                                    <input type=\"checkbox\" id=\"range\" checked>\n                                </div>\n                            </td>\n                    </tr>\n                </tbody>\n            </table>\n    </div>\n    <script id=\"pointerValue\" type=\"text/x-template\">\n        <div id='templateWrap'>\n            <div class='des'>\n                <div id='pointerannotation' style=\"width:90px;text-align:center;font-size:20px;font-family:Roboto\">${pointers[0].value} km/h</div>\n            </div>\n        </div>\n    </script>\n<svg style=\"height:0px;width:0px\">\n    <defs>\n      <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n        <stop offset=\"0%\" style=\"stop-color:#82b944;stop-opacity:1\"/>\n        <stop offset=\"50%\" style=\"stop-color:rgb(255,255,0);stop-opacity:1\"/>\n        <stop offset=\"100%\" style=\"stop-color:red;stop-opacity:1\"/>\n      </linearGradient>\n    </defs>   \n  </svg>\n  \n</div></body></html>","index.js":"{{ripple}}/**\n * Speedometer sample\n */\n\nfunction gauge6() {\n    var gauge6 = new ej.circulargauge.CircularGauge({\n\n        title: 'Speedometer',\n        titleStyle: { size: '18px' },\n        centerY: '75%',\n        axes: [{\n            radius: '120%',\n            minimum: 0,\n            maximum: 120,\n            lineStyle: { width: 0 },\n            majorTicks: { width: 0, },\n            minorTicks: { width: 0 },\n            labelStyle: { useRangeColor: false, position: 'Outside', autoAngle: true,\n            font: { size: '13px', fontFamily: 'Roboto' } },\n            startAngle: 270, endAngle: 90,\n            pointers: [{\n                    animation: { enable: true, duration: 900 },\n                    value: 40,\n                    radius: '80%',\n                    color: '#757575',\n                    pointerWidth: 7,\n                    cap: {\n                        radius: 8,\n                        color: '#757575',\n                        border: { width: 0 }\n                    },\n                    needleTail: {\n                        color: '#757575',\n                        length: '15%'\n                    },\n                }],\n            annotations: [\n                {\n                    content: '#pointerValue',\n                    angle: 0, zIndex: '1',\n                    radius: '30%'\n                }\n            ],\n            ranges: [\n                {\n                    start: 0,\n                    end: 20,\n                    startWidth: 5, endWidth: 10,\n                    radius: '102%',\n                    color: '#82b944',\n                },\n                {\n                    start: 20,\n                    end: 40,\n                    startWidth: 10, endWidth: 15,\n                    radius: '102%',\n                    color: '#a1cb43',\n                }, {\n                    start: 40,\n                    end: 60,\n                    startWidth: 15, endWidth: 20,\n                    radius: '102%',\n                    color: '#ddec12',\n                },\n                {\n                    start: 60,\n                    end: 80,\n                    startWidth: 20, endWidth: 25,\n                    radius: '102%',\n                    color: '#ffbc00',\n                },\n                {\n                    start: 80,\n                    end: 100,\n                    startWidth: 25, endWidth: 30,\n                    radius: '102%',\n                    color: '#ff6000',\n                },\n                {\n                    start: 100,\n                    end: 120,\n                    startWidth: 30, endWidth: 35,\n                    radius: '102%',\n                    color: 'red',\n                }\n            ]\n        }],\n    });\n    return gauge6;\n}\n\n    var circulargauge = new ej.circulargauge.CircularGauge(this.gauge6());\n    circulargauge.appendTo('#container');\n\n    var gauge5Interval1 = setInterval(function () {\n        var newVal = circulargauge.axes[0].pointers[0].value + (Math.floor(Math.random() * (10 - (-10))) - 10);\n        if (newVal <= 0) {\n            newVal = 5;\n        }\n        if (document.getElementById('container')) {\n            circulargauge.axes[0].pointers[0].animation.enable = true;\n            circulargauge.setPointerValue(0, 0, newVal);\n            if (!ej.base.isNullOrUndefined(document.getElementById('pointerannotation'))) {\n                document.getElementById('pointerannotation').innerHTML = newVal.toString() + ' km/h';\n            }\n        }\n        else {\n            clearInterval(this.gauge5Interval1);\n        }\n    }, 1000);\n    // Code for Property Panel\n    var showText;\n    var interval = new ej.buttons.CheckBox({\n        change: showText, checked: false\n    }, '#showText');\n    var combineRange;\n    var rangeSet = new ej.buttons.CheckBox({\n        change: combineRange, checked: false\n    }, '#combineRange');\n    var range;\n    var showCheckBox = new ej.buttons.CheckBox({\n        change: range, checked: false\n    }, '#range');\n    rangeSet.change = combineRange = function (e) {\n        if (e.checked === true) {\n            showCheckBox.disabled = true;\n            circulargauge.axes[0].ranges[0].start = 0;\n            circulargauge.axes[0].ranges[0].end = 120;\n            circulargauge.axes[0].ranges[0].startWidth = 5;\n            circulargauge.axes[0].ranges[0].endWidth = 35;\n            circulargauge.axes[0].ranges[0].color = 'url(#grad1)';\n            circulargauge.axes[0].ranges[1].start = null;\n            circulargauge.axes[0].ranges[1].end = null;\n            circulargauge.axes[0].ranges[1].startWidth = '';\n            circulargauge.axes[0].ranges[1].endWidth = '';\n            circulargauge.axes[0].ranges[1].color = '';\n            circulargauge.axes[0].ranges[2].start = null;\n            circulargauge.axes[0].ranges[2].end = null;\n            circulargauge.axes[0].ranges[2].startWidth = '';\n            circulargauge.axes[0].ranges[2].endWidth = '';\n            circulargauge.axes[0].ranges[2].color = '';\n            circulargauge.axes[0].ranges[3].start = null;\n            circulargauge.axes[0].ranges[3].end = null;\n            circulargauge.axes[0].ranges[3].startWidth = '';\n            circulargauge.axes[0].ranges[3].endWidth = '';\n            circulargauge.axes[0].ranges[3].color = '';\n            circulargauge.axes[0].ranges[4].start = null;\n            circulargauge.axes[0].ranges[4].end = null;\n            circulargauge.axes[0].ranges[4].startWidth = '';\n            circulargauge.axes[0].ranges[4].endWidth = '';\n            circulargauge.axes[0].ranges[4].color = '';\n            circulargauge.axes[0].ranges[5].start = null;\n            circulargauge.axes[0].ranges[5].end = null;\n            circulargauge.axes[0].ranges[5].startWidth = '';\n            circulargauge.axes[0].ranges[5].endWidth = '';\n            circulargauge.axes[0].ranges[5].color = '';\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n        else {\n            showCheckBox.disabled = false;\n            circulargauge.axes[0].ranges[0].start = 0;\n            circulargauge.axes[0].ranges[0].end = 20;\n            circulargauge.axes[0].ranges[0].startWidth = 5;\n            circulargauge.axes[0].ranges[0].endWidth = 10;\n            circulargauge.axes[0].ranges[0].color = '#82b944';\n            circulargauge.axes[0].ranges[1].start = 20;\n            circulargauge.axes[0].ranges[1].end = 40;\n            circulargauge.axes[0].ranges[1].startWidth = 10;\n            circulargauge.axes[0].ranges[1].endWidth = 15;\n            circulargauge.axes[0].ranges[1].color = '#a1cb43';\n            circulargauge.axes[0].ranges[2].start = 40;\n            circulargauge.axes[0].ranges[2].end = 60;\n            circulargauge.axes[0].ranges[2].startWidth = 15;\n            circulargauge.axes[0].ranges[2].endWidth = 20;\n            circulargauge.axes[0].ranges[2].color = '#ddec12';\n            circulargauge.axes[0].ranges[3].start = 60;\n            circulargauge.axes[0].ranges[3].end = 80;\n            circulargauge.axes[0].ranges[3].startWidth = 20;\n            circulargauge.axes[0].ranges[3].endWidth = 25;\n            circulargauge.axes[0].ranges[3].color = '#ffbc00';\n            circulargauge.axes[0].ranges[4].start = 80;\n            circulargauge.axes[0].ranges[4].end = 100;\n            circulargauge.axes[0].ranges[4].startWidth = 25;\n            circulargauge.axes[0].ranges[4].endWidth = 30;\n            circulargauge.axes[0].ranges[4].color = '#ff6000';\n            circulargauge.axes[0].ranges[5].start = 100;\n            circulargauge.axes[0].ranges[5].end = 120;\n            circulargauge.axes[0].ranges[5].startWidth = 30;\n            circulargauge.axes[0].ranges[5].endWidth = 35;\n            circulargauge.axes[0].ranges[5].color = 'red';\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n    };\n    interval.change = range = function (e) {\n        if (e.checked === true) {\n            circulargauge.axes[0].majorTicks.interval = 10;\n            circulargauge.axisLabelRender = function (args) {\n                var text;\n                switch (parseInt(args.text)) {\n                    case 10:\n                        text = 'Ideal';\n                        break;\n                    case 30:\n                        text = 'Safe';\n                        break;\n                    case 50:\n                        text = 'Good';\n                        break;\n                    case 70:\n                        text = 'Ok';\n                        break;\n                    case 90:\n                        text = 'Risk';\n                        break;\n                    case 110:\n                        text = 'Danger';\n                        break;\n                    default:\n                        text = '';\n                        break;\n                }\n                args.text = text;\n            };\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n        else {\n            circulargauge.axes[0].majorTicks.interval = 20;\n            circulargauge.axes[0].minimum = 0;\n            circulargauge.axes[0].maximum = 120;\n            circulargauge.axisLabelRender = function (args) { };\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n    };\n    showCheckBox.change = range = function (e) {\n        if (e.checked) {\n            circulargauge.axes[0].rangeGap = 5;\n        }\n        else {\n            circulargauge.axes[0].rangeGap = null;\n        }\n        circulargauge.axes[0].pointers[0].animation.enable = false;\n        circulargauge.refresh();\n    };\n"}