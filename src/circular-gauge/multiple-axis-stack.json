{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"axis-container\"></div>\n        </div>\n    </div>\n    <!-- Property panel -->\n    <div class=\"col-md-4 property-section\">\n        &#xA0;\n            &#xA0;\n            &#xA0;\n            <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr>\n                <td>\n                    <div> Axis </div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"axisIndex\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"0\" selected=\"true\">Axis 1</option>\n                            <option value=\"1\">Axis 2</option>\n                        </select>\n                    </div>\n                </td>\n            </tr><tr>\n                <td>\n                    <div> Direction </div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"axisDirection\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"ClockWise\" selected=\"true\">ClockWise</option>\n                            <option value=\"AntiClockWise\">AntiClockWise</option>\n                        </select>\n                    </div>\n                </td>\n            </tr><tr>\n                <td>\n                    <div id=\"start\">Start Angle <span> &#xA0;&#xA0;&#xA0;220</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"startAngle\" value=\"220\" min=\"0\" max=\"360\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr><tr>\n                <td>\n                    <div id=\"end\">End Angle <span> &#xA0;&#xA0;&#xA0;140</span> </div>\n                </td>\n                <td>\n                    <div>\n                        <input type=\"range\" id=\"endAngle\" value=\"140\" min=\"0\" max=\"360\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Sample for Multiple Axes\n */\n\n    var axisIndex = 0;\n    var axis;\n    var direction;\n    var circulargauge = new ej.circulargauge.CircularGauge({\n\n        title: 'Gauge with Multiple Axes',\n        titleStyle: { color: 'gray', size: '16px' },\n        axes: [{\n            lineStyle: { width: 1.5, color: ' #9E9E9E' },\n            radius: '95%',\n            labelStyle: {\n                position: 'Inside', autoAngle: true,\n                hiddenLabel: 'None'\n            }, majorTicks: {\n                position: 'Inside',\n                width: 2, height: 10, color: '#757575'\n            }, minorTicks: {\n                position: 'Inside', width: 2,\n                height: 5, color: '#757575'\n            },\n            minimum: 0, maximum: 160, startAngle: 220, endAngle: 140,\n            pointers: [{\n                value: 80, radius: '100%', color: '#333333',\n                markerHeight: 15, markerWidth: 15, type: 'Marker',\n                markerShape: 'Triangle',\n            }]\n        }, {\n            lineStyle: { width: 1.5, color: '#E84011' }, radius: '95%',\n            labelStyle: {\n                position: 'Outside', autoAngle: true,\n                hiddenLabel: 'None', font: { color: '#E84011' }\n            }, majorTicks: {\n                position: 'Outside', width: 2, height: 10,\n                color: '#E84011'\n            }, minorTicks: {\n                position: 'Outside', width: 2,\n                height: 5, color: '#E84011'\n            },\n            minimum: 0, maximum: 240, startAngle: 220, endAngle: 140,\n            pointers: [{\n                value: 120, radius: '100%', color: '#C62E0A',\n                markerHeight: 15, markerWidth: 15, type: 'Marker',\n                markerShape: 'InvertedTriangle',\n            }]\n        }]\n    });\n    circulargauge.appendTo('#axis-container');\n    // code for Property Panel\n    axis = new ej.dropdowns.DropDownList({\n        index: 0, width: 120,\n        change: function () {\n            axisIndex = +axis.value;\n            direction.value = circulargauge.axes[axisIndex].direction;\n            var startAngle = circulargauge.axes[axisIndex].startAngle;\n            var endAngle = circulargauge.axes[axisIndex].endAngle;\n            document.getElementById('start').innerHTML = 'Start Angle <span> &nbsp;&nbsp;&nbsp;' + startAngle;\n            document.getElementById('end').innerHTML = 'End Angle <span> &nbsp;&nbsp;&nbsp;' + endAngle;\n            document.getElementById('startAngle').value = startAngle.toString();\n            document.getElementById('endAngle').value = endAngle.toString();\n        }\n    });\n    axis.appendTo('#axisIndex');\n    direction = new ej.dropdowns.DropDownList({\n        index: 0, width: 120,\n        change: function () {\n            circulargauge.axes[axisIndex].direction = direction.value.toString();\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.axes[1].pointers[0].animation.enable = false;\n            circulargauge.refresh();\n        }\n    });\n    direction.appendTo('#axisDirection');\n    document.getElementById('startAngle').onpointermove = document.getElementById('startAngle').ontouchmove =\n        document.getElementById('startAngle').onchange = function () {\n            var value = parseInt(document.getElementById('startAngle').value, 10);\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.axes[1].pointers[0].animation.enable = false;\n            circulargauge.axes[axisIndex].startAngle = value;\n            document.getElementById('start').innerHTML = 'Start Angle <span> &nbsp;&nbsp;&nbsp;' + value;\n            circulargauge.axes[axisIndex].labelStyle.hiddenLabel =\n                ej.circulargauge.isCompleteAngle(circulargauge.axes[axisIndex].startAngle, circulargauge.axes[axisIndex].endAngle) ?\n                    'First' : 'None';\n            circulargauge.refresh();\n        };\n    document.getElementById('endAngle').onpointermove = document.getElementById('endAngle').ontouchmove =\n        document.getElementById('endAngle').onchange = function () {\n            var value = parseInt(document.getElementById('endAngle').value, 10);\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.axes[1].pointers[0].animation.enable = false;\n            circulargauge.axes[axisIndex].endAngle = value;\n            document.getElementById('end').innerHTML = 'End Angle <span> &nbsp;&nbsp;&nbsp;' + value;\n            circulargauge.axes[axisIndex].labelStyle.hiddenLabel =\n                ej.circulargauge.isCompleteAngle(circulargauge.axes[axisIndex].startAngle, circulargauge.axes[axisIndex].endAngle) ?\n                    'First' : 'None';\n            circulargauge.refresh();\n        };\n"}