{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"user-container\"></div>\n        </div>\n    </div>\n    <!-- Property Panel -->\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div id=\"pointerValue\">Pointer Value <span> &#xA0;&#xA0;&#xA0;70</span> </div>\n                </td>\n                <td style=\"width: 40%;\">\n                    <div>\n                        <input type=\"range\" id=\"value\" value=\"70\" min=\"0\" max=\"120\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 20%\">\n                    <div id=\"enablePointer\">Enable Drag</div>\n                </td>\n                <td style=\"width: 40%;\">\n                    <div>\n                        <input type=\"checkbox\" id=\"enable\" checked=\"true\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}/**\n * Sample for Pointer drag\n */\n\n    var content = '<div style=\"font-size: 14px;color:#E5C31C;font-weight: lighter;font-style: oblique;\"><span>';\n    var pointerValue;\n    var circulargauge = new ej.circulargauge.CircularGauge({\n        enablePointerDrag: true,\n        dragMove: function (args) {\n            pointerValue = Math.round(args.currentValue);\n            document.getElementById('pointerValue').innerHTML = 'Pointer Value <span> &nbsp;&nbsp;&nbsp;' + pointerValue;\n            document.getElementById('value').value = pointerValue.toString();\n            circulargauge.setAnnotationValue(0, 0, content + pointerValue + ' MPH</span></div>');\n        },\n        dragEnd: function (args) {\n            pointerValue = Math.round(args.currentValue);\n            setPointersValue(circulargauge, pointerValue);\n        },\n\n        axes: [{\n            annotations: [{\n                content: content + '70 MPH</span></div>',\n                angle: 180, zIndex: '1',\n                radius: '45%'\n            }],\n            endAngle: 140,\n            startAngle: 220,\n            lineStyle: { width: 0, color: '#9E9E9E' },\n            radius: '80%', minimum: 0,\n            maximum: 120,\n            majorTicks: { useRangeColor: true },\n            minorTicks: { useRangeColor: true },\n            labelStyle: { useRangeColor: true },\n            ranges: [{\n                start: 0,\n                end: 40,\n                startWidth: 8, endWidth: 8,\n                radius: '108%',\n                color: '#30B32D'\n            }, {\n                start: 40,\n                end: 100,\n                startWidth: 8, endWidth: 8,\n                radius: '108%',\n                color: '#E5C31C'\n            }, {\n                start: 100, end: 120,\n                startWidth: 8, endWidth: 8,\n                radius: '108%',\n                color: '#F03E3E'\n            }],\n            pointers: [{\n                type: 'Marker', value: 70,\n                markerShape: 'InvertedTriangle',\n                radius: '110%',\n                markerHeight: 20,\n                color: '#E5C31C',\n                markerWidth: 20\n            }, {\n                value: 70,\n                radius: '60%',\n                cap: { radius: 10, border: { width: 5, color: '#E5C31C' } },\n                needleTail: { length: '0%', color: '#E5C31C' },\n                color: '#E5C31C',\n                markerWidth: 5\n            }]\n        }]\n    });\n    circulargauge.appendTo('#user-container');\n    function setPointersValue(circulargauge, pointerValue) {\n        var color = ej.circulargauge.getRangeColor(pointerValue, (circulargauge.axes[0].ranges), circulargauge.axes[0].pointers[0].color);\n        circulargauge.axes[0].pointers[0].color = color;\n        circulargauge.axes[0].pointers[1].color = color;\n        circulargauge.axes[0].pointers[0].animation.enable = true;\n        circulargauge.axes[0].pointers[1].animation.enable = true;\n        circulargauge.axes[0].pointers[0].needleTail.color = color;\n        circulargauge.axes[0].pointers[1].needleTail.color = color;\n        circulargauge.axes[0].pointers[0].cap.border.color = color;\n        circulargauge.axes[0].pointers[1].cap.border.color = color;\n        circulargauge.setPointerValue(0, 1, pointerValue);\n        circulargauge.setPointerValue(0, 0, pointerValue);\n        content = '<div style=\"font-size: 14px;color:' + color + ';font-weight: lighter;font-style: oblique;\"><span>';\n        circulargauge.setAnnotationValue(0, 0, content + pointerValue + ' MPH</span></div>');\n    }\n    //Code for Property Panel \n    document.getElementById('value').ontouchmove = document.getElementById('value').onpointermove =\n        document.getElementById('value').onchange = function () {\n            var pointerValue = parseInt(document.getElementById('value').value, 10);\n            setPointersValue(circulargauge, pointerValue);\n            document.getElementById('pointerValue').innerHTML = 'Pointer Value <span> &nbsp;&nbsp;&nbsp;' + pointerValue;\n        };\n    document.getElementById('enable').onchange = function () {\n        var value = document.getElementById('enable').checked;\n        circulargauge.enablePointerDrag = value;\n    };\n"}