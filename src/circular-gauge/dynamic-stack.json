{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-1\">\n                </div>\n                <div class=\"col-sm-10\">\n                    <div id=\"dynamic-container\" style=\"height:400px;\">\n                    </div>\n                </div>\n                <div class=\"col-sm-11\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<svg style=\"height: 0\">\n    <defs>\n        <linearGradient id=\"bordercolor\" x1=\"1.8369701987210297e-16\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"30%\" stop-color=\"#565656\" stop-opacity=\"1\"/>\n            <stop offset=\"60%\" stop-color=\"#565656\" stop-opacity=\"1\"/>\n            <stop offset=\"90%\" stop-color=\"#565656\" stop-opacity=\"1\"/>\n            <stop offset=\"100%\" stop-color=\"#565656\" stop-opacity=\"1\"/>\n        </linearGradient>\n    </defs>\n</svg>\n\n\n<script id=\"tool\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/battery.png\">\n    </div>\n</script>\n<script id=\"fuelContent\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"//npmci.syncfusion.com/production/demos/src/circular-gauge/images/fuel.png\">\n    </div>\n</script></div></body></html>","index.js":"{{ripple}}define([\"require\", \"exports\", \"@syncfusion/ej2-circulargauge\", \"@syncfusion/ej2-circulargauge\", \"./dynamic-gauge\"], function (require, exports, ej2_circulargauge_1, ej2_circulargauge_2, dynamic_gauge_1) {\n    \"use strict\";\n    var _this = this;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    \n        var toolTipInterval;\n        var toolTipInterval1;\n        var GEARS = [0.14, 0.06, 0.035, 0.027, 0.019];\n        var speed = 0;\n        var skip = 0;\n        var gear = 0;\n        var count = 0;\n        var start = true;\n        var circulargauge1 = new ej2_circulargauge_1.CircularGauge(dynamic_gauge_1.gauge());\n        circulargauge1.appendTo('#dynamic-container');\n        var circulargauge2 = new ej2_circulargauge_1.CircularGauge(dynamic_gauge_1.gauge1());\n        circulargauge2.appendTo('#rpm');\n        var circulargauge3 = new ej2_circulargauge_1.CircularGauge(dynamic_gauge_1.gauge2());\n        circulargauge3.appendTo('#fuel');\n        var circulargauge4 = new ej2_circulargauge_1.CircularGauge(dynamic_gauge_1.gauge3());\n        circulargauge4.appendTo('#battery');\n        _this.toolTipInterval1 = setInterval(function () {\n            if (document.getElementById('dynamic-container')) {\n                if (speed < 200 && start) {\n                    count = 0;\n                    circulargauge1.axes[0].pointers[0].animation.duration = 30;\n                    circulargauge2.axes[0].pointers[0].animation.duration = 30;\n                    if (GEARS[gear] * speed > 4 && gear < GEARS.length) {\n                        gear++;\n                        skip = 400 / 50;\n                    }\n                    if (skip-- < 0) {\n                        speed += 0.6 - (0.0017 * speed);\n                    }\n                    circulargauge1.setPointerValue(0, 0, speed);\n                    circulargauge1.setAnnotationValue(1, 3, Math.round(speed) + ' KM/H');\n                    circulargauge2.setPointerValue(0, 0, GEARS[gear] * speed + 0.9);\n                }\n                else {\n                    count = count + 1;\n                    if (start) {\n                        if (count < 200) {\n                            circulargauge1.setAnnotationValue(1, 3, Math.round((Math.random() * (200 - 202) + 202)) + ' KM');\n                            circulargauge1.setPointerValue(0, 0, Math.random() * (200 - 202) + 202);\n                        }\n                        else {\n                            speed = 0;\n                            gear = 0;\n                            circulargauge1.axes[0].pointers[0].animation.duration = 2000;\n                            circulargauge2.axes[0].pointers[0].animation.duration = 2000;\n                            circulargauge1.setPointerValue(0, 0, speed);\n                            circulargauge1.setAnnotationValue(1, 3, Math.round(speed) + ' KM/H');\n                            circulargauge2.setPointerValue(0, 0, 0);\n                            start = false;\n                        }\n                    }\n                    else {\n                        start = count > 350;\n                    }\n                }\n            }\n            else {\n                clearInterval(_this.toolTipInterval1);\n            }\n        }, 50);\n    \n});\n"}