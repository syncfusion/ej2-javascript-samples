{"index.html":"<html><head><script src=\"http://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"http://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n        <div id=\"container\" class=\"row\">\n        </div>\n    </div>\n    <!-- Property Panel -->\n    <div class=\"col-lg-3 property-section\">\n        &#xA0; &#xA0; &#xA0; &#xA0; &#xA0; &#xA0;<br>\n        <table id=\"property\" style=\"width:100%\" title=\"Properties\">\n            <tbody>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\" id=\"radius1\">\n                        Radius<span>&#xA0;&#xA0;&#xA0;10</span>\n                    </td>\n                    <td style=\"width: 70%\">\n                        <div>\n                            <div id=\"radius\"></div>\n                        </div>\n                    </td>\n                </tr>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\">\n                        Marker\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"marker\" id=\"marker\">\n                    </td>\n                </tr>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\">\n                        Data Label\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"datalabel\" id=\"datalabel\">\n                    </td>\n                </tr>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\">\n                        Animation\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"high\" id=\"animate\">\n                    </td>\n                </tr>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\">\n                        Tooltip\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"high\" id=\"tooltip\" checked>\n                    </td>\n                </tr>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\">\n                        Legend\n                    </td>\n                    <td style=\"width: 50%\">\n                        <input type=\"checkbox\" name=\"high\" id=\"legend\" checked>\n                    </td>\n                </tr>\n                <tr style=\"height: 35px\">\n                    <td style=\"width: 70%\" class=\"property-text\">\n                        Legend Position\n                    </td>\n                    <td style=\"width: 50%\">\n                        <select id=\"legend1\" style=\"width: 50px; height: 20px\">\n                            <option value=\"top\">Top</option>\n                            <option value=\"bottom\">Bottom</option>\n                            <option value=\"right\">Right</option>\n                            <option value=\"left\">Left</option>\n                        </select>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    \n    \n    \n    \n    \n","index.js":"{{ripple}}\n    var smithchart = new ej.charts.Smithchart({\n\n        horizontalAxis: {\n            minorGridLines: {\n                visible: true\n            }\n        },\n        radialAxis: {\n            minorGridLines: {\n                visible: true\n            }\n        },\n        series: [\n            {\n                points: [\n                    { resistance: 10, reactance: 25 }, { resistance: 8, reactance: 6 },\n                    { resistance: 6, reactance: 4.5 }, { resistance: 4.5, reactance: 4 },\n                    { resistance: 3.5, reactance: 3 }, { resistance: 2.5, reactance: 2 },\n                    { resistance: 2, reactance: 1.5 }, { resistance: 1.5, reactance: 1.25 },\n                    { resistance: 1, reactance: 0.9 }, { resistance: 0.5, reactance: 0.6 },\n                    { resistance: 0.3, reactance: 0.4 }, { resistance: 0, reactance: 0.15 },\n                ],\n                name: 'Transmission1',\n                enableAnimation: false,\n                width: 2,\n                tooltip: { visible: true },\n                enableSmartLabels: false,\n                fill: '#0F94C4',\n                marker: {\n                    shape: 'rectangle',\n                    visible: true,\n                    border: {\n                        width: 2,\n                    }\n                }\n            }, {\n                points: [\n                    { resistance: 20, reactance: -51 }, { resistance: 10, reactance: -9 },\n                    { resistance: 9, reactance: -4.4 }, { resistance: 8, reactance: -3.4 },\n                    { resistance: 7, reactance: -2.6 }, { resistance: 6, reactance: -1.6 },\n                    { resistance: 5, reactance: -1.1 }, { resistance: 4.5, reactance: -0.9 },\n                    { resistance: 3.5, reactance: -0.8 }, { resistance: 2.5, reactance: -0.4 },\n                    { resistance: 2, reactance: -0.2 }, { resistance: 1.5, reactance: 0 },\n                    { resistance: 1, reactance: 0.1 }, { resistance: 0.5, reactance: 0.1 },\n                    { resistance: 0.3, reactance: 0.15 }, { resistance: 0, reactance: 0.04 },\n                ],\n                name: 'Transmission2',\n                enableAnimation: false,\n                width: 2,\n                tooltip: { visible: true },\n                enableSmartLabels: false,\n                fill: '#EE0C88',\n                marker: {\n                    shape: 'rectangle',\n                    visible: true,\n                    border: {\n                        width: 2,\n                    }\n                }\n            },\n        ],\n        radius: 1,\n        legendSettings: {\n            visible: true,\n            position: 'Top',\n            border: { color: 'transparent' },\n            shape: 'Circle'\n        },\n        title: {\n            text: 'Impedance Transmission', enableTrim: true, maximumWidth: 200,\n            visible: true, font: { size: '16px' }\n        }\n    });\n    smithchart.appendTo('#container');\n    // Code for Property Panel\n    var sliderChange;\n    var slider = new ej.inputs.Slider({\n        value: 0, type: 'MinRange',\n        change: sliderChange,\n        max: 1, min: 0, step: 0.1\n    }, '#radius');\n    setTimeout(function() {\n        slider.value = 1;\n        slider.dataBind();\n    }, 100);\n    document.getElementById('radius1').innerHTML = 'Radius <span> ' + 1;\n    slider.change = sliderChange = function (e) {\n        smithchart.radius = e.value;\n        document.getElementById('radius1').innerHTML = 'Radius <span> ' + e.value;\n        smithchart.refresh();\n    };\n    var markerChange;\n    var markerCheckBox = new ej.buttons.CheckBox({\n        change: markerChange, checked: true\n    }, '#marker');\n    var datalabelChange;\n    var datalabelCheckBox = new ej.buttons.CheckBox({\n        change: markerChange\n    }, '#datalabel');\n    var animateChange;\n    var animateCheckBox = new ej.buttons.CheckBox({\n        change: markerChange\n    }, '#animate');\n    var tooltipChange;\n    var tooltipCheckBox = new ej.buttons.CheckBox({\n        change: markerChange, checked: true\n    }, '#tooltip');\n    var legendChange;\n    var legendCheckBox = new ej.buttons.CheckBox({\n        change: markerChange, checked: true\n    }, '#legend');\n    markerCheckBox.change = markerChange = function (e) {\n        var boolean = e.checked;\n        if (boolean) {\n            smithchart.series[0].marker.visible = true;\n            smithchart.series[1].marker.visible = true;\n        }\n        else {\n            smithchart.series[0].marker.visible = false;\n            smithchart.series[1].marker.visible = false;\n        }\n        smithchart.refresh();\n    };\n    datalabelCheckBox.change = datalabelChange = function (e) {\n        var boolean = e.checked;\n        if (boolean) {\n            smithchart.series[0].marker.dataLabel.visible = true;\n            smithchart.series[1].marker.dataLabel.visible = true;\n        }\n        else {\n            smithchart.series[0].marker.dataLabel.visible = false;\n            smithchart.series[1].marker.dataLabel.visible = false;\n        }\n        smithchart.refresh();\n    };\n    animateCheckBox.change = animateChange = function (e) {\n        var boolean = e.checked;\n        if (boolean) {\n            smithchart.series[0].enableAnimation = true;\n            smithchart.series[1].enableAnimation = true;\n        }\n        else {\n            smithchart.series[0].enableAnimation = false;\n            smithchart.series[1].enableAnimation = false;\n        }\n        smithchart.refresh();\n    };\n    tooltipCheckBox.change = tooltipChange = function (e) {\n        var boolean = e.checked;\n        if (boolean) {\n            smithchart.series[0].tooltip.visible = true;\n            smithchart.series[1].tooltip.visible = true;\n        }\n        else {\n            smithchart.series[0].tooltip.visible = false;\n            smithchart.series[1].tooltip.visible = false;\n        }\n        smithchart.refresh();\n    };\n    legendCheckBox.change = legendChange = function (e) {\n        var boolean = e.checked;\n        if (boolean) {\n            smithchart.legendSettings.visible = true;\n            mode.enabled = true;\n        }\n        else {\n            smithchart.legendSettings.visible = false;\n            mode.enabled = false;\n        }\n        smithchart.refresh();\n    };\n    var mode = new ej.dropdowns.DropDownList({\n        index: 0,\n        width: 90,\n        change: function () {\n            var element = mode.value.toString();\n            smithchart.legendSettings.position = element;\n            smithchart.refresh();\n        }\n    });\n    mode.appendTo('#legend1');\n"}